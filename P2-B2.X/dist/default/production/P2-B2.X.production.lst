

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 13 10:37:19 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    85                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    86                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    87                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    89  0000                     
    90                           ; Version 2.32
    91                           ; Generated 02/02/2021 GMT
    92                           ; 
    93                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F4321 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125  0000                     
   126                           	psect	idataBANK0
   127  0000'                    __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _HIGH_SCORE
   131  0000' 48                 	db	72
   132  0001' 69                 	db	105
   133  0002' 67                 	db	103
   134  0003' 68                 	db	104
   135  0004' 20                 	db	32
   136  0005' 73                 	db	115
   137  0006' 63                 	db	99
   138  0007' 6F                 	db	111
   139  0008' 72                 	db	114
   140  0009' 65                 	db	101
   141  000A' 3A                 	db	58
   142  000B' 20                 	db	32
   143  000C' 00                 	db	0
   144  000D' 00                 	db	0
   145  000E' 00                 	db	0
   146  000F' 00                 	db	0
   147  0010' 00                 	db	0
   148  0011' 00                 	db	0
   149  0012' 00                 	db	0
   150  0013' 00                 	db	0
   151                           
   152                           	psect	mediumconst
   153  0000'                    __pmediumconst:
   154                           	callstack 0
   155  0000' 00                 	db	0
   156  0001'                    _key9:
   157                           	callstack 0
   158  0001' 57                 	db	87
   159  0002' 58                 	db	88
   160  0003' 59                 	db	89
   161  0004' 5A                 	db	90
   162  0005' 39                 	db	57
   163  0006'                    __end_of_key9:
   164                           	callstack 0
   165  0006'                    _key7:
   166                           	callstack 0
   167  0006' 50                 	db	80
   168  0007' 51                 	db	81
   169  0008' 52                 	db	82
   170  0009' 53                 	db	83
   171  000A' 37                 	db	55
   172  000B'                    __end_of_key7:
   173                           	callstack 0
   174  000B'                    _key8:
   175                           	callstack 0
   176  000B' 54                 	db	84
   177  000C' 55                 	db	85
   178  000D' 56                 	db	86
   179  000E' 38                 	db	56
   180  000F'                    __end_of_key8:
   181                           	callstack 0
   182  000F'                    _key6:
   183                           	callstack 0
   184  000F' 4D                 	db	77
   185  0010' 4E                 	db	78
   186  0011' 4F                 	db	79
   187  0012' 36                 	db	54
   188  0013'                    __end_of_key6:
   189                           	callstack 0
   190  0013'                    _key5:
   191                           	callstack 0
   192  0013' 4A                 	db	74
   193  0014' 4B                 	db	75
   194  0015' 4C                 	db	76
   195  0016' 35                 	db	53
   196  0017'                    __end_of_key5:
   197                           	callstack 0
   198  0017'                    _key4:
   199                           	callstack 0
   200  0017' 47                 	db	71
   201  0018' 48                 	db	72
   202  0019' 49                 	db	73
   203  001A' 34                 	db	52
   204  001B'                    __end_of_key4:
   205                           	callstack 0
   206  001B'                    _key3:
   207                           	callstack 0
   208  001B' 44                 	db	68
   209  001C' 45                 	db	69
   210  001D' 46                 	db	70
   211  001E' 33                 	db	51
   212  001F'                    __end_of_key3:
   213                           	callstack 0
   214  001F'                    _key2:
   215                           	callstack 0
   216  001F' 41                 	db	65
   217  0020' 42                 	db	66
   218  0021' 43                 	db	67
   219  0022' 32                 	db	50
   220  0023'                    __end_of_key2:
   221                           	callstack 0
   222  0023'                    _ARROW:
   223                           	callstack 0
   224  0023' 2D                 	db	45
   225  0024' 3E                 	db	62
   226  0025' 20                 	db	32
   227  0026'                    __end_of_ARROW:
   228                           	callstack 0
   229  0026' 52                 	db	82
   230  0027'                    __end_of_RIGHT:
   231                           	callstack 0
   232  0027' 4C                 	db	76
   233  0028'                    __end_of_LEFT:
   234                           	callstack 0
   235  0028' 44                 	db	68
   236  0029'                    __end_of_DOWN:
   237                           	callstack 0
   238  0029' 55                 	db	85
   239  002A'                    __end_of_UP:
   240                           	callstack 0
   241  002A'                    _INFO_GAME:
   242                           	callstack 0
   243  002A' 54                 	db	84
   244  002B' 20                 	db	32
   245  002C' 20                 	db	32
   246  002D' 20                 	db	32
   247  002E' 20                 	db	32
   248  002F' 20                 	db	32
   249  0030' 20                 	db	32
   250  0031' 20                 	db	32
   251  0032' 7C                 	db	124
   252  0033' 20                 	db	32
   253  0034' 53                 	db	83
   254  0035' 20                 	db	32
   255  0036' 00                 	db	0
   256  0037' 00                 	db	0
   257  0038' 00                 	db	0
   258  0039' 00                 	db	0
   259  003A' 00                 	db	0
   260  003B' 00                 	db	0
   261  003C' 00                 	db	0
   262  003D' 00                 	db	0
   263  003E'                    __end_of_INFO_GAME:
   264                           	callstack 0
   265  003E'                    _SCORE:
   266                           	callstack 0
   267  003E' 53                 	db	83
   268  003F' 63                 	db	99
   269  0040' 6F                 	db	111
   270  0041' 72                 	db	114
   271  0042' 65                 	db	101
   272  0043' 3A                 	db	58
   273  0044' 20                 	db	32
   274  0045' 00                 	db	0
   275  0046' 00                 	db	0
   276  0047' 00                 	db	0
   277  0048' 00                 	db	0
   278  0049' 00                 	db	0
   279  004A' 00                 	db	0
   280  004B' 00                 	db	0
   281  004C' 00                 	db	0
   282  004D' 00                 	db	0
   283  004E' 00                 	db	0
   284  004F' 00                 	db	0
   285  0050' 00                 	db	0
   286  0051' 00                 	db	0
   287  0052'                    __end_of_SCORE:
   288                           	callstack 0
   289  0052'                    _TIME:
   290                           	callstack 0
   291  0052' 28                 	db	40
   292  0053' 48                 	db	72
   293  0054' 48                 	db	72
   294  0055' 3A                 	db	58
   295  0056' 4D                 	db	77
   296  0057' 4D                 	db	77
   297  0058' 29                 	db	41
   298  0059' 3A                 	db	58
   299  005A' 00                 	db	0
   300  005B' 00                 	db	0
   301  005C' 00                 	db	0
   302  005D' 00                 	db	0
   303  005E' 00                 	db	0
   304  005F' 00                 	db	0
   305  0060' 00                 	db	0
   306  0061' 00                 	db	0
   307  0062' 00                 	db	0
   308  0063' 00                 	db	0
   309  0064' 00                 	db	0
   310  0065' 00                 	db	0
   311  0066'                    __end_of_TIME:
   312                           	callstack 0
   313  0066'                    _ENTER_NEWTIME:
   314                           	callstack 0
   315  0066' 45                 	db	69
   316  0067' 6E                 	db	110
   317  0068' 74                 	db	116
   318  0069' 65                 	db	101
   319  006A' 72                 	db	114
   320  006B' 20                 	db	32
   321  006C' 4E                 	db	78
   322  006D' 65                 	db	101
   323  006E' 77                 	db	119
   324  006F' 20                 	db	32
   325  0070' 54                 	db	84
   326  0071' 69                 	db	105
   327  0072' 6D                 	db	109
   328  0073' 65                 	db	101
   329  0074' 00                 	db	0
   330  0075' 00                 	db	0
   331  0076' 00                 	db	0
   332  0077' 00                 	db	0
   333  0078' 00                 	db	0
   334  0079' 00                 	db	0
   335  007A'                    __end_of_ENTER_NEWTIME:
   336                           	callstack 0
   337  007A'                    _SHOW_TIME:
   338                           	callstack 0
   339  007A' 43                 	db	67
   340  007B' 75                 	db	117
   341  007C' 72                 	db	114
   342  007D' 72                 	db	114
   343  007E' 65                 	db	101
   344  007F' 6E                 	db	110
   345  0080' 74                 	db	116
   346  0081' 20                 	db	32
   347  0082' 54                 	db	84
   348  0083' 69                 	db	105
   349  0084' 6D                 	db	109
   350  0085' 65                 	db	101
   351  0086' 00                 	db	0
   352  0087' 00                 	db	0
   353  0088' 00                 	db	0
   354  0089' 00                 	db	0
   355  008A' 00                 	db	0
   356  008B' 00                 	db	0
   357  008C' 00                 	db	0
   358  008D' 00                 	db	0
   359  008E'                    __end_of_SHOW_TIME:
   360                           	callstack 0
   361  008E'                    _ENTER_NEW_NAME:
   362                           	callstack 0
   363  008E' 45                 	db	69
   364  008F' 6E                 	db	110
   365  0090' 74                 	db	116
   366  0091' 65                 	db	101
   367  0092' 72                 	db	114
   368  0093' 20                 	db	32
   369  0094' 4E                 	db	78
   370  0095' 65                 	db	101
   371  0096' 77                 	db	119
   372  0097' 20                 	db	32
   373  0098' 4E                 	db	78
   374  0099' 61                 	db	97
   375  009A' 6D                 	db	109
   376  009B' 65                 	db	101
   377  009C' 00                 	db	0
   378  009D' 00                 	db	0
   379  009E' 00                 	db	0
   380  009F' 00                 	db	0
   381  00A0' 00                 	db	0
   382  00A1' 00                 	db	0
   383  00A2'                    __end_of_ENTER_NEW_NAME:
   384                           	callstack 0
   385  00A2'                    _ENTER_NAME:
   386                           	callstack 0
   387  00A2' 45                 	db	69
   388  00A3' 6E                 	db	110
   389  00A4' 74                 	db	116
   390  00A5' 65                 	db	101
   391  00A6' 72                 	db	114
   392  00A7' 20                 	db	32
   393  00A8' 4E                 	db	78
   394  00A9' 61                 	db	97
   395  00AA' 6D                 	db	109
   396  00AB' 65                 	db	101
   397  00AC' 3A                 	db	58
   398  00AD' 00                 	db	0
   399  00AE' 00                 	db	0
   400  00AF' 00                 	db	0
   401  00B0' 00                 	db	0
   402  00B1' 00                 	db	0
   403  00B2' 00                 	db	0
   404  00B3' 00                 	db	0
   405  00B4' 00                 	db	0
   406  00B5' 00                 	db	0
   407  00B6'                    __end_of_ENTER_NAME:
   408                           	callstack 0
   409  00B6'                    _DELETE_USER:
   410                           	callstack 0
   411  00B6' 44                 	db	68
   412  00B7' 65                 	db	101
   413  00B8' 6C                 	db	108
   414  00B9' 65                 	db	101
   415  00BA' 74                 	db	116
   416  00BB' 65                 	db	101
   417  00BC' 20                 	db	32
   418  00BD' 55                 	db	85
   419  00BE' 73                 	db	115
   420  00BF' 65                 	db	101
   421  00C0' 72                 	db	114
   422  00C1' 00                 	db	0
   423  00C2' 00                 	db	0
   424  00C3' 00                 	db	0
   425  00C4' 00                 	db	0
   426  00C5' 00                 	db	0
   427  00C6' 00                 	db	0
   428  00C7' 00                 	db	0
   429  00C8' 00                 	db	0
   430  00C9' 00                 	db	0
   431  00CA'                    __end_of_DELETE_USER:
   432                           	callstack 0
   433  00CA'                    _EDIT_NAME:
   434                           	callstack 0
   435  00CA' 45                 	db	69
   436  00CB' 64                 	db	100
   437  00CC' 69                 	db	105
   438  00CD' 74                 	db	116
   439  00CE' 20                 	db	32
   440  00CF' 4E                 	db	78
   441  00D0' 61                 	db	97
   442  00D1' 6D                 	db	109
   443  00D2' 65                 	db	101
   444  00D3' 00                 	db	0
   445  00D4' 00                 	db	0
   446  00D5' 00                 	db	0
   447  00D6' 00                 	db	0
   448  00D7' 00                 	db	0
   449  00D8' 00                 	db	0
   450  00D9' 00                 	db	0
   451  00DA' 00                 	db	0
   452  00DB' 00                 	db	0
   453  00DC' 00                 	db	0
   454  00DD' 00                 	db	0
   455  00DE'                    __end_of_EDIT_NAME:
   456                           	callstack 0
   457  00DE'                    _NEW_USER:
   458                           	callstack 0
   459  00DE' 32                 	db	50
   460  00DF' 2E                 	db	46
   461  00E0' 20                 	db	32
   462  00E1' 4E                 	db	78
   463  00E2' 65                 	db	101
   464  00E3' 77                 	db	119
   465  00E4' 20                 	db	32
   466  00E5' 55                 	db	85
   467  00E6' 73                 	db	115
   468  00E7' 65                 	db	101
   469  00E8' 72                 	db	114
   470  00E9' 00                 	db	0
   471  00EA' 00                 	db	0
   472  00EB' 00                 	db	0
   473  00EC' 00                 	db	0
   474  00ED' 00                 	db	0
   475  00EE' 00                 	db	0
   476  00EF' 00                 	db	0
   477  00F0' 00                 	db	0
   478  00F1' 00                 	db	0
   479  00F2'                    __end_of_NEW_USER:
   480                           	callstack 0
   481  00F2'                    _SELECT_USER:
   482                           	callstack 0
   483  00F2' 31                 	db	49
   484  00F3' 2E                 	db	46
   485  00F4' 20                 	db	32
   486  00F5' 53                 	db	83
   487  00F6' 65                 	db	101
   488  00F7' 6C                 	db	108
   489  00F8' 65                 	db	101
   490  00F9' 63                 	db	99
   491  00FA' 74                 	db	116
   492  00FB' 20                 	db	32
   493  00FC' 55                 	db	85
   494  00FD' 73                 	db	115
   495  00FE' 65                 	db	101
   496  00FF' 72                 	db	114
   497  0100' 00                 	db	0
   498  0101' 00                 	db	0
   499  0102' 00                 	db	0
   500  0103' 00                 	db	0
   501  0104' 00                 	db	0
   502  0105' 00                 	db	0
   503  0106'                    __end_of_SELECT_USER:
   504                           	callstack 0
   505  0106'                    _OPTION6:
   506                           	callstack 0
   507  0106' 36                 	db	54
   508  0107' 2E                 	db	46
   509  0108' 20                 	db	32
   510  0109' 4D                 	db	77
   511  010A' 6F                 	db	111
   512  010B' 64                 	db	100
   513  010C' 69                 	db	105
   514  010D' 66                 	db	102
   515  010E' 79                 	db	121
   516  010F' 20                 	db	32
   517  0110' 74                 	db	116
   518  0111' 69                 	db	105
   519  0112' 6D                 	db	109
   520  0113' 65                 	db	101
   521  0114' 00                 	db	0
   522  0115' 00                 	db	0
   523  0116' 00                 	db	0
   524  0117' 00                 	db	0
   525  0118' 00                 	db	0
   526  0119' 00                 	db	0
   527  011A'                    __end_of_OPTION6:
   528                           	callstack 0
   529  011A'                    _OPTION5:
   530                           	callstack 0
   531  011A' 35                 	db	53
   532  011B' 2E                 	db	46
   533  011C' 20                 	db	32
   534  011D' 53                 	db	83
   535  011E' 68                 	db	104
   536  011F' 6F                 	db	111
   537  0120' 77                 	db	119
   538  0121' 20                 	db	32
   539  0122' 74                 	db	116
   540  0123' 69                 	db	105
   541  0124' 6D                 	db	109
   542  0125' 65                 	db	101
   543  0126' 00                 	db	0
   544  0127' 00                 	db	0
   545  0128' 00                 	db	0
   546  0129' 00                 	db	0
   547  012A' 00                 	db	0
   548  012B' 00                 	db	0
   549  012C' 00                 	db	0
   550  012D' 00                 	db	0
   551  012E'                    __end_of_OPTION5:
   552                           	callstack 0
   553  012E'                    _OPTION4:
   554                           	callstack 0
   555  012E' 34                 	db	52
   556  012F' 2E                 	db	46
   557  0130' 20                 	db	32
   558  0131' 4D                 	db	77
   559  0132' 6F                 	db	111
   560  0133' 64                 	db	100
   561  0134' 69                 	db	105
   562  0135' 66                 	db	102
   563  0136' 79                 	db	121
   564  0137' 20                 	db	32
   565  0138' 75                 	db	117
   566  0139' 73                 	db	115
   567  013A' 65                 	db	101
   568  013B' 72                 	db	114
   569  013C' 73                 	db	115
   570  013D' 00                 	db	0
   571  013E' 00                 	db	0
   572  013F' 00                 	db	0
   573  0140' 00                 	db	0
   574  0141' 00                 	db	0
   575  0142'                    __end_of_OPTION4:
   576                           	callstack 0
   577  0142'                    _OPTION3:
   578                           	callstack 0
   579  0142' 33                 	db	51
   580  0143' 2E                 	db	46
   581  0144' 20                 	db	32
   582  0145' 53                 	db	83
   583  0146' 68                 	db	104
   584  0147' 6F                 	db	111
   585  0148' 77                 	db	119
   586  0149' 20                 	db	32
   587  014A' 75                 	db	117
   588  014B' 73                 	db	115
   589  014C' 65                 	db	101
   590  014D' 72                 	db	114
   591  014E' 73                 	db	115
   592  014F' 00                 	db	0
   593  0150' 00                 	db	0
   594  0151' 00                 	db	0
   595  0152' 00                 	db	0
   596  0153' 00                 	db	0
   597  0154' 00                 	db	0
   598  0155' 00                 	db	0
   599  0156'                    __end_of_OPTION3:
   600                           	callstack 0
   601  0156'                    _OPTION2:
   602                           	callstack 0
   603  0156' 32                 	db	50
   604  0157' 2E                 	db	46
   605  0158' 20                 	db	32
   606  0159' 53                 	db	83
   607  015A' 68                 	db	104
   608  015B' 6F                 	db	111
   609  015C' 77                 	db	119
   610  015D' 20                 	db	32
   611  015E' 74                 	db	116
   612  015F' 6F                 	db	111
   613  0160' 70                 	db	112
   614  0161' 20                 	db	32
   615  0162' 35                 	db	53
   616  0163' 20                 	db	32
   617  0164' 73                 	db	115
   618  0165' 63                 	db	99
   619  0166' 6F                 	db	111
   620  0167' 72                 	db	114
   621  0168' 65                 	db	101
   622  0169' 73                 	db	115
   623  016A'                    __end_of_OPTION2:
   624                           	callstack 0
   625  016A'                    _OPTION1:
   626                           	callstack 0
   627  016A' 31                 	db	49
   628  016B' 2E                 	db	46
   629  016C' 20                 	db	32
   630  016D' 4E                 	db	78
   631  016E' 65                 	db	101
   632  016F' 77                 	db	119
   633  0170' 20                 	db	32
   634  0171' 47                 	db	71
   635  0172' 61                 	db	97
   636  0173' 6D                 	db	109
   637  0174' 65                 	db	101
   638  0175' 00                 	db	0
   639  0176' 00                 	db	0
   640  0177' 00                 	db	0
   641  0178' 00                 	db	0
   642  0179' 00                 	db	0
   643  017A' 00                 	db	0
   644  017B' 00                 	db	0
   645  017C' 00                 	db	0
   646  017D' 00                 	db	0
   647  017E'                    __end_of_OPTION1:
   648                           	callstack 0
   649  0000                     _LATAbits	set	3977
   650  0000                     _ADRESH	set	4036
   651  0000                     _ADRESL	set	4035
   652  0000                     _ADCON0bits	set	4034
   653  0000                     _ADCON2	set	4032
   654  0000                     _ADCON1	set	4033
   655  0000                     _TRISAbits	set	3986
   656  0000                     _TXSTAbits	set	4012
   657  0000                     _RCREG	set	4014
   658  0000                     _PIR1bits	set	3998
   659  0000                     _TXREG	set	4013
   660  0000                     _SPBRG	set	4015
   661  0000                     _BAUDCON	set	4024
   662  0000                     _RCSTA	set	4011
   663  0000                     _TXSTA	set	4012
   664  0000                     _TRISC	set	3988
   665  0000                     _T0CONbits	set	4053
   666  0000                     _OSCCONbits	set	4051
   667  0000                     _TMR0L	set	4054
   668  0000                     _PORTCbits	set	3970
   669  0000                     _LATBbits	set	3978
   670  0000                     _TRISCbits	set	3988
   671  0000                     _LATCbits	set	3979
   672  0000                     _TRISBbits	set	3987
   673  0000                     _LATDbits	set	3980
   674  0000                     _PORTD	set	3971
   675  0000                     _PORTDbits	set	3971
   676  0000                     _TRISD	set	3989
   677  0000                     _INTCONbits	set	4082
   678  0000                     _TX	set	31766
   679  017E'                    STR_1:
   680  017E' 00                 	db	0
   681  017F' 00                 	db	0	; dummy byte at the end
   682  0000                     
   683                           ; #config settings
   684                           
   685                           	psect	cinit
   686  0000'                    __pcinit:
   687                           	callstack 0
   688  0000'                    start_initialization:
   689                           	callstack 0
   690  0000'                    __initialization:
   691                           	callstack 0
   692                           
   693                           ; Initialize objects allocated to BANK0 (20 bytes)
   694                           ; load TBLPTR registers with __pidataBANK0
   695  0000' 0E00'              	movlw	low __pidataBANK0
   696  0002' 6EF6               	movwf	tblptrl,c
   697  0004' 0E00'              	movlw	high __pidataBANK0
   698  0006' 6EF7               	movwf	tblptrh,c
   699  0008' 0E00'              	movlw	low (__pidataBANK0 shr (0+16))
   700  000A' 6EF8               	movwf	tblptru,c
   701  000C' EE00' F000'        	lfsr	0,__pdataBANK0
   702  0010' EE10 F014          	lfsr	1,20
   703  0014'                    copy_data0:
   704  0014' 0009               	tblrd		*+
   705  0016' CFF5 FFEE          	movff	tablat,postinc0
   706  001A' 50E5               	movf	postdec1,w,c
   707  001C' 50E1               	movf	fsr1l,w,c
   708  001E' E1FA               	bnz	copy_data0
   709                           
   710                           ; Clear objects allocated to BANK1 (220 bytes)
   711  0020' EE00' F000'        	lfsr	0,__pbssBANK1
   712  0024' 0EDC               	movlw	220
   713  0026'                    clear_0:
   714  0026' 6AEE               	clrf	postinc0,c
   715  0028' 06E8               	decf	wreg,f,c
   716  002A' E1FD               	bnz	clear_0
   717                           
   718                           ; Clear objects allocated to BANK0 (106 bytes)
   719  002C' EE00' F000'        	lfsr	0,__pbssBANK0
   720  0030' 0E6A               	movlw	106
   721  0032'                    clear_1:
   722  0032' 6AEE               	clrf	postinc0,c
   723  0034' 06E8               	decf	wreg,f,c
   724  0036' E1FD               	bnz	clear_1
   725                           
   726                           ; Clear objects allocated to COMRAM (74 bytes)
   727  0038' EE00' F000'        	lfsr	0,__pbssCOMRAM
   728  003C' 0E4A               	movlw	74
   729  003E'                    clear_2:
   730  003E' 6AEE               	clrf	postinc0,c
   731  0040' 06E8               	decf	wreg,f,c
   732  0042' E1FD               	bnz	clear_2
   733  0044'                    end_of_initialization:
   734                           	callstack 0
   735  0044'                    __end_of__initialization:
   736                           	callstack 0
   737  0044' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   738  0046' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   739  0048' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   740  004A' 6EF8               	movwf	tblptru,c
   741  004C' 0100               	movlb	0
   742  004E' EF00' F000'        	goto	_main	;jump to C main() function
   743                           
   744                           	psect	bssCOMRAM
   745  0000'                    __pbssCOMRAM:
   746                           	callstack 0
   747  0000'                    _hScore:
   748                           	callstack 0
   749  0000'                    	ds	3
   750  0003'                    _points:
   751                           	callstack 0
   752  0003'                    	ds	3
   753  0006'                    _counter:
   754                           	callstack 0
   755  0006'                    	ds	2
   756  0008'                    _h_Tics:
   757                           	callstack 0
   758  0008'                    	ds	2
   759  000A'                    _Timer:
   760                           	callstack 0
   761  000A'                    	ds	2
   762  000C'                    motorPWM@estat:
   763                           	callstack 0
   764  000C'                    	ds	1
   765  000D'                    _nota:
   766                           	callstack 0
   767  000D'                    	ds	1
   768  000E'                    _timerMusica:
   769                           	callstack 0
   770  000E'                    	ds	1
   771  000F'                    _timerPWM:
   772                           	callstack 0
   773  000F'                    	ds	1
   774  0010'                    motorADC@state:
   775                           	callstack 0
   776  0010'                    	ds	1
   777  0011'                    _channel:
   778                           	callstack 0
   779  0011'                    	ds	1
   780  0012'                    _timerADC:
   781                           	callstack 0
   782  0012'                    	ds	1
   783  0013'                    _seconds:
   784                           	callstack 0
   785  0013'                    	ds	1
   786  0014'                    _timerAM:
   787                           	callstack 0
   788  0014'                    	ds	1
   789  0015'                    _timer@THora$F1425:
   790                           	callstack 0
   791  0015'                    	ds	1
   792  0016'                    deleteUser@numUsersAux:
   793                           	callstack 0
   794  0016'                    	ds	1
   795  0017'                    _scoreUser:
   796                           	callstack 0
   797  0017'                    	ds	1
   798  0018'                    _name:
   799                           	callstack 0
   800  0018'                    	ds	1
   801  0019'                    motorTX@state:
   802                           	callstack 0
   803  0019'                    	ds	1
   804  001A'                    motorRX@info:
   805                           	callstack 0
   806  001A'                    	ds	1
   807  001B'                    _score:
   808                           	callstack 0
   809  001B'                    	ds	1
   810  001C'                    _posName:
   811                           	callstack 0
   812  001C'                    	ds	1
   813  001D'                    _message:
   814                           	callstack 0
   815  001D'                    	ds	1
   816  001E'                    _enviaDada:
   817                           	callstack 0
   818  001E'                    	ds	1
   819  001F'                    _usersPrinted:
   820                           	callstack 0
   821  001F'                    	ds	1
   822  0020'                    _sumand:
   823                           	callstack 0
   824  0020'                    	ds	1
   825  0021'                    _posMarkesine:
   826                           	callstack 0
   827  0021'                    	ds	1
   828  0022'                    _second:
   829                           	callstack 0
   830  0022'                    	ds	1
   831  0023'                    _first:
   832                           	callstack 0
   833  0023'                    	ds	1
   834  0024'                    _posScore:
   835                           	callstack 0
   836  0024'                    	ds	1
   837  0025'                    _posLCDAux:
   838                           	callstack 0
   839  0025'                    	ds	1
   840  0026'                    _arrow:
   841                           	callstack 0
   842  0026'                    	ds	1
   843  0027'                    _posLCD:
   844                           	callstack 0
   845  0027'                    	ds	1
   846  0028'                    _isPrinted:
   847                           	callstack 0
   848  0028'                    	ds	1
   849  0029'                    _timer@TMenu$F1145:
   850                           	callstack 0
   851  0029'                    	ds	1
   852  002A'                    _longer:
   853                           	callstack 0
   854  002A'                    	ds	1
   855  002B'                    _keyColumn:
   856                           	callstack 0
   857  002B'                    	ds	1
   858  002C'                    _numChars:
   859                           	callstack 0
   860  002C'                    	ds	1
   861  002D'                    _previousKey:
   862                           	callstack 0
   863  002D'                    	ds	1
   864  002E'                    _times:
   865                           	callstack 0
   866  002E'                    	ds	1
   867  002F'                    	ds	1
   868  0030'                    _ColumnaAct:
   869                           	callstack 0
   870  0030'                    	ds	1
   871  0031'                    _FilaAct:
   872                           	callstack 0
   873  0031'                    	ds	1
   874  0032'                    _Columnes:
   875                           	callstack 0
   876  0032'                    	ds	1
   877  0033'                    _Files:
   878                           	callstack 0
   879  0033'                    	ds	1
   880  0034'                    _c:
   881                           	callstack 0
   882  0034'                    	ds	1
   883  0035'                    _f:
   884                           	callstack 0
   885  0035'                    	ds	1
   886  0036'                    _key:
   887                           	callstack 0
   888  0036'                    	ds	1
   889  0037'                    _HHT:
   890                           	callstack 0
   891  0037'                    	ds	1
   892  0038'                    _state:
   893                           	callstack 0
   894  0038'                    	ds	1
   895  0039'                    _timer:
   896                           	callstack 0
   897  0039'                    	ds	1
   898  003A'                    actionsSubMenus@posTime:
   899                           	callstack 0
   900  003A'                    	ds	1
   901  003B'                    _modeSMS:
   902                           	callstack 0
   903  003B'                    	ds	1
   904  003C'                    _showAM:
   905                           	callstack 0
   906  003C'                    	ds	1
   907  003D'                    _showHora:
   908                           	callstack 0
   909  003D'                    	ds	1
   910  003E'                    _mModUEdit:
   911                           	callstack 0
   912  003E'                    	ds	1
   913  003F'                    _mModUSelect:
   914                           	callstack 0
   915  003F'                    	ds	1
   916  0040'                    _mGame:
   917                           	callstack 0
   918  0040'                    	ds	1
   919  0041'                    _subMenu:
   920                           	callstack 0
   921  0041'                    	ds	1
   922  0042'                    _pos:
   923                           	callstack 0
   924  0042'                    	ds	1
   925  0043'                    _AM:
   926                           	callstack 0
   927  0043'                    	ds	1
   928  0044'                    _playing:
   929                           	callstack 0
   930  0044'                    	ds	1
   931  0045'                    _array:
   932                           	callstack 0
   933  0045'                    	ds	1
   934  0046'                    _user:
   935                           	callstack 0
   936  0046'                    	ds	1
   937  0047'                    _numUsers:
   938                           	callstack 0
   939  0047'                    	ds	1
   940  0048'                    _stateAM:
   941                           	callstack 0
   942  0048'                    	ds	1
   943  0049'                    _stateHora:
   944                           	callstack 0
   945  0049'                    	ds	1
   946                           
   947                           	psect	bssBANK0
   948  0000'                    __pbssBANK0:
   949                           	callstack 0
   950  0000'                    _s_Timers:
   951                           	callstack 0
   952  0000'                    	ds	96
   953  0060'                    _timeAM:
   954                           	callstack 0
   955  0060'                    	ds	5
   956  0065'                    _time:
   957                           	callstack 0
   958  0065'                    	ds	5
   959                           
   960                           	psect	dataBANK0
   961  0000'                    __pdataBANK0:
   962                           	callstack 0
   963  0000'                    _HIGH_SCORE:
   964                           	callstack 0
   965  0000'                    	ds	20
   966                           
   967                           	psect	bssBANK1
   968  0000'                    __pbssBANK1:
   969                           	callstack 0
   970  0000'                    _users2:
   971                           	callstack 0
   972  0000'                    	ds	110
   973  006E'                    _users1:
   974                           	callstack 0
   975  006E'                    	ds	110
   976                           
   977                           	psect	cstackBANK1
   978  0000'                    __pcstackBANK1:
   979                           	callstack 0
   980  0000'                    showLCD@message1:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x0
   984  0000'                    	ds	2
   985  0002'                    showLCD@message2:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x2
   989  0002'                    	ds	2
   990                           
   991                           	psect	cstackCOMRAM
   992  0000'                    __pcstackCOMRAM:
   993                           	callstack 0
   994  0000'                    
   995                           ; 1 bytes @ 0x0
   996  0000'                    	ds	1
   997  0001'                    ??_RSI_High:
   998                           
   999                           ; 1 bytes @ 0x1
  1000  0001'                    	ds	4
  1001  0005'                    ??_selectUser:
  1002  0005'                    ??_EscriuPrimeraOrdre:
  1003  0005'                    ??_CantaPartAlta:
  1004  0005'                    ??_CantaPartBaixa:
  1005  0005'                    ?_TiGetTics:
  1006                           	callstack 0
  1007  0005'                    ?___wmul:
  1008                           	callstack 0
  1009  0005'                    TiInit@counter:
  1010                           	callstack 0
  1011  0005'                    TiResetTics@Handle:
  1012                           	callstack 0
  1013  0005'                    TiCloseTimer@Handle:
  1014                           	callstack 0
  1015  0005'                    selectMessage@messageAux:
  1016                           	callstack 0
  1017  0005'                    sendMessage@info:
  1018                           	callstack 0
  1019  0005'                    writeName@numChars:
  1020                           	callstack 0
  1021  0005'                    manageHora@time1:
  1022                           	callstack 0
  1023  0005'                    ___lbdiv@divisor:
  1024                           	callstack 0
  1025  0005'                    changeUser@users:
  1026                           	callstack 0
  1027  0005'                    ___wmul@multiplier:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x5
  1031  0005'                    	ds	1
  1032  0006'                    ??_motorTX:
  1033  0006'                    ??_writeName:
  1034  0006'                    CantaPartAlta@c:
  1035                           	callstack 0
  1036  0006'                    CantaPartBaixa@c:
  1037                           	callstack 0
  1038  0006'                    EscriuPrimeraOrdre@ordre:
  1039                           	callstack 0
  1040  0006'                    TiGetTimer@counter:
  1041                           	callstack 0
  1042  0006'                    manageHora@time2:
  1043                           	callstack 0
  1044  0006'                    ___lbdiv@dividend:
  1045                           	callstack 0
  1046  0006'                    checkKey@D0:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x6
  1050  0006'                    	ds	1
  1051  0007'                    ??_TiGetTics:
  1052  0007'                    CantaIR@IR:
  1053                           	callstack 0
  1054  0007'                    CantaData@Data:
  1055                           	callstack 0
  1056  0007'                    changeUser@numUsersAux:
  1057                           	callstack 0
  1058  0007'                    manageHora@state:
  1059                           	callstack 0
  1060  0007'                    ___lbdiv@counter:
  1061                           	callstack 0
  1062  0007'                    ___wmul@multiplicand:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x7
  1066  0007'                    	ds	1
  1067  0008'                    ??_changeUser:
  1068  0008'                    writeName@key:
  1069                           	callstack 0
  1070  0008'                    manageHora@nextState:
  1071                           	callstack 0
  1072  0008'                    ___lbdiv@quotient:
  1073                           	callstack 0
  1074  0008'                    checkKey@D1:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x8
  1078  0008'                    	ds	1
  1079  0009'                    TiGetTics@Handle:
  1080                           	callstack 0
  1081  0009'                    convertScore@score:
  1082                           	callstack 0
  1083  0009'                    selectUser@pos:
  1084                           	callstack 0
  1085  0009'                    ___wmul@product:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x9
  1089  0009'                    	ds	1
  1090  000A'                    checkKey@D2:
  1091                           	callstack 0
  1092  000A'                    TiGetTics@actual:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0xA
  1096  000A'                    	ds	1
  1097  000B'                    ??_initUsers:
  1098  000B'                    orderUsers@users:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0xB
  1102  000B'                    	ds	1
  1103  000C'                    ??_motorADC:
  1104  000C'                    ??_motorPWM:
  1105  000C'                    checkKey@stateAux:
  1106                           	callstack 0
  1107  000C'                    WaitForBusy@Busy:
  1108                           	callstack 0
  1109  000C'                    manageCursor@key:
  1110                           	callstack 0
  1111  000C'                    Espera@Timer:
  1112                           	callstack 0
  1113  000C'                    changeUser@i:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0xC
  1117  000C'                    	ds	1
  1118  000D'                    checkKey@column:
  1119                           	callstack 0
  1120  000D'                    LcGotoXY@Fila:
  1121                           	callstack 0
  1122  000D'                    orderUsers@offset:
  1123                           	callstack 0
  1124  000D'                    initUsers@j:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0xD
  1128  000D'                    	ds	1
  1129  000E'                    ??_LcGotoXY:
  1130  000E'                    orderUsers@extra:
  1131                           	callstack 0
  1132  000E'                    Espera@ms:
  1133                           	callstack 0
  1134  000E'                    changeUser@i_1363:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0xE
  1138  000E'                    	ds	1
  1139  000F'                    ??_orderUsers:
  1140  000F'                    initUsers@i:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0xF
  1144  000F'                    	ds	1
  1145  0010'                    ??_motorHora:
  1146  0010'                    ??_motorAM:
  1147  0010'                    ??_deleteUser:
  1148  0010'                    selectOption@max:
  1149                           	callstack 0
  1150  0010'                    LcInit@columnes:
  1151                           	callstack 0
  1152  0010'                    _LcGotoXY$837:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x10
  1156  0010'                    	ds	1
  1157  0011'                    ??_LcInit:
  1158  0011'                    selectOption@option:
  1159                           	callstack 0
  1160                           
  1161                           ; 1 bytes @ 0x11
  1162  0011'                    	ds	1
  1163  0012'                    selectOption@min:
  1164                           	callstack 0
  1165  0012'                    LcInit@files:
  1166                           	callstack 0
  1167  0012'                    LcGotoXY@Fisica:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x12
  1171  0012'                    	ds	1
  1172  0013'                    LcInit@i:
  1173                           	callstack 0
  1174  0013'                    orderUsers@k:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x13
  1178  0013'                    	ds	1
  1179  0014'                    LcGotoXY@Columna:
  1180                           	callstack 0
  1181                           
  1182                           ; 1 bytes @ 0x14
  1183  0014'                    	ds	1
  1184  0015'                    LcPutChar@c:
  1185                           	callstack 0
  1186  0015'                    orderUsers@i:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x15
  1190  0015'                    	ds	1
  1191  0016'                    printLetter@numChars:
  1192                           	callstack 0
  1193  0016'                    showMessage@message:
  1194                           	callstack 0
  1195  0016'                    showArrow@message:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x16
  1199  0016'                    	ds	1
  1200  0017'                    printLetter@key:
  1201                           	callstack 0
  1202  0017'                    orderUsers@j:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x17
  1206  0017'                    	ds	1
  1207  0018'                    ??_showMessage:
  1208  0018'                    actionsSubMenus@numChars:
  1209                           	callstack 0
  1210  0018'                    showArrow@column:
  1211                           	callstack 0
  1212                           
  1213                           ; 1 bytes @ 0x18
  1214  0018'                    	ds	1
  1215  0019'                    actionsSubMenus@key:
  1216                           	callstack 0
  1217  0019'                    showArrow@row:
  1218                           	callstack 0
  1219                           
  1220                           ; 1 bytes @ 0x19
  1221  0019'                    	ds	1
  1222  001A'                    ??_showArrow:
  1223  001A'                    manageKey@numChars:
  1224                           	callstack 0
  1225                           
  1226                           ; 1 bytes @ 0x1A
  1227  001A'                    	ds	1
  1228  001B'                    ??_manageKey:
  1229                           
  1230                           ; 1 bytes @ 0x1B
  1231  001B'                    	ds	1
  1232  001C'                    printOptions@message1:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x1C
  1236  001C'                    	ds	1
  1237  001D'                    manageKey@key:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x1D
  1241  001D'                    	ds	1
  1242  001E'                    manageKey@i:
  1243                           	callstack 0
  1244  001E'                    printOptions@message2:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x1E
  1248  001E'                    	ds	2
  1249  0020'                    manageKeySMS@key:
  1250                           	callstack 0
  1251  0020'                    toMarkesination@message1:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x20
  1255  0020'                    	ds	1
  1256  0021'                    ??_motorTeclat:
  1257                           
  1258                           ; 1 bytes @ 0x21
  1259  0021'                    	ds	1
  1260  0022'                    toMarkesination@message2:
  1261                           	callstack 0
  1262                           
  1263                           ; 2 bytes @ 0x22
  1264  0022'                    	ds	2
  1265  0024'                    toMarkesination@limit:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x24
  1269  0024'                    	ds	1
  1270  0025'                    toMarkesination@refresh:
  1271                           	callstack 0
  1272                           
  1273                           ; 1 bytes @ 0x25
  1274  0025'                    	ds	1
  1275  0026'                    ??_toMarkesination:
  1276                           
  1277                           ; 1 bytes @ 0x26
  1278  0026'                    	ds	6
  1279  002C'                    ??_showLCD:
  1280                           
  1281                           ; 1 bytes @ 0x2C
  1282  002C'                    	ds	2
  1283  002E'                    
  1284                           ; 1 bytes @ 0x2E
  1285 ;;
  1286 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1287 ;;
  1288 ;; *************** function _main *****************
  1289 ;; Defined at:
  1290 ;;		line 35 in file "main.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;		None
  1293 ;; Auto vars:     Size  Location     Type
  1294 ;;		None
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  1    wreg      void 
  1297 ;; Registers used:
  1298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMRAM   BANK0   BANK1
  1304 ;;      Params:         0       0       0
  1305 ;;      Locals:         0       0       0
  1306 ;;      Temps:          0       0       0
  1307 ;;      Totals:         0       0       0
  1308 ;;Total ram usage:        0 bytes
  1309 ;; Hardware stack levels required when called: 11
  1310 ;; This function calls:
  1311 ;;		_LcInit
  1312 ;;		_TiInit
  1313 ;;		_initADC
  1314 ;;		_initAltaveu
  1315 ;;		_initCentral
  1316 ;;		_initHora
  1317 ;;		_initMenu
  1318 ;;		_initSIO
  1319 ;;		_initTeclat
  1320 ;;		_initUsers
  1321 ;;		_motorADC
  1322 ;;		_motorAM
  1323 ;;		_motorHora
  1324 ;;		_motorMenu
  1325 ;;		_motorMusica
  1326 ;;		_motorPWM
  1327 ;;		_motorRX
  1328 ;;		_motorTX
  1329 ;;		_motorTeclat
  1330 ;; This function is called by:
  1331 ;;		Startup code after reset
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text0
  1336  0000'                    __ptext0:
  1337                           	callstack 0
  1338  0000'                    _main:
  1339                           	callstack 20
  1340                           
  1341                           ;incstack = 0
  1342  0000' 8CF2               	bsf	242,6,c	;volatile
  1343  0002' 8EF2               	bsf	242,7,c	;volatile
  1344  0004' EC00' F000'        	call	_TiInit	;wreg free
  1345  0008' 0E10               	movlw	16
  1346  000A' 6E00'              	movwf	LcInit@columnes^0,c
  1347  000C' 0E02               	movlw	2
  1348  000E' EC00' F000'        	call	_LcInit
  1349  0012' EC00' F000'        	call	_initCentral	;wreg free
  1350  0016' EC00' F000'        	call	_initTeclat	;wreg free
  1351  001A' EC00' F000'        	call	_initMenu	;wreg free
  1352                           
  1353                           ; BSR set to: 0
  1354  001E' EC00' F000'        	call	_initUsers	;wreg free
  1355  0022' EC00' F000'        	call	_initHora	;wreg free
  1356  0026' EC00' F000'        	call	_initSIO	;wreg free
  1357  002A' EC00' F000'        	call	_initADC	;wreg free
  1358  002E' EC00' F000'        	call	_initAltaveu	;wreg free
  1359  0032'                    l6589:
  1360  0032' EC00' F000'        	call	_motorTeclat	;wreg free
  1361  0036' EC00' F000'        	call	_motorMenu	;wreg free
  1362  003A' EC00' F000'        	call	_motorHora	;wreg free
  1363  003E' EC00' F000'        	call	_motorTX	;wreg free
  1364  0042' EC00' F000'        	call	_motorAM	;wreg free
  1365  0046' EC00' F000'        	call	_motorRX	;wreg free
  1366  004A' EC00' F000'        	call	_motorADC	;wreg free
  1367  004E' EC00' F000'        	call	_motorMusica	;wreg free
  1368  0052' EC00' F000'        	call	_motorPWM	;wreg free
  1369  0056' D7ED               	goto	l6589
  1370  0058'                    __end_of_main:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _motorTeclat *****************
  1374 ;; Defined at:
  1375 ;;		line 81 in file "TTeclat.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;		None
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;		None
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  1    wreg      void 
  1382 ;; Registers used:
  1383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMRAM   BANK0   BANK1
  1389 ;;      Params:         0       0       0
  1390 ;;      Locals:         0       0       0
  1391 ;;      Temps:          2       0       0
  1392 ;;      Totals:         2       0       0
  1393 ;;Total ram usage:        2 bytes
  1394 ;; Hardware stack levels used: 1
  1395 ;; Hardware stack levels required when called: 10
  1396 ;; This function calls:
  1397 ;;		_TiGetTics
  1398 ;;		_TiResetTics
  1399 ;;		_checkKey
  1400 ;;		_manageKeySMS
  1401 ;;		_whichKey
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text1
  1408  0000'                    __ptext1:
  1409                           	callstack 0
  1410  0000'                    _motorTeclat:
  1411                           	callstack 20
  1412                           
  1413                           ;TTeclat.c: 82:     switch (state){
  1414                           
  1415                           ;incstack = 0
  1416  0000' D055               	goto	l6461
  1417  0002'                    l6439:
  1418                           
  1419                           ;TTeclat.c: 84:            checkKey( 0, 1, 1, 1, 1);
  1420  0002' 0E00               	movlw	0
  1421  0004' 6E00'              	movwf	(checkKey@D0+1)^0,c
  1422  0006' 0E00               	movlw	0
  1423  0008' 6E00'              	movwf	checkKey@D0^0,c
  1424  000A' 0E00               	movlw	0
  1425  000C' 6E00'              	movwf	(checkKey@D1+1)^0,c
  1426  000E' 0E01               	movlw	1
  1427  0010' 6E00'              	movwf	checkKey@D1^0,c
  1428  0012' 0E00               	movlw	0
  1429  0014' 6E00'              	movwf	(checkKey@D2+1)^0,c
  1430  0016' 0E01               	movlw	1
  1431  0018' 6E00'              	movwf	checkKey@D2^0,c
  1432  001A' 0E01               	movlw	1
  1433  001C' 6E00'              	movwf	checkKey@stateAux^0,c
  1434  001E' 0E01               	movlw	1
  1435  0020' 6E00'              	movwf	checkKey@column^0,c
  1436  0022' EC00' F000'        	call	_checkKey	;wreg free
  1437                           
  1438                           ;TTeclat.c: 85:            break;
  1439  0026' 0012               	return	
  1440  0028'                    l6441:
  1441                           
  1442                           ;TTeclat.c: 87:            checkKey( 1, 0, 1, 2, 2);
  1443  0028' 0E00               	movlw	0
  1444  002A' 6E00'              	movwf	(checkKey@D0+1)^0,c
  1445  002C' 0E01               	movlw	1
  1446  002E' 6E00'              	movwf	checkKey@D0^0,c
  1447  0030' 0E00               	movlw	0
  1448  0032' 6E00'              	movwf	(checkKey@D1+1)^0,c
  1449  0034' 0E00               	movlw	0
  1450  0036' 6E00'              	movwf	checkKey@D1^0,c
  1451  0038' 0E00               	movlw	0
  1452  003A' 6E00'              	movwf	(checkKey@D2+1)^0,c
  1453  003C' 0E01               	movlw	1
  1454  003E' 6E00'              	movwf	checkKey@D2^0,c
  1455  0040' 0E02               	movlw	2
  1456  0042' 6E00'              	movwf	checkKey@stateAux^0,c
  1457  0044' 0E02               	movlw	2
  1458  0046' 6E00'              	movwf	checkKey@column^0,c
  1459  0048' EC00' F000'        	call	_checkKey	;wreg free
  1460                           
  1461                           ;TTeclat.c: 88:            break;
  1462  004C' 0012               	return	
  1463  004E'                    l6443:
  1464                           
  1465                           ;TTeclat.c: 90:            checkKey( 1, 1, 0, 0, 3);
  1466  004E' 0E00               	movlw	0
  1467  0050' 6E00'              	movwf	(checkKey@D0+1)^0,c
  1468  0052' 0E01               	movlw	1
  1469  0054' 6E00'              	movwf	checkKey@D0^0,c
  1470  0056' 0E00               	movlw	0
  1471  0058' 6E00'              	movwf	(checkKey@D1+1)^0,c
  1472  005A' 0E01               	movlw	1
  1473  005C' 6E00'              	movwf	checkKey@D1^0,c
  1474  005E' 0E00               	movlw	0
  1475  0060' 6E00'              	movwf	(checkKey@D2+1)^0,c
  1476  0062' 0E00               	movlw	0
  1477  0064' 6E00'              	movwf	checkKey@D2^0,c
  1478  0066' 0E00               	movlw	0
  1479  0068' 6E00'              	movwf	checkKey@stateAux^0,c
  1480  006A' 0E03               	movlw	3
  1481  006C' 6E00'              	movwf	checkKey@column^0,c
  1482  006E' EC00' F000'        	call	_checkKey	;wreg free
  1483                           
  1484                           ;TTeclat.c: 91:            break;
  1485  0072' 0012               	return	
  1486  0074'                    l6445:
  1487                           
  1488                           ;TTeclat.c: 93:             if (TiGetTics(timer) >= 150){
  1489  0074' 5000'              	movf	_timer^0,w,c
  1490  0076' EC00' F000'        	call	_TiGetTics
  1491  007A' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  1492  007C' E104               	bnz	u7180
  1493  007E' 0E96               	movlw	150
  1494  0080' 5C00'              	subwf	?_TiGetTics^0,w,c
  1495  0082' A0D8               	btfss	status,0,c
  1496  0084' 0012               	return	
  1497  0086'                    u7180:
  1498                           
  1499                           ;TTeclat.c: 94:                 state = 4;
  1500  0086' 0E04               	movlw	4
  1501  0088' 6E00'              	movwf	_state^0,c
  1502                           
  1503                           ;TTeclat.c: 95:                 TiResetTics(timer);
  1504  008A' 5000'              	movf	_timer^0,w,c
  1505  008C' EC00' F000'        	call	_TiResetTics
  1506  0090' 0012               	return	
  1507  0092'                    l6451:
  1508                           
  1509                           ;TTeclat.c: 99:             if (HHT){
  1510  0092' 5000'              	movf	_HHT^0,w,c
  1511  0094' B4D8               	btfsc	status,2,c
  1512  0096' D005               	goto	l6457
  1513                           
  1514                           ;TTeclat.c: 100:                 whichKey();
  1515  0098' EC00' F000'        	call	_whichKey	;wreg free
  1516                           
  1517                           ;TTeclat.c: 101:                 manageKeySMS(key);
  1518  009C' 5000'              	movf	_key^0,w,c
  1519  009E' EC00' F000'        	call	_manageKeySMS
  1520  00A2'                    l6457:
  1521                           
  1522                           ;TTeclat.c: 103:             state = HHT = 0;
  1523  00A2' 0E00               	movlw	0
  1524  00A4' 6E00'              	movwf	_HHT^0,c
  1525  00A6' C037' F038'        	movff	_HHT,_state
  1526                           
  1527                           ;TTeclat.c: 104:             break;
  1528  00AA' 0012               	return	
  1529  00AC'                    l6461:
  1530  00AC' 5000'              	movf	_state^0,w,c
  1531  00AE' 6E00'              	movwf	??_motorTeclat^0,c
  1532  00B0' 6A00'              	clrf	(??_motorTeclat+1)^0,c
  1533                           
  1534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1535                           ; Switch size 1, requested type "simple"
  1536                           ; Number of cases is 1, Range of values is 0 to 0
  1537                           ; switch strategies available:
  1538                           ; Name         Instructions Cycles
  1539                           ; simple_byte            4     3 (average)
  1540                           ;	Chosen strategy is simple_byte
  1541  00B2' 5000'              	movf	(??_motorTeclat+1)^0,w,c
  1542  00B4' 0A00               	xorlw	0	; case 0
  1543  00B6' A4D8               	btfss	status,2,c
  1544  00B8' 0012               	return	
  1545                           
  1546                           ; Switch size 1, requested type "simple"
  1547                           ; Number of cases is 5, Range of values is 0 to 4
  1548                           ; switch strategies available:
  1549                           ; Name         Instructions Cycles
  1550                           ; simple_byte           16     9 (average)
  1551                           ;	Chosen strategy is simple_byte
  1552  00BA' 5000'              	movf	??_motorTeclat^0,w,c
  1553  00BC' 0A00               	xorlw	0	; case 0
  1554  00BE' B4D8               	btfsc	status,2,c
  1555  00C0' D7A0               	goto	l6439
  1556  00C2' 0A01               	xorlw	1	; case 1
  1557  00C4' B4D8               	btfsc	status,2,c
  1558  00C6' D7B0               	goto	l6441
  1559  00C8' 0A03               	xorlw	3	; case 2
  1560  00CA' B4D8               	btfsc	status,2,c
  1561  00CC' D7C0               	goto	l6443
  1562  00CE' 0A01               	xorlw	1	; case 3
  1563  00D0' B4D8               	btfsc	status,2,c
  1564  00D2' D7D0               	goto	l6445
  1565  00D4' 0A07               	xorlw	7	; case 4
  1566  00D6' A4D8               	btfss	status,2,c
  1567  00D8' 0012               	return	
  1568  00DA' D7DB               	goto	l6451
  1569  00DC'                    __end_of_motorTeclat:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _whichKey *****************
  1573 ;; Defined at:
  1574 ;;		line 36 in file "TTeclat.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1
  1588 ;;      Params:         0       0       0
  1589 ;;      Locals:         0       0       0
  1590 ;;      Temps:          0       0       0
  1591 ;;      Totals:         0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 2
  1595 ;; This function calls:
  1596 ;;		Nothing
  1597 ;; This function is called by:
  1598 ;;		_motorTeclat
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text2
  1603  0000'                    __ptext2:
  1604                           	callstack 0
  1605  0000'                    _whichKey:
  1606                           	callstack 27
  1607                           
  1608                           ;TTeclat.c: 37:     if(f == 1 && c == 1) {
  1609                           
  1610                           ;incstack = 0
  1611  0000' 0400'              	decf	_f^0,w,c
  1612  0002' A4D8               	btfss	status,2,c
  1613  0004' D006               	goto	l3201
  1614  0006' 0400'              	decf	_c^0,w,c
  1615  0008' A4D8               	btfss	status,2,c
  1616  000A' D003               	goto	l3201
  1617                           
  1618                           ;TTeclat.c: 38:         key = '1';
  1619  000C' 0E31               	movlw	49
  1620  000E' 6E00'              	movwf	_key^0,c
  1621                           
  1622                           ;TTeclat.c: 39:     } else if (f == 1 && c == 2){
  1623  0010' 0012               	return	
  1624  0012'                    l3201:
  1625  0012' 0400'              	decf	_f^0,w,c
  1626  0014' A4D8               	btfss	status,2,c
  1627  0016' D007               	goto	l3207
  1628  0018' 0E02               	movlw	2
  1629  001A' 1800'              	xorwf	_c^0,w,c
  1630  001C' A4D8               	btfss	status,2,c
  1631  001E' D003               	goto	l3207
  1632                           
  1633                           ;TTeclat.c: 40:         key = '2';
  1634  0020' 0E32               	movlw	50
  1635  0022' 6E00'              	movwf	_key^0,c
  1636                           
  1637                           ;TTeclat.c: 41:     } else if (f == 1 && c == 3){
  1638  0024' 0012               	return	
  1639  0026'                    l3207:
  1640  0026' 0400'              	decf	_f^0,w,c
  1641  0028' A4D8               	btfss	status,2,c
  1642  002A' D007               	goto	l3213
  1643  002C' 0E03               	movlw	3
  1644  002E' 1800'              	xorwf	_c^0,w,c
  1645  0030' A4D8               	btfss	status,2,c
  1646  0032' D003               	goto	l3213
  1647                           
  1648                           ;TTeclat.c: 42:         key = '3';
  1649  0034' 0E33               	movlw	51
  1650  0036' 6E00'              	movwf	_key^0,c
  1651                           
  1652                           ;TTeclat.c: 43:     } else if (f == 2 && c == 1){
  1653  0038' 0012               	return	
  1654  003A'                    l3213:
  1655  003A' 0E02               	movlw	2
  1656  003C' 1800'              	xorwf	_f^0,w,c
  1657  003E' A4D8               	btfss	status,2,c
  1658  0040' D006               	goto	l3219
  1659  0042' 0400'              	decf	_c^0,w,c
  1660  0044' A4D8               	btfss	status,2,c
  1661  0046' D003               	goto	l3219
  1662                           
  1663                           ;TTeclat.c: 44:         key = '4';
  1664  0048' 0E34               	movlw	52
  1665  004A' 6E00'              	movwf	_key^0,c
  1666                           
  1667                           ;TTeclat.c: 45:     } else if (f == 2 && c == 2){
  1668  004C' 0012               	return	
  1669  004E'                    l3219:
  1670  004E' 0E02               	movlw	2
  1671  0050' 1800'              	xorwf	_f^0,w,c
  1672  0052' A4D8               	btfss	status,2,c
  1673  0054' D007               	goto	l3225
  1674  0056' 0E02               	movlw	2
  1675  0058' 1800'              	xorwf	_c^0,w,c
  1676  005A' A4D8               	btfss	status,2,c
  1677  005C' D003               	goto	l3225
  1678                           
  1679                           ;TTeclat.c: 46:         key = '5';
  1680  005E' 0E35               	movlw	53
  1681  0060' 6E00'              	movwf	_key^0,c
  1682                           
  1683                           ;TTeclat.c: 47:     } else if (f == 2 && c == 3){
  1684  0062' 0012               	return	
  1685  0064'                    l3225:
  1686  0064' 0E02               	movlw	2
  1687  0066' 1800'              	xorwf	_f^0,w,c
  1688  0068' A4D8               	btfss	status,2,c
  1689  006A' D007               	goto	l3231
  1690  006C' 0E03               	movlw	3
  1691  006E' 1800'              	xorwf	_c^0,w,c
  1692  0070' A4D8               	btfss	status,2,c
  1693  0072' D003               	goto	l3231
  1694                           
  1695                           ;TTeclat.c: 48:         key = '6';
  1696  0074' 0E36               	movlw	54
  1697  0076' 6E00'              	movwf	_key^0,c
  1698                           
  1699                           ;TTeclat.c: 49:     } else if (f == 3 && c == 1){
  1700  0078' 0012               	return	
  1701  007A'                    l3231:
  1702  007A' 0E03               	movlw	3
  1703  007C' 1800'              	xorwf	_f^0,w,c
  1704  007E' A4D8               	btfss	status,2,c
  1705  0080' D006               	goto	l3237
  1706  0082' 0400'              	decf	_c^0,w,c
  1707  0084' A4D8               	btfss	status,2,c
  1708  0086' D003               	goto	l3237
  1709                           
  1710                           ;TTeclat.c: 50:         key = '7';
  1711  0088' 0E37               	movlw	55
  1712  008A' 6E00'              	movwf	_key^0,c
  1713                           
  1714                           ;TTeclat.c: 51:     } else if (f == 3 && c == 2){
  1715  008C' 0012               	return	
  1716  008E'                    l3237:
  1717  008E' 0E03               	movlw	3
  1718  0090' 1800'              	xorwf	_f^0,w,c
  1719  0092' A4D8               	btfss	status,2,c
  1720  0094' D007               	goto	l3243
  1721  0096' 0E02               	movlw	2
  1722  0098' 1800'              	xorwf	_c^0,w,c
  1723  009A' A4D8               	btfss	status,2,c
  1724  009C' D003               	goto	l3243
  1725                           
  1726                           ;TTeclat.c: 52:         key = '8';
  1727  009E' 0E38               	movlw	56
  1728  00A0' 6E00'              	movwf	_key^0,c
  1729                           
  1730                           ;TTeclat.c: 53:     } else if (f == 3 && c == 3){
  1731  00A2' 0012               	return	
  1732  00A4'                    l3243:
  1733  00A4' 0E03               	movlw	3
  1734  00A6' 1800'              	xorwf	_f^0,w,c
  1735  00A8' A4D8               	btfss	status,2,c
  1736  00AA' D007               	goto	l3249
  1737  00AC' 0E03               	movlw	3
  1738  00AE' 1800'              	xorwf	_c^0,w,c
  1739  00B0' A4D8               	btfss	status,2,c
  1740  00B2' D003               	goto	l3249
  1741                           
  1742                           ;TTeclat.c: 54:         key = '9';
  1743  00B4' 0E39               	movlw	57
  1744  00B6' 6E00'              	movwf	_key^0,c
  1745                           
  1746                           ;TTeclat.c: 55:     } else if (f == 4 && c == 1){
  1747  00B8' 0012               	return	
  1748  00BA'                    l3249:
  1749  00BA' 0E04               	movlw	4
  1750  00BC' 1800'              	xorwf	_f^0,w,c
  1751  00BE' A4D8               	btfss	status,2,c
  1752  00C0' D006               	goto	l3255
  1753  00C2' 0400'              	decf	_c^0,w,c
  1754  00C4' A4D8               	btfss	status,2,c
  1755  00C6' D003               	goto	l3255
  1756                           
  1757                           ;TTeclat.c: 56:         key = '*';
  1758  00C8' 0E2A               	movlw	42
  1759  00CA' 6E00'              	movwf	_key^0,c
  1760                           
  1761                           ;TTeclat.c: 57:     } else if (f == 4 && c == 2){
  1762  00CC' 0012               	return	
  1763  00CE'                    l3255:
  1764  00CE' 0E04               	movlw	4
  1765  00D0' 1800'              	xorwf	_f^0,w,c
  1766  00D2' A4D8               	btfss	status,2,c
  1767  00D4' D007               	goto	l3261
  1768  00D6' 0E02               	movlw	2
  1769  00D8' 1800'              	xorwf	_c^0,w,c
  1770  00DA' A4D8               	btfss	status,2,c
  1771  00DC' D003               	goto	l3261
  1772                           
  1773                           ;TTeclat.c: 58:         key = '0';
  1774  00DE' 0E30               	movlw	48
  1775  00E0' 6E00'              	movwf	_key^0,c
  1776                           
  1777                           ;TTeclat.c: 59:     } else {
  1778  00E2' 0012               	return	
  1779  00E4'                    l3261:
  1780                           
  1781                           ;TTeclat.c: 60:         key = '#';
  1782  00E4' 0E23               	movlw	35
  1783  00E6' 6E00'              	movwf	_key^0,c
  1784  00E8' 0012               	return		;funcret
  1785  00EA'                    __end_of_whichKey:
  1786                           	callstack 0
  1787                           
  1788 ;; *************** function _manageKeySMS *****************
  1789 ;; Defined at:
  1790 ;;		line 46 in file "TSms.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;  key             1    wreg     unsigned char 
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;  key             1   32[COMRAM] unsigned char 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1
  1804 ;;      Params:         0       0       0
  1805 ;;      Locals:         1       0       0
  1806 ;;      Temps:          0       0       0
  1807 ;;      Totals:         1       0       0
  1808 ;;Total ram usage:        1 bytes
  1809 ;; Hardware stack levels used: 1
  1810 ;; Hardware stack levels required when called: 9
  1811 ;; This function calls:
  1812 ;;		_TiCloseTimer
  1813 ;;		_TiResetTics
  1814 ;;		_manageCursor
  1815 ;;		_manageKey
  1816 ;; This function is called by:
  1817 ;;		_motorTeclat
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text3
  1822  0000'                    __ptext3:
  1823                           	callstack 0
  1824  0000'                    _manageKeySMS:
  1825                           	callstack 20
  1826                           
  1827                           ;incstack = 0
  1828                           ;manageKeySMS@key stored from wreg
  1829  0000' 6E00'              	movwf	manageKeySMS@key^0,c
  1830                           
  1831                           ;TSms.c: 47:     if (modeSMS == 1){
  1832  0002' 0400'              	decf	_modeSMS^0,w,c
  1833  0004' A4D8               	btfss	status,2,c
  1834  0006' D0D6               	goto	l6347
  1835                           
  1836                           ;TSms.c: 48:         if (times == 0){
  1837  0008' 5000'              	movf	_times^0,w,c
  1838  000A' A4D8               	btfss	status,2,c
  1839  000C' D003               	goto	l6271
  1840                           
  1841                           ;TSms.c: 49:             numChars--;
  1842  000E' 0600'              	decf	_numChars^0,f,c
  1843                           
  1844                           ;TSms.c: 50:             times = 1;
  1845  0010' 0E01               	movlw	1
  1846  0012' 6E00'              	movwf	_times^0,c
  1847  0014'                    l6271:
  1848                           
  1849                           ;TSms.c: 52:         if (key == '0'){
  1850  0014' 0E30               	movlw	48
  1851  0016' 1800'              	xorwf	manageKeySMS@key^0,w,c
  1852  0018' A4D8               	btfss	status,2,c
  1853  001A' D007               	goto	l6277
  1854                           
  1855                           ;TSms.c: 53:             numChars++;
  1856  001C' 2A00'              	incf	_numChars^0,f,c
  1857                           
  1858                           ;TSms.c: 54:             manageKey(key, numChars);
  1859  001E' C02C' F01A'        	movff	_numChars,manageKey@numChars
  1860  0022' 5000'              	movf	manageKeySMS@key^0,w,c
  1861  0024' EC00' F000'        	call	_manageKey
  1862                           
  1863                           ;TSms.c: 55:         } else if (key == '1'){
  1864  0028' D0AA               	goto	l860
  1865  002A'                    l6277:
  1866  002A' 0E31               	movlw	49
  1867  002C' 1800'              	xorwf	manageKeySMS@key^0,w,c
  1868  002E' A4D8               	btfss	status,2,c
  1869  0030' D007               	goto	l6283
  1870                           
  1871                           ;TSms.c: 56:             numChars++;
  1872  0032' 2A00'              	incf	_numChars^0,f,c
  1873                           
  1874                           ;TSms.c: 57:             manageKey(key, numChars);
  1875  0034' C02C' F01A'        	movff	_numChars,manageKey@numChars
  1876  0038' 5000'              	movf	manageKeySMS@key^0,w,c
  1877  003A' EC00' F000'        	call	_manageKey
  1878                           
  1879                           ;TSms.c: 58:         } else if (key == '2'){
  1880  003E' D09F               	goto	l860
  1881  0040'                    l6283:
  1882  0040' 0E32               	movlw	50
  1883  0042' 1800'              	xorwf	manageKeySMS@key^0,w,c
  1884  0044' A4D8               	btfss	status,2,c
  1885  0046' D010               	goto	l6289
  1886                           
  1887                           ;TSms.c: 59:             manageCursor(key);
  1888  0048' 5000'              	movf	manageKeySMS@key^0,w,c
  1889  004A' EC00' F000'        	call	_manageCursor
  1890                           
  1891                           ;TSms.c: 60:             manageKey(key2[keyColumn], numChars);
  1892  004E' C02C' F01A'        	movff	_numChars,manageKey@numChars
  1893  0052' 0E00'              	movlw	low _key2
  1894  0054' 2400'              	addwf	_keyColumn^0,w,c
  1895  0056' 6EF6               	movwf	tblptrl,c
  1896  0058' 6AF7               	clrf	tblptrh,c
  1897  005A' 0E00'              	movlw	high _key2
  1898  005C' 22F7               	addwfc	tblptrh,f,c
  1899  005E'                    	if	0	;There are less than 3 active tblptr bytes
  1900  005E'                    	endif
  1901  005E' 0008               	tblrd		*
  1902  0060' 50F5               	movf	tablat,w,c
  1903  0062' EC00' F000'        	call	_manageKey
  1904                           
  1905                           ;TSms.c: 61:         } else if (key == '3'){
  1906  0066' D08B               	goto	l860
  1907  0068'                    l6289:
  1908  0068' 0E33               	movlw	51
  1909  006A' 1800'              	xorwf	manageKeySMS@key^0,w,c
  1910  006C' A4D8               	btfss	status,2,c
  1911  006E' D010               	goto	l6295
  1912                           
  1913                           ;TSms.c: 62:             manageCursor(key);
  1914  0070' 5000'              	movf	manageKeySMS@key^0,w,c
  1915  0072' EC00' F000'        	call	_manageCursor
  1916                           
  1917                           ;TSms.c: 63:             manageKey(key3[keyColumn], numChars);
  1918  0076' C02C' F01A'        	movff	_numChars,manageKey@numChars
  1919  007A' 0E00'              	movlw	low _key3
  1920  007C' 2400'              	addwf	_keyColumn^0,w,c
  1921  007E' 6EF6               	movwf	tblptrl,c
  1922  0080' 6AF7               	clrf	tblptrh,c
  1923  0082' 0E00'              	movlw	high _key3
  1924  0084' 22F7               	addwfc	tblptrh,f,c
  1925  0086'                    	if	0	;There are less than 3 active tblptr bytes
  1926  0086'                    	endif
  1927  0086' 0008               	tblrd		*
  1928  0088' 50F5               	movf	tablat,w,c
  1929  008A' EC00' F000'        	call	_manageKey
  1930                           
  1931                           ;TSms.c: 64:         } else if (key == '4'){
  1932  008E' D077               	goto	l860
  1933  0090'                    l6295:
  1934  0090' 0E34               	movlw	52
  1935  0092' 1800'              	xorwf	manageKeySMS@key^0,w,c
  1936  0094' A4D8               	btfss	status,2,c
  1937  0096' D010               	goto	l6301
  1938                           
  1939                           ;TSms.c: 65:             manageCursor(key);
  1940  0098' 5000'              	movf	manageKeySMS@key^0,w,c
  1941  009A' EC00' F000'        	call	_manageCursor
  1942                           
  1943                           ;TSms.c: 66:             manageKey(key4[keyColumn], numChars);
  1944  009E' C02C' F01A'        	movff	_numChars,manageKey@numChars
  1945  00A2' 0E00'              	movlw	low _key4
  1946  00A4' 2400'              	addwf	_keyColumn^0,w,c
  1947  00A6' 6EF6               	movwf	tblptrl,c
  1948  00A8' 6AF7               	clrf	tblptrh,c
  1949  00AA' 0E00'              	movlw	high _key4
  1950  00AC' 22F7               	addwfc	tblptrh,f,c
  1951  00AE'                    	if	0	;There are less than 3 active tblptr bytes
  1952  00AE'                    	endif
  1953  00AE' 0008               	tblrd		*
  1954  00B0' 50F5               	movf	tablat,w,c
  1955  00B2' EC00' F000'        	call	_manageKey
  1956                           
  1957                           ;TSms.c: 67:         } else if (key == '5'){
  1958  00B6' D063               	goto	l860
  1959  00B8'                    l6301:
  1960  00B8' 0E35               	movlw	53
  1961  00BA' 1800'              	xorwf	manageKeySMS@key^0,w,c
  1962  00BC' A4D8               	btfss	status,2,c
  1963  00BE' D010               	goto	l6307
  1964                           
  1965                           ;TSms.c: 68:             manageCursor(key);
  1966  00C0' 5000'              	movf	manageKeySMS@key^0,w,c
  1967  00C2' EC00' F000'        	call	_manageCursor
  1968                           
  1969                           ;TSms.c: 69:             manageKey(key5[keyColumn], numChars);
  1970  00C6' C02C' F01A'        	movff	_numChars,manageKey@numChars
  1971  00CA' 0E00'              	movlw	low _key5
  1972  00CC' 2400'              	addwf	_keyColumn^0,w,c
  1973  00CE' 6EF6               	movwf	tblptrl,c
  1974  00D0' 6AF7               	clrf	tblptrh,c
  1975  00D2' 0E00'              	movlw	high _key5
  1976  00D4' 22F7               	addwfc	tblptrh,f,c
  1977  00D6'                    	if	0	;There are less than 3 active tblptr bytes
  1978  00D6'                    	endif
  1979  00D6' 0008               	tblrd		*
  1980  00D8' 50F5               	movf	tablat,w,c
  1981  00DA' EC00' F000'        	call	_manageKey
  1982                           
  1983                           ;TSms.c: 70:         } else if (key == '6'){
  1984  00DE' D04F               	goto	l860
  1985  00E0'                    l6307:
  1986  00E0' 0E36               	movlw	54
  1987  00E2' 1800'              	xorwf	manageKeySMS@key^0,w,c
  1988  00E4' A4D8               	btfss	status,2,c
  1989  00E6' D010               	goto	l6313
  1990                           
  1991                           ;TSms.c: 71:             manageCursor(key);
  1992  00E8' 5000'              	movf	manageKeySMS@key^0,w,c
  1993  00EA' EC00' F000'        	call	_manageCursor
  1994                           
  1995                           ;TSms.c: 72:             manageKey(key6[keyColumn], numChars);
  1996  00EE' C02C' F01A'        	movff	_numChars,manageKey@numChars
  1997  00F2' 0E00'              	movlw	low _key6
  1998  00F4' 2400'              	addwf	_keyColumn^0,w,c
  1999  00F6' 6EF6               	movwf	tblptrl,c
  2000  00F8' 6AF7               	clrf	tblptrh,c
  2001  00FA' 0E00'              	movlw	high _key6
  2002  00FC' 22F7               	addwfc	tblptrh,f,c
  2003  00FE'                    	if	0	;There are less than 3 active tblptr bytes
  2004  00FE'                    	endif
  2005  00FE' 0008               	tblrd		*
  2006  0100' 50F5               	movf	tablat,w,c
  2007  0102' EC00' F000'        	call	_manageKey
  2008                           
  2009                           ;TSms.c: 73:         } else if (key == '7'){
  2010  0106' D03B               	goto	l860
  2011  0108'                    l6313:
  2012  0108' 0E37               	movlw	55
  2013  010A' 1800'              	xorwf	manageKeySMS@key^0,w,c
  2014  010C' A4D8               	btfss	status,2,c
  2015  010E' D010               	goto	l6319
  2016                           
  2017                           ;TSms.c: 74:             manageCursor(key);
  2018  0110' 5000'              	movf	manageKeySMS@key^0,w,c
  2019  0112' EC00' F000'        	call	_manageCursor
  2020                           
  2021                           ;TSms.c: 75:             manageKey(key7[keyColumn], numChars);
  2022  0116' C02C' F01A'        	movff	_numChars,manageKey@numChars
  2023  011A' 0E00'              	movlw	low _key7
  2024  011C' 2400'              	addwf	_keyColumn^0,w,c
  2025  011E' 6EF6               	movwf	tblptrl,c
  2026  0120' 6AF7               	clrf	tblptrh,c
  2027  0122' 0E00'              	movlw	high _key7
  2028  0124' 22F7               	addwfc	tblptrh,f,c
  2029  0126'                    	if	0	;There are less than 3 active tblptr bytes
  2030  0126'                    	endif
  2031  0126' 0008               	tblrd		*
  2032  0128' 50F5               	movf	tablat,w,c
  2033  012A' EC00' F000'        	call	_manageKey
  2034                           
  2035                           ;TSms.c: 76:         } else if (key == '8'){
  2036  012E' D027               	goto	l860
  2037  0130'                    l6319:
  2038  0130' 0E38               	movlw	56
  2039  0132' 1800'              	xorwf	manageKeySMS@key^0,w,c
  2040  0134' A4D8               	btfss	status,2,c
  2041  0136' D010               	goto	l6325
  2042                           
  2043                           ;TSms.c: 77:             manageCursor(key);
  2044  0138' 5000'              	movf	manageKeySMS@key^0,w,c
  2045  013A' EC00' F000'        	call	_manageCursor
  2046                           
  2047                           ;TSms.c: 78:             manageKey(key8[keyColumn], numChars);
  2048  013E' C02C' F01A'        	movff	_numChars,manageKey@numChars
  2049  0142' 0E00'              	movlw	low _key8
  2050  0144' 2400'              	addwf	_keyColumn^0,w,c
  2051  0146' 6EF6               	movwf	tblptrl,c
  2052  0148' 6AF7               	clrf	tblptrh,c
  2053  014A' 0E00'              	movlw	high _key8
  2054  014C' 22F7               	addwfc	tblptrh,f,c
  2055  014E'                    	if	0	;There are less than 3 active tblptr bytes
  2056  014E'                    	endif
  2057  014E' 0008               	tblrd		*
  2058  0150' 50F5               	movf	tablat,w,c
  2059  0152' EC00' F000'        	call	_manageKey
  2060                           
  2061                           ;TSms.c: 79:         } else if (key == '9'){
  2062  0156' D013               	goto	l860
  2063  0158'                    l6325:
  2064  0158' 0E39               	movlw	57
  2065  015A' 1800'              	xorwf	manageKeySMS@key^0,w,c
  2066  015C' A4D8               	btfss	status,2,c
  2067  015E' D00F               	goto	l860
  2068                           
  2069                           ;TSms.c: 80:             manageCursor(key);
  2070  0160' 5000'              	movf	manageKeySMS@key^0,w,c
  2071  0162' EC00' F000'        	call	_manageCursor
  2072                           
  2073                           ;TSms.c: 81:             manageKey(key9[keyColumn], numChars);
  2074  0166' C02C' F01A'        	movff	_numChars,manageKey@numChars
  2075  016A' 0E00'              	movlw	low _key9
  2076  016C' 2400'              	addwf	_keyColumn^0,w,c
  2077  016E' 6EF6               	movwf	tblptrl,c
  2078  0170' 6AF7               	clrf	tblptrh,c
  2079  0172' 0E00'              	movlw	high _key9
  2080  0174' 22F7               	addwfc	tblptrh,f,c
  2081  0176'                    	if	0	;There are less than 3 active tblptr bytes
  2082  0176'                    	endif
  2083  0176' 0008               	tblrd		*
  2084  0178' 50F5               	movf	tablat,w,c
  2085  017A' EC00' F000'        	call	_manageKey
  2086  017E'                    l860:
  2087                           
  2088                           ;TSms.c: 83:         previousKey = key;
  2089  017E' C020' F02D'        	movff	manageKeySMS@key,_previousKey
  2090                           
  2091                           ;TSms.c: 84:         TiResetTics(timer);
  2092  0182' 0E00               	movlw	0
  2093  0184' EC00' F000'        	call	_TiResetTics
  2094                           
  2095                           ;TSms.c: 85:         if (key == '#' || key == '*'){
  2096  0188' 0E23               	movlw	35
  2097  018A' 1800'              	xorwf	manageKeySMS@key^0,w,c
  2098  018C' B4D8               	btfsc	status,2,c
  2099  018E' D004               	goto	u6930
  2100  0190' 0E2A               	movlw	42
  2101  0192' 1800'              	xorwf	manageKeySMS@key^0,w,c
  2102  0194' A4D8               	btfss	status,2,c
  2103  0196' 0012               	return	
  2104  0198'                    u6930:
  2105                           
  2106                           ;TSms.c: 86:             TiCloseTimer(timer);
  2107  0198' 0E00               	movlw	0
  2108  019A' EC00' F000'        	call	_TiCloseTimer
  2109                           
  2110                           ;TSms.c: 87:             numChars++;
  2111  019E' 2A00'              	incf	_numChars^0,f,c
  2112                           
  2113                           ;TSms.c: 88:             manageKey(key, numChars);
  2114  01A0' C02C' F01A'        	movff	_numChars,manageKey@numChars
  2115  01A4' 5000'              	movf	manageKeySMS@key^0,w,c
  2116  01A6' EC00' F000'        	call	_manageKey
  2117                           
  2118                           ;TSms.c: 89:             numChars = times = 0;
  2119  01AA' 0E00               	movlw	0
  2120  01AC' 6E00'              	movwf	_times^0,c
  2121  01AE' C02E' F02C'        	movff	_times,_numChars
  2122  01B2' 0012               	return	
  2123  01B4'                    l6347:
  2124                           
  2125                           ;TSms.c: 92:         manageKey(key, numChars);
  2126  01B4' C02C' F01A'        	movff	_numChars,manageKey@numChars
  2127  01B8' 5000'              	movf	manageKeySMS@key^0,w,c
  2128  01BA' EC00' F000'        	call	_manageKey
  2129  01BE' 0012               	return		;funcret
  2130  01C0'                    __end_of_manageKeySMS:
  2131                           	callstack 0
  2132                           
  2133 ;; *************** function _manageKey *****************
  2134 ;; Defined at:
  2135 ;;		line 60 in file "TCentral.c"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;  key             1    wreg     unsigned char 
  2138 ;;  numChars        1   26[COMRAM] unsigned char 
  2139 ;; Auto vars:     Size  Location     Type
  2140 ;;  key             1   29[COMRAM] unsigned char 
  2141 ;;  i               2   30[COMRAM] int 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1
  2151 ;;      Params:         1       0       0
  2152 ;;      Locals:         3       0       0
  2153 ;;      Temps:          2       0       0
  2154 ;;      Totals:         6       0       0
  2155 ;;Total ram usage:        6 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 8
  2158 ;; This function calls:
  2159 ;;		_actionsSubMenus
  2160 ;;		_deleteUser
  2161 ;;		_initAM
  2162 ;;		_orderUsers
  2163 ;;		_reset
  2164 ;;		_resetADC
  2165 ;;		_resetHora
  2166 ;;		_resetMenu
  2167 ;;		_selectMessage
  2168 ;;		_selectOption
  2169 ;;		_selectUser
  2170 ;; This function is called by:
  2171 ;;		_manageKeySMS
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text4
  2176  0000'                    __ptext4:
  2177                           	callstack 0
  2178  0000'                    _manageKey:
  2179                           	callstack 20
  2180                           
  2181                           ;incstack = 0
  2182                           ;manageKey@key stored from wreg
  2183  0000' 6E00'              	movwf	manageKey@key^0,c
  2184                           
  2185                           ;TCentral.c: 61:     switch(key){
  2186  0002' D152               	goto	l6255
  2187  0004'                    l6067:
  2188                           
  2189                           ;TCentral.c: 63:             if (subMenu == 0 && playing == 0){
  2190  0004' 5000'              	movf	_subMenu^0,w,c
  2191  0006' A4D8               	btfss	status,2,c
  2192  0008' D00B               	goto	l6073
  2193  000A' 5000'              	movf	_playing^0,w,c
  2194  000C' A4D8               	btfss	status,2,c
  2195  000E' D008               	goto	l6073
  2196                           
  2197                           ;TCentral.c: 64:                 selectOption(1, 6, 1);
  2198  0010' 0E06               	movlw	6
  2199  0012' 6E00'              	movwf	selectOption@max^0,c
  2200  0014' 0E01               	movlw	1
  2201  0016' 6E00'              	movwf	selectOption@option^0,c
  2202  0018' 0E01               	movlw	1
  2203  001A' EC00' F000'        	call	_selectOption
  2204                           
  2205                           ;TCentral.c: 65:             } else if (subMenu == 1 || subMenu == 4) {
  2206  001E' D15F               	goto	l6257
  2207  0020'                    l6073:
  2208  0020' 0400'              	decf	_subMenu^0,w,c
  2209  0022' B4D8               	btfsc	status,2,c
  2210  0024' D004               	goto	u6360
  2211  0026' 0E04               	movlw	4
  2212  0028' 1800'              	xorwf	_subMenu^0,w,c
  2213  002A' A4D8               	btfss	status,2,c
  2214  002C' D02D               	goto	l6099
  2215  002E'                    u6360:
  2216                           
  2217                           ;TCentral.c: 66:                 if ((subMenu == 1 && mGame == 0) || (subMenu == 4 && mM
      +                          odUSelect == 1)){
  2218  002E' 0400'              	decf	_subMenu^0,w,c
  2219  0030' A4D8               	btfss	status,2,c
  2220  0032' D003               	goto	u6380
  2221  0034' 5000'              	movf	_mGame^0,w,c
  2222  0036' B4D8               	btfsc	status,2,c
  2223  0038' D007               	goto	u6400
  2224  003A'                    u6380:
  2225  003A' 0E04               	movlw	4
  2226  003C' 1800'              	xorwf	_subMenu^0,w,c
  2227  003E' A4D8               	btfss	status,2,c
  2228  0040' D00B               	goto	l6087
  2229  0042' 0400'              	decf	_mModUSelect^0,w,c
  2230  0044' A4D8               	btfss	status,2,c
  2231  0046' D008               	goto	l6087
  2232  0048'                    u6400:
  2233                           
  2234                           ;TCentral.c: 67:                     selectOption(1, 2, 1);
  2235  0048' 0E02               	movlw	2
  2236  004A' 6E00'              	movwf	selectOption@max^0,c
  2237  004C' 0E01               	movlw	1
  2238  004E' 6E00'              	movwf	selectOption@option^0,c
  2239  0050' 0E01               	movlw	1
  2240  0052' EC00' F000'        	call	_selectOption
  2241                           
  2242                           ;TCentral.c: 68:                 } else if ((subMenu == 1 && mGame == 1) || (subMenu == 
      +                          4 && mModUSelect == 0)) {
  2243  0056' D143               	goto	l6257
  2244  0058'                    l6087:
  2245  0058' 0400'              	decf	_subMenu^0,w,c
  2246  005A' A4D8               	btfss	status,2,c
  2247  005C' D003               	goto	u6420
  2248  005E' 0400'              	decf	_mGame^0,w,c
  2249  0060' B4D8               	btfsc	status,2,c
  2250  0062' D007               	goto	u6440
  2251  0064'                    u6420:
  2252  0064' 0E04               	movlw	4
  2253  0066' 1800'              	xorwf	_subMenu^0,w,c
  2254  0068' A4D8               	btfss	status,2,c
  2255  006A' D139               	goto	l6257
  2256  006C' 5000'              	movf	_mModUSelect^0,w,c
  2257  006E' A4D8               	btfss	status,2,c
  2258  0070' D136               	goto	l6257
  2259  0072'                    u6440:
  2260                           
  2261                           ;TCentral.c: 69:                     selectOption(1, numUsers, 1);
  2262  0072' C047' F010'        	movff	_numUsers,selectOption@max
  2263  0076' 0E01               	movlw	1
  2264  0078' 6E00'              	movwf	selectOption@option^0,c
  2265  007A' 0E01               	movlw	1
  2266  007C' EC00' F000'        	call	_selectOption
  2267                           
  2268                           ;TCentral.c: 70:                     selectUser(pos - 1);
  2269  0080' 0400'              	decf	_pos^0,w,c
  2270  0082' EC00' F000'        	call	_selectUser
  2271  0086' D12B               	goto	l6257
  2272  0088'                    l6099:
  2273  0088' 0400'              	decf	_playing^0,w,c
  2274  008A' A4D8               	btfss	status,2,c
  2275  008C' D128               	goto	l6257
  2276                           
  2277                           ;TCentral.c: 73:                 selectMessage(3);
  2278  008E' 0E03               	movlw	3
  2279  0090' EC00' F000'        	call	_selectMessage
  2280                           
  2281                           ;TCentral.c: 75:             break;
  2282  0094' D124               	goto	l6257
  2283  0096'                    l6103:
  2284                           
  2285                           ;TCentral.c: 77:             if (playing == 1){
  2286  0096' 0400'              	decf	_playing^0,w,c
  2287  0098' A4D8               	btfss	status,2,c
  2288  009A' D121               	goto	l6257
  2289                           
  2290                           ;TCentral.c: 78:                 selectMessage(5);
  2291  009C' 0E05               	movlw	5
  2292  009E' EC00' F000'        	call	_selectMessage
  2293  00A2' D11D               	goto	l6257
  2294  00A4'                    l6107:
  2295                           
  2296                           ;TCentral.c: 82:             if (playing == 1){
  2297  00A4' 0400'              	decf	_playing^0,w,c
  2298  00A6' A4D8               	btfss	status,2,c
  2299  00A8' D11A               	goto	l6257
  2300                           
  2301                           ;TCentral.c: 83:                 selectMessage(6);
  2302  00AA' 0E06               	movlw	6
  2303  00AC' EC00' F000'        	call	_selectMessage
  2304  00B0' D116               	goto	l6257
  2305  00B2'                    l6111:
  2306                           
  2307                           ;TCentral.c: 87:             if (subMenu == 0 && playing == 0){
  2308  00B2' 5000'              	movf	_subMenu^0,w,c
  2309  00B4' A4D8               	btfss	status,2,c
  2310  00B6' D00B               	goto	l6117
  2311  00B8' 5000'              	movf	_playing^0,w,c
  2312  00BA' A4D8               	btfss	status,2,c
  2313  00BC' D008               	goto	l6117
  2314                           
  2315                           ;TCentral.c: 88:                 selectOption(1, 6, 2);
  2316  00BE' 0E06               	movlw	6
  2317  00C0' 6E00'              	movwf	selectOption@max^0,c
  2318  00C2' 0E02               	movlw	2
  2319  00C4' 6E00'              	movwf	selectOption@option^0,c
  2320  00C6' 0E01               	movlw	1
  2321  00C8' EC00' F000'        	call	_selectOption
  2322                           
  2323                           ;TCentral.c: 89:             } else if (subMenu == 1 || subMenu == 4) {
  2324  00CC' D108               	goto	l6257
  2325  00CE'                    l6117:
  2326  00CE' 0400'              	decf	_subMenu^0,w,c
  2327  00D0' B4D8               	btfsc	status,2,c
  2328  00D2' D004               	goto	u6510
  2329  00D4' 0E04               	movlw	4
  2330  00D6' 1800'              	xorwf	_subMenu^0,w,c
  2331  00D8' A4D8               	btfss	status,2,c
  2332  00DA' D02D               	goto	l6143
  2333  00DC'                    u6510:
  2334                           
  2335                           ;TCentral.c: 90:                 if ((subMenu == 1 && mGame == 0) || (subMenu == 4 && mM
      +                          odUSelect == 1)){
  2336  00DC' 0400'              	decf	_subMenu^0,w,c
  2337  00DE' A4D8               	btfss	status,2,c
  2338  00E0' D003               	goto	u6530
  2339  00E2' 5000'              	movf	_mGame^0,w,c
  2340  00E4' B4D8               	btfsc	status,2,c
  2341  00E6' D007               	goto	u6550
  2342  00E8'                    u6530:
  2343  00E8' 0E04               	movlw	4
  2344  00EA' 1800'              	xorwf	_subMenu^0,w,c
  2345  00EC' A4D8               	btfss	status,2,c
  2346  00EE' D00B               	goto	l6131
  2347  00F0' 0400'              	decf	_mModUSelect^0,w,c
  2348  00F2' A4D8               	btfss	status,2,c
  2349  00F4' D008               	goto	l6131
  2350  00F6'                    u6550:
  2351                           
  2352                           ;TCentral.c: 91:                     selectOption(1, 2, 2);
  2353  00F6' 0E02               	movlw	2
  2354  00F8' 6E00'              	movwf	selectOption@max^0,c
  2355  00FA' 0E02               	movlw	2
  2356  00FC' 6E00'              	movwf	selectOption@option^0,c
  2357  00FE' 0E01               	movlw	1
  2358  0100' EC00' F000'        	call	_selectOption
  2359                           
  2360                           ;TCentral.c: 92:                 } else if ((subMenu == 1 && mGame == 1) || (subMenu == 
      +                          4 && mModUSelect == 0)){
  2361  0104' D0EC               	goto	l6257
  2362  0106'                    l6131:
  2363  0106' 0400'              	decf	_subMenu^0,w,c
  2364  0108' A4D8               	btfss	status,2,c
  2365  010A' D003               	goto	u6570
  2366  010C' 0400'              	decf	_mGame^0,w,c
  2367  010E' B4D8               	btfsc	status,2,c
  2368  0110' D007               	goto	u6590
  2369  0112'                    u6570:
  2370  0112' 0E04               	movlw	4
  2371  0114' 1800'              	xorwf	_subMenu^0,w,c
  2372  0116' A4D8               	btfss	status,2,c
  2373  0118' D0E2               	goto	l6257
  2374  011A' 5000'              	movf	_mModUSelect^0,w,c
  2375  011C' A4D8               	btfss	status,2,c
  2376  011E' D0DF               	goto	l6257
  2377  0120'                    u6590:
  2378                           
  2379                           ;TCentral.c: 93:                     selectOption(1, numUsers, 2);
  2380  0120' C047' F010'        	movff	_numUsers,selectOption@max
  2381  0124' 0E02               	movlw	2
  2382  0126' 6E00'              	movwf	selectOption@option^0,c
  2383  0128' 0E01               	movlw	1
  2384  012A' EC00' F000'        	call	_selectOption
  2385                           
  2386                           ;TCentral.c: 94:                     selectUser(pos - 1);
  2387  012E' 0400'              	decf	_pos^0,w,c
  2388  0130' EC00' F000'        	call	_selectUser
  2389  0134' D0D4               	goto	l6257
  2390  0136'                    l6143:
  2391  0136' 0400'              	decf	_playing^0,w,c
  2392  0138' A4D8               	btfss	status,2,c
  2393  013A' D0D1               	goto	l6257
  2394                           
  2395                           ;TCentral.c: 97:                 selectMessage(4);
  2396  013C' 0E04               	movlw	4
  2397  013E' EC00' F000'        	call	_selectMessage
  2398  0142' D0CD               	goto	l6257
  2399  0144'                    l6147:
  2400                           
  2401                           ;TCentral.c: 103:             if (subMenu == 0 && playing == 0){
  2402  0144' 5000'              	movf	_subMenu^0,w,c
  2403  0146' A4D8               	btfss	status,2,c
  2404  0148' D01E               	goto	l6157
  2405  014A' 5000'              	movf	_playing^0,w,c
  2406  014C' A4D8               	btfss	status,2,c
  2407  014E' D01B               	goto	l6157
  2408                           
  2409                           ;TCentral.c: 104:                 subMenu = pos;
  2410  0150' C042' F041'        	movff	_pos,_subMenu
  2411                           
  2412                           ;TCentral.c: 105:                 if (subMenu == 2){
  2413  0154' 0E02               	movlw	2
  2414  0156' 1800'              	xorwf	_subMenu^0,w,c
  2415  0158' A4D8               	btfss	status,2,c
  2416  015A' D09A               	goto	l6243
  2417                           
  2418                           ;TCentral.c: 106:                     orderUsers(users1, 5, 1);
  2419  015C' 0E00'              	movlw	low _users1
  2420  015E' 6E00'              	movwf	orderUsers@users^0,c
  2421  0160' 0E00'              	movlw	high _users1
  2422  0162' 6E00'              	movwf	(orderUsers@users+1)^0,c
  2423  0164' 0E05               	movlw	5
  2424  0166' 6E00'              	movwf	orderUsers@offset^0,c
  2425  0168' 0E01               	movlw	1
  2426  016A' 6E00'              	movwf	orderUsers@extra^0,c
  2427  016C' EC00' F000'        	call	_orderUsers	;wreg free
  2428                           
  2429                           ;TCentral.c: 107:                     orderUsers(users2, 0, 0);
  2430  0170' 0E00'              	movlw	low _users2
  2431  0172' 6E00'              	movwf	orderUsers@users^0,c
  2432  0174' 0E00'              	movlw	high _users2
  2433  0176' 6E00'              	movwf	(orderUsers@users+1)^0,c
  2434  0178' 0E00               	movlw	0
  2435  017A' 6E00'              	movwf	orderUsers@offset^0,c
  2436  017C' 0E00               	movlw	0
  2437  017E' 6E00'              	movwf	orderUsers@extra^0,c
  2438  0180' EC00' F000'        	call	_orderUsers	;wreg free
  2439                           
  2440                           ;TCentral.c: 109:             } else if (subMenu == 1){
  2441                           
  2442                           ;TCentral.c: 108:                 }
  2443  0184' D085               	goto	l6243
  2444  0186'                    l6157:
  2445  0186' 0400'              	decf	_subMenu^0,w,c
  2446  0188' A4D8               	btfss	status,2,c
  2447  018A' D03E               	goto	l6197
  2448                           
  2449                           ;TCentral.c: 110:                 if (mGame == 0){
  2450  018C' 5000'              	movf	_mGame^0,w,c
  2451  018E' A4D8               	btfss	status,2,c
  2452  0190' D013               	goto	l6173
  2453                           
  2454                           ;TCentral.c: 111:                     if (mGame == 0){
  2455  0192' 5000'              	movf	_mGame^0,w,c
  2456  0194' B4D8               	btfsc	status,2,c
  2457                           
  2458                           ;TCentral.c: 112:                         mGame = pos;
  2459  0196' C042' F040'        	movff	_pos,_mGame
  2460                           
  2461                           ;TCentral.c: 114:                     if (mGame == 1){
  2462  019A' 0400'              	decf	_mGame^0,w,c
  2463  019C' A4D8               	btfss	status,2,c
  2464  019E' D004               	goto	l6169
  2465                           
  2466                           ;TCentral.c: 115:                         selectUser(pos - 1);
  2467  01A0' 0400'              	decf	_pos^0,w,c
  2468  01A2' EC00' F000'        	call	_selectUser
  2469                           
  2470                           ;TCentral.c: 116:                     } else if (mGame == 2){
  2471  01A6' D074               	goto	l6243
  2472  01A8'                    l6169:
  2473  01A8' 0E02               	movlw	2
  2474  01AA' 1800'              	xorwf	_mGame^0,w,c
  2475  01AC' A4D8               	btfss	status,2,c
  2476  01AE' D070               	goto	l6243
  2477                           
  2478                           ;TCentral.c: 117:                         selectUser(numUsers);
  2479  01B0' 5000'              	movf	_numUsers^0,w,c
  2480  01B2' EC00' F000'        	call	_selectUser
  2481  01B6' D06C               	goto	l6243
  2482  01B8'                    l6173:
  2483  01B8' 0400'              	decf	_mGame^0,w,c
  2484  01BA' A4D8               	btfss	status,2,c
  2485  01BC' D01B               	goto	l6189
  2486                           
  2487                           ;TCentral.c: 120:                     selectUser(pos - 1);
  2488  01BE' 0400'              	decf	_pos^0,w,c
  2489  01C0' EC00' F000'        	call	_selectUser
  2490                           
  2491                           ;TCentral.c: 121:                     reset();
  2492  01C4' EC00' F000'        	call	_reset	;wreg free
  2493                           
  2494                           ;TCentral.c: 122:                     selectMessage(1);
  2495  01C8' 0E01               	movlw	1
  2496  01CA' EC00' F000'        	call	_selectMessage
  2497                           
  2498                           ;TCentral.c: 123:                     playing = 1;
  2499  01CE' 0E01               	movlw	1
  2500  01D0' 6E00'              	movwf	_playing^0,c
  2501                           
  2502                           ;TCentral.c: 124:                     points[0] = points[1] = points[2] = hScore[0] = hS
      +                          core[1] = hScore[2] = '0';
  2503  01D2' 0E30               	movlw	48
  2504  01D4' 6E00'              	movwf	(_hScore+2)^0,c
  2505  01D6' C002' F001'        	movff	_hScore+2,_hScore+1
  2506  01DA' C001' F000'        	movff	_hScore+1,_hScore
  2507  01DE' C000' F005'        	movff	_hScore,_points+2
  2508  01E2' C005' F004'        	movff	_points+2,_points+1
  2509  01E6' C004' F003'        	movff	_points+1,_points
  2510                           
  2511                           ;TCentral.c: 125:                     initAM();
  2512  01EA' EC00' F000'        	call	_initAM	;wreg free
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;TCentral.c: 126:                     resetADC();
  2516  01EE' EC00' F000'        	call	_resetADC	;wreg free
  2517                           
  2518                           ;TCentral.c: 127:                 } else if (mGame == 2){
  2519  01F2' D04E               	goto	l6243
  2520  01F4'                    l6189:
  2521  01F4' 0E02               	movlw	2
  2522  01F6' 1800'              	xorwf	_mGame^0,w,c
  2523  01F8' A4D8               	btfss	status,2,c
  2524  01FA' D04A               	goto	l6243
  2525                           
  2526                           ;TCentral.c: 128:                     if(mModUEdit == 0){
  2527  01FC' 5000'              	movf	_mModUEdit^0,w,c
  2528  01FE' B4D8               	btfsc	status,2,c
  2529                           
  2530                           ;TCentral.c: 129:                         numUsers++;
  2531  0200' 2A00'              	incf	_numUsers^0,f,c
  2532  0202'                    l6195:
  2533                           
  2534                           ;TCentral.c: 131:                     reset();
  2535  0202' EC00' F000'        	call	_reset	;wreg free
  2536  0206' D044               	goto	l6243
  2537  0208'                    l6197:
  2538  0208' 0E04               	movlw	4
  2539  020A' 1800'              	xorwf	_subMenu^0,w,c
  2540  020C' A4D8               	btfss	status,2,c
  2541  020E' D01F               	goto	l6223
  2542                           
  2543                           ;TCentral.c: 134:                 if (mModUSelect == 0){
  2544  0210' 5000'              	movf	_mModUSelect^0,w,c
  2545  0212' A4D8               	btfss	status,2,c
  2546  0214' D006               	goto	l6205
  2547                           
  2548                           ;TCentral.c: 135:                     mModUSelect = 1;
  2549  0216' 0E01               	movlw	1
  2550  0218' 6E00'              	movwf	_mModUSelect^0,c
  2551                           
  2552                           ;TCentral.c: 136:                     selectUser(pos - 1);
  2553  021A' 0400'              	decf	_pos^0,w,c
  2554  021C' EC00' F000'        	call	_selectUser
  2555                           
  2556                           ;TCentral.c: 137:                 } else {
  2557  0220' D037               	goto	l6243
  2558  0222'                    l6205:
  2559                           
  2560                           ;TCentral.c: 138:                     if (mModUEdit == 0){
  2561  0222' 5000'              	movf	_mModUEdit^0,w,c
  2562  0224' A4D8               	btfss	status,2,c
  2563  0226' D034               	goto	l6243
  2564                           
  2565                           ;TCentral.c: 139:                         if (mModUEdit == 0){
  2566  0228' 5000'              	movf	_mModUEdit^0,w,c
  2567  022A' B4D8               	btfsc	status,2,c
  2568                           
  2569                           ;TCentral.c: 140:                             mModUEdit = pos;
  2570  022C' C042' F03E'        	movff	_pos,_mModUEdit
  2571                           
  2572                           ;TCentral.c: 142:                         if (mModUEdit == 1){
  2573  0230' 0400'              	decf	_mModUEdit^0,w,c
  2574  0232' A4D8               	btfss	status,2,c
  2575  0234' D004               	goto	l6215
  2576                           
  2577                           ;TCentral.c: 143:                             subMenu = 1;
  2578  0236' 0E01               	movlw	1
  2579  0238' 6E00'              	movwf	_subMenu^0,c
  2580                           
  2581                           ;TCentral.c: 144:                             mGame = 2;
  2582  023A' 0E02               	movlw	2
  2583  023C' 6E00'              	movwf	_mGame^0,c
  2584  023E'                    l6215:
  2585                           
  2586                           ;TCentral.c: 146:                         if (mModUEdit == 2){
  2587  023E' 0E02               	movlw	2
  2588  0240' 1800'              	xorwf	_mModUEdit^0,w,c
  2589  0242' A4D8               	btfss	status,2,c
  2590  0244' D025               	goto	l6243
  2591                           
  2592                           ;TCentral.c: 147:                             deleteUser();
  2593  0246' EC00' F000'        	call	_deleteUser	;wreg free
  2594                           
  2595                           ;TCentral.c: 148:                             numUsers--;
  2596  024A' 0600'              	decf	_numUsers^0,f,c
  2597  024C' D7DA               	goto	l6195
  2598  024E'                    l6223:
  2599  024E' 0E06               	movlw	6
  2600  0250' 1800'              	xorwf	_subMenu^0,w,c
  2601  0252' A4D8               	btfss	status,2,c
  2602  0254' D01D               	goto	l6243
  2603                           
  2604                           ;TCentral.c: 154:                 for (int i = 0; i < 5; i++){
  2605  0256' 0E00               	movlw	0
  2606  0258' 6E00'              	movwf	(manageKey@i+1)^0,c
  2607  025A' 0E00               	movlw	0
  2608  025C' 6E00'              	movwf	manageKey@i^0,c
  2609  025E'                    l6231:
  2610                           
  2611                           ;TCentral.c: 155:                     time[i] = timeAM[i];
  2612  025E' 5000'              	movf	manageKey@i^0,w,c
  2613  0260' 0F00'              	addlw	low _timeAM
  2614  0262' 6ED9               	movwf	fsr2l,c
  2615  0264' 6ADA               	clrf	fsr2h,c
  2616  0266' 5000'              	movf	manageKey@i^0,w,c
  2617  0268' 0F00'              	addlw	low _time
  2618  026A' 6EE1               	movwf	fsr1l,c
  2619  026C' 6AE2               	clrf	fsr1h,c
  2620  026E' CFDF FFE7          	movff	indf2,indf1
  2621                           
  2622                           ;TCentral.c: 156:                 }
  2623  0272' 4A00'              	infsnz	manageKey@i^0,f,c
  2624  0274' 2A00'              	incf	(manageKey@i+1)^0,f,c
  2625  0276' BE00'              	btfsc	(manageKey@i+1)^0,7,c
  2626  0278' D7F2               	goto	l6231
  2627  027A' 5000'              	movf	(manageKey@i+1)^0,w,c
  2628  027C' E104               	bnz	u6790
  2629  027E' 0E05               	movlw	5
  2630  0280' 5C00'              	subwf	manageKey@i^0,w,c
  2631  0282' A0D8               	btfss	status,0,c
  2632  0284' D7EC               	goto	l6231
  2633  0286'                    u6790:
  2634                           
  2635                           ;TCentral.c: 157:                 showHora = 1;
  2636  0286' 0E01               	movlw	1
  2637  0288' 6E00'              	movwf	_showHora^0,c
  2638                           
  2639                           ;TCentral.c: 158:                 resetHora();
  2640  028A' EC00' F000'        	call	_resetHora	;wreg free
  2641  028E' D7B9               	goto	l6195
  2642  0290'                    l6243:
  2643                           
  2644                           ;TCentral.c: 161:             pos = 1;
  2645  0290' 0E01               	movlw	1
  2646  0292' 6E00'              	movwf	_pos^0,c
  2647  0294'                    l6245:
  2648                           
  2649                           ;TCentral.c: 162:             resetMenu();
  2650  0294' EC00' F000'        	call	_resetMenu	;wreg free
  2651                           
  2652                           ;TCentral.c: 163:             break;
  2653  0298' D022               	goto	l6257
  2654  029A'                    l6247:
  2655                           
  2656                           ;TCentral.c: 165:             pos = 1;
  2657  029A' 0E01               	movlw	1
  2658  029C' 6E00'              	movwf	_pos^0,c
  2659                           
  2660                           ;TCentral.c: 166:             playing = 0;
  2661  029E' 0E00               	movlw	0
  2662  02A0' 6E00'              	movwf	_playing^0,c
  2663                           
  2664                           ;TCentral.c: 167:             reset();
  2665  02A2' EC00' F000'        	call	_reset	;wreg free
  2666  02A6' D7F6               	goto	l6245
  2667  02A8'                    l6255:
  2668  02A8' 5000'              	movf	manageKey@key^0,w,c
  2669  02AA' 6E00'              	movwf	??_manageKey^0,c
  2670  02AC' 6A00'              	clrf	(??_manageKey+1)^0,c
  2671                           
  2672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2673                           ; Switch size 1, requested type "simple"
  2674                           ; Number of cases is 1, Range of values is 0 to 0
  2675                           ; switch strategies available:
  2676                           ; Name         Instructions Cycles
  2677                           ; simple_byte            4     3 (average)
  2678                           ;	Chosen strategy is simple_byte
  2679  02AE' 5000'              	movf	(??_manageKey+1)^0,w,c
  2680  02B0' 0A00               	xorlw	0	; case 0
  2681  02B2' A4D8               	btfss	status,2,c
  2682  02B4' D014               	goto	l6257
  2683                           
  2684                           ; Switch size 1, requested type "simple"
  2685                           ; Number of cases is 7, Range of values is 35 to 57
  2686                           ; switch strategies available:
  2687                           ; Name         Instructions Cycles
  2688                           ; simple_byte           22    12 (average)
  2689                           ;	Chosen strategy is simple_byte
  2690  02B6' 5000'              	movf	??_manageKey^0,w,c
  2691  02B8' 0A23               	xorlw	35	; case 35
  2692  02BA' B4D8               	btfsc	status,2,c
  2693  02BC' D7EE               	goto	l6247
  2694  02BE' 0A09               	xorlw	9	; case 42
  2695  02C0' B4D8               	btfsc	status,2,c
  2696  02C2' D740               	goto	l6147
  2697  02C4' 0A18               	xorlw	24	; case 50
  2698  02C6' B4D8               	btfsc	status,2,c
  2699  02C8' D69D               	goto	l6067
  2700  02CA' 0A06               	xorlw	6	; case 52
  2701  02CC' B4D8               	btfsc	status,2,c
  2702  02CE' D6E3               	goto	l6103
  2703  02D0' 0A02               	xorlw	2	; case 54
  2704  02D2' B4D8               	btfsc	status,2,c
  2705  02D4' D6E7               	goto	l6107
  2706  02D6' 0A0E               	xorlw	14	; case 56
  2707  02D8' B4D8               	btfsc	status,2,c
  2708  02DA' D6EB               	goto	l6111
  2709  02DC' 0A01               	xorlw	1	; case 57
  2710  02DE'                    l6257:
  2711                           
  2712                           ;TCentral.c: 173:     actionsSubMenus(key, numChars);
  2713  02DE' C01A' F018'        	movff	manageKey@numChars,actionsSubMenus@numChars
  2714  02E2' 5000'              	movf	manageKey@key^0,w,c
  2715  02E4' EC00' F000'        	call	_actionsSubMenus
  2716  02E8' 0012               	return		;funcret
  2717  02EA'                    __end_of_manageKey:
  2718                           	callstack 0
  2719                           
  2720 ;; *************** function _selectUser *****************
  2721 ;; Defined at:
  2722 ;;		line 23 in file "TUsers.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  pos             1    wreg     unsigned char 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  pos             1    9[COMRAM] unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1
  2736 ;;      Params:         0       0       0
  2737 ;;      Locals:         1       0       0
  2738 ;;      Temps:          4       0       0
  2739 ;;      Totals:         5       0       0
  2740 ;;Total ram usage:        5 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 2
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_manageKey
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text5
  2751  0000'                    __ptext5:
  2752                           	callstack 0
  2753  0000'                    _selectUser:
  2754                           	callstack 25
  2755                           
  2756                           ;incstack = 0
  2757                           ;selectUser@pos stored from wreg
  2758  0000' 6E00'              	movwf	selectUser@pos^0,c
  2759                           
  2760                           ;TUsers.c: 24:     if (pos != 0){
  2761  0002' 5000'              	movf	selectUser@pos^0,w,c
  2762  0004' B4D8               	btfsc	status,2,c
  2763  0006' D019               	goto	l4493
  2764                           
  2765                           ;TUsers.c: 25:         if (pos % 2 != 0){
  2766  0008' A000'              	btfss	selectUser@pos^0,0,c
  2767  000A' D011               	goto	l4489
  2768                           
  2769                           ;TUsers.c: 26:             array = 2;
  2770  000C' 0E02               	movlw	2
  2771  000E' 6E00'              	movwf	_array^0,c
  2772                           
  2773                           ;TUsers.c: 27:             user = ((pos + 1) >> 1) - 1;
  2774  0010' 5000'              	movf	selectUser@pos^0,w,c
  2775  0012' 6E00'              	movwf	??_selectUser^0,c
  2776  0014' 6A00'              	clrf	(??_selectUser+1)^0,c
  2777  0016' 0E01               	movlw	1
  2778  0018' 2600'              	addwf	??_selectUser^0,f,c
  2779  001A' 0E00               	movlw	0
  2780  001C' 2200'              	addwfc	(??_selectUser+1)^0,f,c
  2781  001E' 3400'              	rlcf	(??_selectUser+1)^0,w,c
  2782  0020' 3000'              	rrcf	(??_selectUser+1)^0,w,c
  2783  0022' 6E00'              	movwf	(??_selectUser+3)^0,c
  2784  0024' 3000'              	rrcf	??_selectUser^0,w,c
  2785  0026' 6E00'              	movwf	(??_selectUser+2)^0,c
  2786  0028' 0400'              	decf	(??_selectUser+2)^0,w,c
  2787  002A' 6E00'              	movwf	_user^0,c
  2788                           
  2789                           ;TUsers.c: 28:         } else {
  2790  002C' 0012               	return	
  2791  002E'                    l4489:
  2792                           
  2793                           ;TUsers.c: 29:             array = 1;
  2794  002E' 0E01               	movlw	1
  2795  0030' 6E00'              	movwf	_array^0,c
  2796                           
  2797                           ;TUsers.c: 30:             user = pos >> 1;
  2798  0032' 90D8               	bcf	status,0,c
  2799  0034' 3000'              	rrcf	selectUser@pos^0,w,c
  2800  0036' 6E00'              	movwf	_user^0,c
  2801  0038' 0012               	return	
  2802  003A'                    l4493:
  2803                           
  2804                           ;TUsers.c: 33:         array = 1;
  2805  003A' 0E01               	movlw	1
  2806  003C' 6E00'              	movwf	_array^0,c
  2807                           
  2808                           ;TUsers.c: 34:         user = pos;
  2809  003E' C009' F046'        	movff	selectUser@pos,_user
  2810  0042' 0012               	return		;funcret
  2811  0044'                    __end_of_selectUser:
  2812                           	callstack 0
  2813                           
  2814 ;; *************** function _selectOption *****************
  2815 ;; Defined at:
  2816 ;;		line 12 in file "TCentral.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  min             1    wreg     unsigned char 
  2819 ;;  max             1   16[COMRAM] unsigned char 
  2820 ;;  option          1   17[COMRAM] unsigned char 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  min             1   18[COMRAM] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1
  2832 ;;      Params:         2       0       0
  2833 ;;      Locals:         1       0       0
  2834 ;;      Temps:          0       0       0
  2835 ;;      Totals:         3       0       0
  2836 ;;Total ram usage:        3 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 6
  2839 ;; This function calls:
  2840 ;;		_resetMenu
  2841 ;; This function is called by:
  2842 ;;		_manageKey
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text6
  2847  0000'                    __ptext6:
  2848                           	callstack 0
  2849  0000'                    _selectOption:
  2850                           	callstack 21
  2851                           
  2852                           ;incstack = 0
  2853                           ;selectOption@min stored from wreg
  2854  0000' 6E00'              	movwf	selectOption@min^0,c
  2855                           
  2856                           ;TCentral.c: 13:     if (option == 1){
  2857  0002' 0400'              	decf	selectOption@option^0,w,c
  2858  0004' A4D8               	btfss	status,2,c
  2859  0006' D009               	goto	l4439
  2860                           
  2861                           ;TCentral.c: 14:         if (pos == min){
  2862  0008' 5000'              	movf	selectOption@min^0,w,c
  2863  000A' 1800'              	xorwf	_pos^0,w,c
  2864  000C' A4D8               	btfss	status,2,c
  2865  000E' D003               	goto	l4437
  2866                           
  2867                           ;TCentral.c: 15:             pos = max;
  2868  0010' C010' F042'        	movff	selectOption@max,_pos
  2869                           
  2870                           ;TCentral.c: 16:         } else {
  2871  0014' D00A               	goto	l4445
  2872  0016'                    l4437:
  2873                           
  2874                           ;TCentral.c: 17:             pos--;
  2875  0016' 0600'              	decf	_pos^0,f,c
  2876  0018' D008               	goto	l4445
  2877  001A'                    l4439:
  2878                           
  2879                           ;TCentral.c: 20:         if (pos == max){
  2880  001A' 5000'              	movf	selectOption@max^0,w,c
  2881  001C' 1800'              	xorwf	_pos^0,w,c
  2882  001E' A4D8               	btfss	status,2,c
  2883  0020' D003               	goto	l4443
  2884                           
  2885                           ;TCentral.c: 21:             pos = min;
  2886  0022' C012' F042'        	movff	selectOption@min,_pos
  2887                           
  2888                           ;TCentral.c: 22:         } else {
  2889  0026' D001               	goto	l4445
  2890  0028'                    l4443:
  2891                           
  2892                           ;TCentral.c: 23:             pos++;
  2893  0028' 2A00'              	incf	_pos^0,f,c
  2894  002A'                    l4445:
  2895                           
  2896                           ;TCentral.c: 26:     resetMenu();
  2897  002A' EC00' F000'        	call	_resetMenu	;wreg free
  2898  002E' 0012               	return		;funcret
  2899  0030'                    __end_of_selectOption:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _resetHora *****************
  2903 ;; Defined at:
  2904 ;;		line 27 in file "THora.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;		None
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;                  1    wreg      void 
  2911 ;; Registers used:
  2912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMRAM   BANK0   BANK1
  2918 ;;      Params:         0       0       0
  2919 ;;      Locals:         0       0       0
  2920 ;;      Temps:          0       0       0
  2921 ;;      Totals:         0       0       0
  2922 ;;Total ram usage:        0 bytes
  2923 ;; Hardware stack levels used: 1
  2924 ;; Hardware stack levels required when called: 3
  2925 ;; This function calls:
  2926 ;;		_TiResetTics
  2927 ;; This function is called by:
  2928 ;;		_manageKey
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text7
  2933  0000'                    __ptext7:
  2934                           	callstack 0
  2935  0000'                    _resetHora:
  2936                           	callstack 24
  2937                           
  2938                           ;THora.c: 28:     TiResetTics(timer);
  2939                           
  2940                           ;incstack = 0
  2941  0000' 5000'              	movf	_timer@THora$F1425^0,w,c
  2942  0002' EC00' F000'        	call	_TiResetTics
  2943                           
  2944                           ;THora.c: 29:     seconds = 0;
  2945  0006' 0E00               	movlw	0
  2946  0008' 6E00'              	movwf	_seconds^0,c
  2947  000A' 0012               	return		;funcret
  2948  000C'                    __end_of_resetHora:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _resetADC *****************
  2952 ;; Defined at:
  2953 ;;		line 26 in file "TADC.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 3F/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1
  2967 ;;      Params:         0       0       0
  2968 ;;      Locals:         0       0       0
  2969 ;;      Temps:          0       0       0
  2970 ;;      Totals:         0       0       0
  2971 ;;Total ram usage:        0 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 3
  2974 ;; This function calls:
  2975 ;;		_TiResetTics
  2976 ;; This function is called by:
  2977 ;;		_manageKey
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text8
  2982  0000'                    __ptext8:
  2983                           	callstack 0
  2984  0000'                    _resetADC:
  2985                           	callstack 24
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;TADC.c: 27:     TiResetTics(timerADC);
  2989                           
  2990                           ;incstack = 0
  2991  0000' 5000'              	movf	_timerADC^0,w,c
  2992  0002' EC00' F000'        	call	_TiResetTics
  2993  0006' 0012               	return		;funcret
  2994  0008'                    __end_of_resetADC:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _reset *****************
  2998 ;; Defined at:
  2999 ;;		line 29 in file "TCentral.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1
  3013 ;;      Params:         0       0       0
  3014 ;;      Locals:         0       0       0
  3015 ;;      Temps:          0       0       0
  3016 ;;      Totals:         0       0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 2
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_manageKey
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text9
  3028  0000'                    __ptext9:
  3029                           	callstack 0
  3030  0000'                    _reset:
  3031                           	callstack 25
  3032                           
  3033                           ;incstack = 0
  3034  0000' 0E00               	movlw	0
  3035  0002' 6E00'              	movwf	_playing^0,c
  3036                           
  3037                           ;TCentral.c: 30:     subMenu = modeSMS = mGame = mModUSelect = mModUEdit = showAM = play
      +                          ing = 0;
  3038  0004' 0E00               	movlw	0
  3039  0006' 6E00'              	movwf	_showAM^0,c
  3040  0008' C03C' F03E'        	movff	_showAM,_mModUEdit
  3041  000C' C03E' F03F'        	movff	_mModUEdit,_mModUSelect
  3042  0010' C03F' F040'        	movff	_mModUSelect,_mGame
  3043  0014' C040' F03B'        	movff	_mGame,_modeSMS
  3044  0018' C03B' F041'        	movff	_modeSMS,_subMenu
  3045  001C' 0012               	return		;funcret
  3046  001E'                    __end_of_reset:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _orderUsers *****************
  3050 ;; Defined at:
  3051 ;;		line 74 in file "TUsers.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  users           2   11[COMRAM] PTR struct .
  3054 ;;		 -> users2(110), users1(110), 
  3055 ;;  offset          1   13[COMRAM] unsigned char 
  3056 ;;  extra           1   14[COMRAM] unsigned char 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  k               2   19[COMRAM] int 
  3059 ;;  j               2   23[COMRAM] int 
  3060 ;;  i               2   21[COMRAM] int 
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1
  3070 ;;      Params:         4       0       0
  3071 ;;      Locals:         6       0       0
  3072 ;;      Temps:          4       0       0
  3073 ;;      Totals:        14       0       0
  3074 ;;Total ram usage:       14 bytes
  3075 ;; Hardware stack levels used: 1
  3076 ;; Hardware stack levels required when called: 3
  3077 ;; This function calls:
  3078 ;;		___wmul
  3079 ;; This function is called by:
  3080 ;;		_manageKey
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text10
  3085  0000'                    __ptext10:
  3086                           	callstack 0
  3087  0000'                    _orderUsers:
  3088                           	callstack 24
  3089                           
  3090                           ;TUsers.c: 75:     for (int i = offset; i < 9 + extra; i++){
  3091                           
  3092                           ;incstack = 0
  3093  0000' C00D' F015'        	movff	orderUsers@offset,orderUsers@i
  3094  0004' 6A00'              	clrf	(orderUsers@i+1)^0,c
  3095  0006' D10B               	goto	l6051
  3096  0008'                    l6013:
  3097                           
  3098                           ;TUsers.c: 76:         for(int j = 0; j < 5; j++){
  3099  0008' 0E00               	movlw	0
  3100  000A' 6E00'              	movwf	(orderUsers@j+1)^0,c
  3101  000C' 0E00               	movlw	0
  3102  000E' 6E00'              	movwf	orderUsers@j^0,c
  3103  0010'                    l6019:
  3104                           
  3105                           ;TUsers.c: 77:             if (users[i].score > users1[j].score){
  3106  0010' C015' F005'        	movff	orderUsers@i,___wmul@multiplier
  3107  0014' C016' F006'        	movff	orderUsers@i+1,___wmul@multiplier+1
  3108  0018' 0E00               	movlw	0
  3109  001A' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3110  001C' 0E0B               	movlw	11
  3111  001E' 6E00'              	movwf	___wmul@multiplicand^0,c
  3112  0020' EC00' F000'        	call	___wmul	;wreg free
  3113  0024' C00B' F00F'        	movff	orderUsers@users,??_orderUsers
  3114  0028' C00C' F010'        	movff	orderUsers@users+1,??_orderUsers+1
  3115  002C' 5000'              	movf	?___wmul^0,w,c
  3116  002E' 2600'              	addwf	??_orderUsers^0,f,c
  3117  0030' 5000'              	movf	(?___wmul+1)^0,w,c
  3118  0032' 2200'              	addwfc	(??_orderUsers+1)^0,f,c
  3119  0034' 0E0A               	movlw	10
  3120  0036' 2400'              	addwf	??_orderUsers^0,w,c
  3121  0038' 6ED9               	movwf	fsr2l,c
  3122  003A' 0E00               	movlw	0
  3123  003C' 2000'              	addwfc	(??_orderUsers+1)^0,w,c
  3124  003E' 6EDA               	movwf	fsr2h,c
  3125  0040' C017' F005'        	movff	orderUsers@j,___wmul@multiplier
  3126  0044' C018' F006'        	movff	orderUsers@j+1,___wmul@multiplier+1
  3127  0048' 0E00               	movlw	0
  3128  004A' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3129  004C' 0E0B               	movlw	11
  3130  004E' 6E00'              	movwf	___wmul@multiplicand^0,c
  3131  0050' EC00' F000'        	call	___wmul	;wreg free
  3132  0054' 0E00'              	movlw	low (_users1+10)
  3133  0056' 2400'              	addwf	?___wmul^0,w,c
  3134  0058' 6EE1               	movwf	fsr1l,c
  3135  005A' 0E00'              	movlw	high (_users1+10)
  3136  005C' 2000'              	addwfc	(?___wmul+1)^0,w,c
  3137  005E' 6EE2               	movwf	fsr1h,c
  3138  0060' 50DE               	movf	postinc2,w,c
  3139  0062' 5CE6               	subwf	postinc1,w,c
  3140  0064' B0D8               	btfsc	status,0,c
  3141  0066' D0CF               	goto	l6045
  3142                           
  3143                           ;TUsers.c: 78:                 for(int k = 0; k < 10; k++){
  3144  0068' 0E00               	movlw	0
  3145  006A' 6E00'              	movwf	(orderUsers@k+1)^0,c
  3146  006C' 0E00               	movlw	0
  3147  006E' 6E00'              	movwf	orderUsers@k^0,c
  3148  0070'                    l6027:
  3149                           
  3150                           ;TUsers.c: 79:                     name = users1[j].name[k];
  3151  0070' C017' F005'        	movff	orderUsers@j,___wmul@multiplier
  3152  0074' C018' F006'        	movff	orderUsers@j+1,___wmul@multiplier+1
  3153  0078' 0E00               	movlw	0
  3154  007A' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3155  007C' 0E0B               	movlw	11
  3156  007E' 6E00'              	movwf	___wmul@multiplicand^0,c
  3157  0080' EC00' F000'        	call	___wmul	;wreg free
  3158  0084' 0E00'              	movlw	low _users1
  3159  0086' 6E00'              	movwf	??_orderUsers^0,c
  3160  0088' 0E00'              	movlw	high _users1
  3161  008A' 6E00'              	movwf	(??_orderUsers+1)^0,c
  3162  008C' 5000'              	movf	?___wmul^0,w,c
  3163  008E' 2600'              	addwf	??_orderUsers^0,f,c
  3164  0090' 5000'              	movf	(?___wmul+1)^0,w,c
  3165  0092' 2200'              	addwfc	(??_orderUsers+1)^0,f,c
  3166  0094' 5000'              	movf	orderUsers@k^0,w,c
  3167  0096' 2400'              	addwf	??_orderUsers^0,w,c
  3168  0098' 6ED9               	movwf	fsr2l,c
  3169  009A' 5000'              	movf	(orderUsers@k+1)^0,w,c
  3170  009C' 2000'              	addwfc	(??_orderUsers+1)^0,w,c
  3171  009E' 6EDA               	movwf	fsr2h,c
  3172  00A0' 50DF               	movf	indf2,w,c
  3173  00A2' 6E00'              	movwf	_name^0,c
  3174                           
  3175                           ;TUsers.c: 80:                     users1[j].name[k] = users[i].name[k];
  3176  00A4' C015' F005'        	movff	orderUsers@i,___wmul@multiplier
  3177  00A8' C016' F006'        	movff	orderUsers@i+1,___wmul@multiplier+1
  3178  00AC' 0E00               	movlw	0
  3179  00AE' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3180  00B0' 0E0B               	movlw	11
  3181  00B2' 6E00'              	movwf	___wmul@multiplicand^0,c
  3182  00B4' EC00' F000'        	call	___wmul	;wreg free
  3183  00B8' C00B' F00F'        	movff	orderUsers@users,??_orderUsers
  3184  00BC' C00C' F010'        	movff	orderUsers@users+1,??_orderUsers+1
  3185  00C0' 5000'              	movf	?___wmul^0,w,c
  3186  00C2' 2600'              	addwf	??_orderUsers^0,f,c
  3187  00C4' 5000'              	movf	(?___wmul+1)^0,w,c
  3188  00C6' 2200'              	addwfc	(??_orderUsers+1)^0,f,c
  3189  00C8' 5000'              	movf	orderUsers@k^0,w,c
  3190  00CA' 2400'              	addwf	??_orderUsers^0,w,c
  3191  00CC' 6ED9               	movwf	fsr2l,c
  3192  00CE' 5000'              	movf	(orderUsers@k+1)^0,w,c
  3193  00D0' 2000'              	addwfc	(??_orderUsers+1)^0,w,c
  3194  00D2' 6EDA               	movwf	fsr2h,c
  3195  00D4' C017' F005'        	movff	orderUsers@j,___wmul@multiplier
  3196  00D8' C018' F006'        	movff	orderUsers@j+1,___wmul@multiplier+1
  3197  00DC' 0E00               	movlw	0
  3198  00DE' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3199  00E0' 0E0B               	movlw	11
  3200  00E2' 6E00'              	movwf	___wmul@multiplicand^0,c
  3201  00E4' EC00' F000'        	call	___wmul	;wreg free
  3202  00E8' 0E00'              	movlw	low _users1
  3203  00EA' 6E00'              	movwf	(??_orderUsers+2)^0,c
  3204  00EC' 0E00'              	movlw	high _users1
  3205  00EE' 6E00'              	movwf	(??_orderUsers+3)^0,c
  3206  00F0' 5000'              	movf	?___wmul^0,w,c
  3207  00F2' 2600'              	addwf	(??_orderUsers+2)^0,f,c
  3208  00F4' 5000'              	movf	(?___wmul+1)^0,w,c
  3209  00F6' 2200'              	addwfc	(??_orderUsers+3)^0,f,c
  3210  00F8' 5000'              	movf	orderUsers@k^0,w,c
  3211  00FA' 2400'              	addwf	(??_orderUsers+2)^0,w,c
  3212  00FC' 6EE1               	movwf	fsr1l,c
  3213  00FE' 5000'              	movf	(orderUsers@k+1)^0,w,c
  3214  0100' 2000'              	addwfc	(??_orderUsers+3)^0,w,c
  3215  0102' 6EE2               	movwf	fsr1h,c
  3216  0104' CFDF FFE7          	movff	indf2,indf1
  3217                           
  3218                           ;TUsers.c: 81:                     users[i].name[k] = name;
  3219  0108' C015' F005'        	movff	orderUsers@i,___wmul@multiplier
  3220  010C' C016' F006'        	movff	orderUsers@i+1,___wmul@multiplier+1
  3221  0110' 0E00               	movlw	0
  3222  0112' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3223  0114' 0E0B               	movlw	11
  3224  0116' 6E00'              	movwf	___wmul@multiplicand^0,c
  3225  0118' EC00' F000'        	call	___wmul	;wreg free
  3226  011C' C00B' F00F'        	movff	orderUsers@users,??_orderUsers
  3227  0120' C00C' F010'        	movff	orderUsers@users+1,??_orderUsers+1
  3228  0124' 5000'              	movf	?___wmul^0,w,c
  3229  0126' 2600'              	addwf	??_orderUsers^0,f,c
  3230  0128' 5000'              	movf	(?___wmul+1)^0,w,c
  3231  012A' 2200'              	addwfc	(??_orderUsers+1)^0,f,c
  3232  012C' 5000'              	movf	orderUsers@k^0,w,c
  3233  012E' 2400'              	addwf	??_orderUsers^0,w,c
  3234  0130' 6ED9               	movwf	fsr2l,c
  3235  0132' 5000'              	movf	(orderUsers@k+1)^0,w,c
  3236  0134' 2000'              	addwfc	(??_orderUsers+1)^0,w,c
  3237  0136' 6EDA               	movwf	fsr2h,c
  3238  0138' C018' FFDF         	movff	_name,indf2
  3239                           
  3240                           ;TUsers.c: 82:                 }
  3241  013C' 4A00'              	infsnz	orderUsers@k^0,f,c
  3242  013E' 2A00'              	incf	(orderUsers@k+1)^0,f,c
  3243  0140' BE00'              	btfsc	(orderUsers@k+1)^0,7,c
  3244  0142' D796               	goto	l6027
  3245  0144' 5000'              	movf	(orderUsers@k+1)^0,w,c
  3246  0146' E104               	bnz	u6280
  3247  0148' 0E0A               	movlw	10
  3248  014A' 5C00'              	subwf	orderUsers@k^0,w,c
  3249  014C' A0D8               	btfss	status,0,c
  3250  014E' D790               	goto	l6027
  3251  0150'                    u6280:
  3252                           
  3253                           ;TUsers.c: 83:                 scoreUser = users1[j].score;
  3254  0150' C017' F005'        	movff	orderUsers@j,___wmul@multiplier
  3255  0154' C018' F006'        	movff	orderUsers@j+1,___wmul@multiplier+1
  3256  0158' 0E00               	movlw	0
  3257  015A' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3258  015C' 0E0B               	movlw	11
  3259  015E' 6E00'              	movwf	___wmul@multiplicand^0,c
  3260  0160' EC00' F000'        	call	___wmul	;wreg free
  3261  0164' 0E00'              	movlw	low (_users1+10)
  3262  0166' 2400'              	addwf	?___wmul^0,w,c
  3263  0168' 6ED9               	movwf	fsr2l,c
  3264  016A' 0E00'              	movlw	high (_users1+10)
  3265  016C' 2000'              	addwfc	(?___wmul+1)^0,w,c
  3266  016E' 6EDA               	movwf	fsr2h,c
  3267  0170' 50DF               	movf	indf2,w,c
  3268  0172' 6E00'              	movwf	_scoreUser^0,c
  3269                           
  3270                           ;TUsers.c: 84:                 users1[j].score = users[i].score;
  3271  0174' C015' F005'        	movff	orderUsers@i,___wmul@multiplier
  3272  0178' C016' F006'        	movff	orderUsers@i+1,___wmul@multiplier+1
  3273  017C' 0E00               	movlw	0
  3274  017E' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3275  0180' 0E0B               	movlw	11
  3276  0182' 6E00'              	movwf	___wmul@multiplicand^0,c
  3277  0184' EC00' F000'        	call	___wmul	;wreg free
  3278  0188' C00B' F00F'        	movff	orderUsers@users,??_orderUsers
  3279  018C' C00C' F010'        	movff	orderUsers@users+1,??_orderUsers+1
  3280  0190' 5000'              	movf	?___wmul^0,w,c
  3281  0192' 2600'              	addwf	??_orderUsers^0,f,c
  3282  0194' 5000'              	movf	(?___wmul+1)^0,w,c
  3283  0196' 2200'              	addwfc	(??_orderUsers+1)^0,f,c
  3284  0198' 0E0A               	movlw	10
  3285  019A' 2400'              	addwf	??_orderUsers^0,w,c
  3286  019C' 6ED9               	movwf	fsr2l,c
  3287  019E' 0E00               	movlw	0
  3288  01A0' 2000'              	addwfc	(??_orderUsers+1)^0,w,c
  3289  01A2' 6EDA               	movwf	fsr2h,c
  3290  01A4' C017' F005'        	movff	orderUsers@j,___wmul@multiplier
  3291  01A8' C018' F006'        	movff	orderUsers@j+1,___wmul@multiplier+1
  3292  01AC' 0E00               	movlw	0
  3293  01AE' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3294  01B0' 0E0B               	movlw	11
  3295  01B2' 6E00'              	movwf	___wmul@multiplicand^0,c
  3296  01B4' EC00' F000'        	call	___wmul	;wreg free
  3297  01B8' 0E00'              	movlw	low (_users1+10)
  3298  01BA' 2400'              	addwf	?___wmul^0,w,c
  3299  01BC' 6EE1               	movwf	fsr1l,c
  3300  01BE' 0E00'              	movlw	high (_users1+10)
  3301  01C0' 2000'              	addwfc	(?___wmul+1)^0,w,c
  3302  01C2' 6EE2               	movwf	fsr1h,c
  3303  01C4' CFDF FFE7          	movff	indf2,indf1
  3304                           
  3305                           ;TUsers.c: 85:                 users[i].score = scoreUser;
  3306  01C8' C015' F005'        	movff	orderUsers@i,___wmul@multiplier
  3307  01CC' C016' F006'        	movff	orderUsers@i+1,___wmul@multiplier+1
  3308  01D0' 0E00               	movlw	0
  3309  01D2' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  3310  01D4' 0E0B               	movlw	11
  3311  01D6' 6E00'              	movwf	___wmul@multiplicand^0,c
  3312  01D8' EC00' F000'        	call	___wmul	;wreg free
  3313  01DC' C00B' F00F'        	movff	orderUsers@users,??_orderUsers
  3314  01E0' C00C' F010'        	movff	orderUsers@users+1,??_orderUsers+1
  3315  01E4' 5000'              	movf	?___wmul^0,w,c
  3316  01E6' 2600'              	addwf	??_orderUsers^0,f,c
  3317  01E8' 5000'              	movf	(?___wmul+1)^0,w,c
  3318  01EA' 2200'              	addwfc	(??_orderUsers+1)^0,f,c
  3319  01EC' 0E0A               	movlw	10
  3320  01EE' 2400'              	addwf	??_orderUsers^0,w,c
  3321  01F0' 6ED9               	movwf	fsr2l,c
  3322  01F2' 0E00               	movlw	0
  3323  01F4' 2000'              	addwfc	(??_orderUsers+1)^0,w,c
  3324  01F6' 6EDA               	movwf	fsr2h,c
  3325  01F8' C017' FFDF         	movff	_scoreUser,indf2
  3326                           
  3327                           ;TUsers.c: 86:                 i = 0;
  3328  01FC' 0E00               	movlw	0
  3329  01FE' 6E00'              	movwf	(orderUsers@i+1)^0,c
  3330  0200' 0E00               	movlw	0
  3331  0202' 6E00'              	movwf	orderUsers@i^0,c
  3332                           
  3333                           ;TUsers.c: 87:                 break;
  3334  0204' D00A               	goto	u6290
  3335  0206'                    l6045:
  3336                           
  3337                           ;TUsers.c: 89:         }
  3338  0206' 4A00'              	infsnz	orderUsers@j^0,f,c
  3339  0208' 2A00'              	incf	(orderUsers@j+1)^0,f,c
  3340  020A' BE00'              	btfsc	(orderUsers@j+1)^0,7,c
  3341  020C' D701               	goto	l6019
  3342  020E' 5000'              	movf	(orderUsers@j+1)^0,w,c
  3343  0210' E104               	bnz	u6290
  3344  0212' 0E05               	movlw	5
  3345  0214' 5C00'              	subwf	orderUsers@j^0,w,c
  3346  0216' A0D8               	btfss	status,0,c
  3347  0218' D6FB               	goto	l6019
  3348  021A'                    u6290:
  3349                           
  3350                           ;TUsers.c: 90:     }
  3351  021A' 4A00'              	infsnz	orderUsers@i^0,f,c
  3352  021C' 2A00'              	incf	(orderUsers@i+1)^0,f,c
  3353  021E'                    l6051:
  3354  021E' 5000'              	movf	orderUsers@extra^0,w,c
  3355  0220' 6E00'              	movwf	??_orderUsers^0,c
  3356  0222' 6A00'              	clrf	(??_orderUsers+1)^0,c
  3357  0224' 0E09               	movlw	9
  3358  0226' 2600'              	addwf	??_orderUsers^0,f,c
  3359  0228' 0E00               	movlw	0
  3360  022A' 2200'              	addwfc	(??_orderUsers+1)^0,f,c
  3361  022C' 5000'              	movf	??_orderUsers^0,w,c
  3362  022E' 5C00'              	subwf	orderUsers@i^0,w,c
  3363  0230' 5000'              	movf	(orderUsers@i+1)^0,w,c
  3364  0232' 0A80               	xorlw	128
  3365  0234' 6E00'              	movwf	(??_orderUsers+2)^0,c
  3366  0236' 5000'              	movf	(??_orderUsers+1)^0,w,c
  3367  0238' 0A80               	xorlw	128
  3368  023A' 5800'              	subwfb	(??_orderUsers+2)^0,w,c
  3369  023C' B0D8               	btfsc	status,0,c
  3370  023E' 0012               	return	
  3371  0240' D6E3               	goto	l6013
  3372  0242'                    __end_of_orderUsers:
  3373                           	callstack 0
  3374                           
  3375 ;; *************** function _initAM *****************
  3376 ;; Defined at:
  3377 ;;		line 20 in file "THora.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 3F/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1
  3391 ;;      Params:         0       0       0
  3392 ;;      Locals:         0       0       0
  3393 ;;      Temps:          0       0       0
  3394 ;;      Totals:         0       0       0
  3395 ;;Total ram usage:        0 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 3
  3398 ;; This function calls:
  3399 ;;		_TiResetTics
  3400 ;; This function is called by:
  3401 ;;		_manageKey
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text11
  3406  0000'                    __ptext11:
  3407                           	callstack 0
  3408  0000'                    _initAM:
  3409                           	callstack 24
  3410                           
  3411                           ;THora.c: 21:     TiResetTics(timerAM);
  3412                           
  3413                           ;incstack = 0
  3414  0000' 5000'              	movf	_timerAM^0,w,c
  3415  0002' EC00' F000'        	call	_TiResetTics
  3416                           
  3417                           ;THora.c: 22:     timeAM[0] = timeAM[1] = timeAM[3] = timeAM[4]= '0';
  3418  0006' 0E30               	movlw	48
  3419  0008' 0100               	movlb	0	; () banked
  3420  000A' 6F00'              	movwf	(_timeAM+4)& (0+255),b
  3421  000C' C064' F063'        	movff	_timeAM+4,_timeAM+3
  3422  0010' C063' F061'        	movff	_timeAM+3,_timeAM+1
  3423  0014' C061' F060'        	movff	_timeAM+1,_timeAM
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;THora.c: 23:     timeAM[2] = ':';
  3427  0018' 0E3A               	movlw	58
  3428  001A' 6F00'              	movwf	(_timeAM+2)& (0+255),b
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;THora.c: 24:     stateAM = 0;
  3432  001C' 0E00               	movlw	0
  3433  001E' 6E00'              	movwf	_stateAM^0,c
  3434                           
  3435                           ; BSR set to: 0
  3436  0020' 0012               	return		;funcret
  3437  0022'                    __end_of_initAM:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _deleteUser *****************
  3441 ;; Defined at:
  3442 ;;		line 63 in file "TUsers.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1
  3456 ;;      Params:         0       0       0
  3457 ;;      Locals:         0       0       0
  3458 ;;      Temps:          6       0       0
  3459 ;;      Totals:         6       0       0
  3460 ;;Total ram usage:        6 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 3
  3463 ;; This function calls:
  3464 ;;		_changeUser
  3465 ;; This function is called by:
  3466 ;;		_manageKey
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text12
  3471  0000'                    __ptext12:
  3472                           	callstack 0
  3473  0000'                    _deleteUser:
  3474                           	callstack 24
  3475                           
  3476                           ;TUsers.c: 64:     static unsigned char numUsersAux = 0;;TUsers.c: 65:     if ((numUsers
      +                           - 1) % 2 != 0 && (numUsers - 1) != 0){
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;incstack = 0
  3480  0000' C047' F010'        	movff	_numUsers,??_deleteUser
  3481  0004' 0EFF               	movlw	255
  3482  0006' 2600'              	addwf	??_deleteUser^0,f,c
  3483  0008' A000'              	btfss	??_deleteUser^0,0,c
  3484  000A' D01E               	goto	l6061
  3485  000C' 0EFF               	movlw	255
  3486  000E' 6E00'              	movwf	??_deleteUser^0,c
  3487  0010' 0EFF               	movlw	255
  3488  0012' 6E00'              	movwf	(??_deleteUser+1)^0,c
  3489  0014' 5000'              	movf	_numUsers^0,w,c
  3490  0016' 6E00'              	movwf	(??_deleteUser+2)^0,c
  3491  0018' 6A00'              	clrf	(??_deleteUser+3)^0,c
  3492  001A' 5000'              	movf	??_deleteUser^0,w,c
  3493  001C' 2600'              	addwf	(??_deleteUser+2)^0,f,c
  3494  001E' 5000'              	movf	(??_deleteUser+1)^0,w,c
  3495  0020' 2200'              	addwfc	(??_deleteUser+3)^0,f,c
  3496  0022' 5000'              	movf	(??_deleteUser+2)^0,w,c
  3497  0024' 1000'              	iorwf	(??_deleteUser+3)^0,w,c
  3498  0026' B4D8               	btfsc	status,2,c
  3499  0028' D00F               	goto	l6061
  3500                           
  3501                           ;TUsers.c: 66:         numUsersAux = ((numUsers) >> 1) - 1;
  3502  002A' C047' F010'        	movff	_numUsers,??_deleteUser
  3503  002E' 90D8               	bcf	status,0,c
  3504  0030' 3200'              	rrcf	??_deleteUser^0,f,c
  3505  0032' 0400'              	decf	??_deleteUser^0,w,c
  3506  0034' 6E00'              	movwf	deleteUser@numUsersAux^0,c
  3507                           
  3508                           ;TUsers.c: 67:         changeUser(users2, numUsersAux);
  3509  0036' 0E00'              	movlw	low _users2
  3510  0038' 6E00'              	movwf	changeUser@users^0,c
  3511  003A' 0E00'              	movlw	high _users2
  3512  003C' 6E00'              	movwf	(changeUser@users+1)^0,c
  3513  003E' C016' F007'        	movff	deleteUser@numUsersAux,changeUser@numUsersAux
  3514  0042' EC00' F000'        	call	_changeUser	;wreg free
  3515                           
  3516                           ;TUsers.c: 68:     } else {
  3517  0046' 0012               	return	
  3518  0048'                    l6061:
  3519                           
  3520                           ;TUsers.c: 69:         numUsersAux = ((numUsers - 1) >> 1);
  3521  0048' 0EFF               	movlw	255
  3522  004A' 6E00'              	movwf	??_deleteUser^0,c
  3523  004C' 0EFF               	movlw	255
  3524  004E' 6E00'              	movwf	(??_deleteUser+1)^0,c
  3525  0050' 5000'              	movf	_numUsers^0,w,c
  3526  0052' 6E00'              	movwf	(??_deleteUser+2)^0,c
  3527  0054' 6A00'              	clrf	(??_deleteUser+3)^0,c
  3528  0056' 5000'              	movf	??_deleteUser^0,w,c
  3529  0058' 2600'              	addwf	(??_deleteUser+2)^0,f,c
  3530  005A' 5000'              	movf	(??_deleteUser+1)^0,w,c
  3531  005C' 2200'              	addwfc	(??_deleteUser+3)^0,f,c
  3532  005E' 3400'              	rlcf	(??_deleteUser+3)^0,w,c
  3533  0060' 3000'              	rrcf	(??_deleteUser+3)^0,w,c
  3534  0062' 6E00'              	movwf	(??_deleteUser+5)^0,c
  3535  0064' 3000'              	rrcf	(??_deleteUser+2)^0,w,c
  3536  0066' 6E00'              	movwf	(??_deleteUser+4)^0,c
  3537  0068' 5000'              	movf	(??_deleteUser+4)^0,w,c
  3538  006A' 6E00'              	movwf	deleteUser@numUsersAux^0,c
  3539                           
  3540                           ;TUsers.c: 70:         changeUser(users1, numUsersAux);
  3541  006C' 0E00'              	movlw	low _users1
  3542  006E' 6E00'              	movwf	changeUser@users^0,c
  3543  0070' 0E00'              	movlw	high _users1
  3544  0072' 6E00'              	movwf	(changeUser@users+1)^0,c
  3545  0074' C016' F007'        	movff	deleteUser@numUsersAux,changeUser@numUsersAux
  3546  0078' EC00' F000'        	call	_changeUser	;wreg free
  3547  007C' 0012               	return		;funcret
  3548  007E'                    __end_of_deleteUser:
  3549                           	callstack 0
  3550                           
  3551 ;; *************** function _changeUser *****************
  3552 ;; Defined at:
  3553 ;;		line 46 in file "TUsers.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  users           2    5[COMRAM] PTR struct .
  3556 ;;		 -> users2(110), users1(110), 
  3557 ;;  numUsersAux     1    7[COMRAM] unsigned char 
  3558 ;; Auto vars:     Size  Location     Type
  3559 ;;  i               2   14[COMRAM] int 
  3560 ;;  i               2   12[COMRAM] int 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      void 
  3563 ;; Registers used:
  3564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1
  3570 ;;      Params:         3       0       0
  3571 ;;      Locals:         4       0       0
  3572 ;;      Temps:          4       0       0
  3573 ;;      Totals:        11       0       0
  3574 ;;Total ram usage:       11 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; Hardware stack levels required when called: 2
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_deleteUser
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text13
  3585  0000'                    __ptext13:
  3586                           	callstack 0
  3587  0000'                    _changeUser:
  3588                           	callstack 24
  3589                           
  3590                           ;TUsers.c: 47:         if (array == 1) {
  3591                           
  3592                           ;incstack = 0
  3593  0000' 0400'              	decf	_array^0,w,c
  3594  0002' A4D8               	btfss	status,2,c
  3595  0004' D059               	goto	l5987
  3596                           
  3597                           ;TUsers.c: 48:             for (int i = 0; i < 10; i++){
  3598  0006' 0E00               	movlw	0
  3599  0008' 6E00'              	movwf	(changeUser@i+1)^0,c
  3600  000A' 0E00               	movlw	0
  3601  000C' 6E00'              	movwf	changeUser@i^0,c
  3602  000E'                    l5977:
  3603                           
  3604                           ;TUsers.c: 49:                 users1[user].name[i] = users[numUsersAux].name[i];
  3605  000E' 5000'              	movf	changeUser@numUsersAux^0,w,c
  3606  0010' 0D0B               	mullw	11
  3607  0012' C005' F008'        	movff	changeUser@users,??_changeUser
  3608  0016' C006' F009'        	movff	changeUser@users+1,??_changeUser+1
  3609  001A' 50F3               	movf	243,w,c
  3610  001C' 2600'              	addwf	??_changeUser^0,f,c
  3611  001E' 50F4               	movf	244,w,c
  3612  0020' 2200'              	addwfc	(??_changeUser+1)^0,f,c
  3613  0022' 5000'              	movf	changeUser@i^0,w,c
  3614  0024' 2400'              	addwf	??_changeUser^0,w,c
  3615  0026' 6ED9               	movwf	fsr2l,c
  3616  0028' 5000'              	movf	(changeUser@i+1)^0,w,c
  3617  002A' 2000'              	addwfc	(??_changeUser+1)^0,w,c
  3618  002C' 6EDA               	movwf	fsr2h,c
  3619  002E' 5000'              	movf	_user^0,w,c
  3620  0030' 0D0B               	mullw	11
  3621  0032' 0E00'              	movlw	low _users1
  3622  0034' 6E00'              	movwf	(??_changeUser+2)^0,c
  3623  0036' 0E00'              	movlw	high _users1
  3624  0038' 6E00'              	movwf	(??_changeUser+3)^0,c
  3625  003A' 50F3               	movf	243,w,c
  3626  003C' 2600'              	addwf	(??_changeUser+2)^0,f,c
  3627  003E' 50F4               	movf	244,w,c
  3628  0040' 2200'              	addwfc	(??_changeUser+3)^0,f,c
  3629  0042' 5000'              	movf	changeUser@i^0,w,c
  3630  0044' 2400'              	addwf	(??_changeUser+2)^0,w,c
  3631  0046' 6EE1               	movwf	fsr1l,c
  3632  0048' 5000'              	movf	(changeUser@i+1)^0,w,c
  3633  004A' 2000'              	addwfc	(??_changeUser+3)^0,w,c
  3634  004C' 6EE2               	movwf	fsr1h,c
  3635  004E' CFDF FFE7          	movff	indf2,indf1
  3636                           
  3637                           ;TUsers.c: 50:                 users[numUsersAux].name[i] = '\0';
  3638  0052' 5000'              	movf	changeUser@numUsersAux^0,w,c
  3639  0054' 0D0B               	mullw	11
  3640  0056' C005' F008'        	movff	changeUser@users,??_changeUser
  3641  005A' C006' F009'        	movff	changeUser@users+1,??_changeUser+1
  3642  005E' 50F3               	movf	243,w,c
  3643  0060' 2600'              	addwf	??_changeUser^0,f,c
  3644  0062' 50F4               	movf	244,w,c
  3645  0064' 2200'              	addwfc	(??_changeUser+1)^0,f,c
  3646  0066' 5000'              	movf	changeUser@i^0,w,c
  3647  0068' 2400'              	addwf	??_changeUser^0,w,c
  3648  006A' 6ED9               	movwf	fsr2l,c
  3649  006C' 5000'              	movf	(changeUser@i+1)^0,w,c
  3650  006E' 2000'              	addwfc	(??_changeUser+1)^0,w,c
  3651  0070' 6EDA               	movwf	fsr2h,c
  3652  0072' 0E00               	movlw	0
  3653  0074' 6EDF               	movwf	indf2,c
  3654                           
  3655                           ;TUsers.c: 51:             }
  3656  0076' 4A00'              	infsnz	changeUser@i^0,f,c
  3657  0078' 2A00'              	incf	(changeUser@i+1)^0,f,c
  3658  007A' BE00'              	btfsc	(changeUser@i+1)^0,7,c
  3659  007C' D7C8               	goto	l5977
  3660  007E' 5000'              	movf	(changeUser@i+1)^0,w,c
  3661  0080' E104               	bnz	u6250
  3662  0082' 0E0A               	movlw	10
  3663  0084' 5C00'              	subwf	changeUser@i^0,w,c
  3664  0086' A0D8               	btfss	status,0,c
  3665  0088' D7C2               	goto	l5977
  3666  008A'                    u6250:
  3667                           
  3668                           ;TUsers.c: 52:             users1[user].score = users[numUsersAux].score;
  3669  008A' 5000'              	movf	changeUser@numUsersAux^0,w,c
  3670  008C' 0D0B               	mullw	11
  3671  008E' C005' F008'        	movff	changeUser@users,??_changeUser
  3672  0092' C006' F009'        	movff	changeUser@users+1,??_changeUser+1
  3673  0096' 50F3               	movf	243,w,c
  3674  0098' 2600'              	addwf	??_changeUser^0,f,c
  3675  009A' 50F4               	movf	244,w,c
  3676  009C' 2200'              	addwfc	(??_changeUser+1)^0,f,c
  3677  009E' 0E0A               	movlw	10
  3678  00A0' 2400'              	addwf	??_changeUser^0,w,c
  3679  00A2' 6ED9               	movwf	fsr2l,c
  3680  00A4' 0E00               	movlw	0
  3681  00A6' 2000'              	addwfc	(??_changeUser+1)^0,w,c
  3682  00A8' 6EDA               	movwf	fsr2h,c
  3683  00AA' 5000'              	movf	_user^0,w,c
  3684  00AC' 0D0B               	mullw	11
  3685  00AE' 0E00'              	movlw	low (_users1+10)
  3686  00B0' 24F3               	addwf	243,w,c
  3687  00B2' 6EE1               	movwf	fsr1l,c
  3688  00B4' 0E00'              	movlw	high (_users1+10)
  3689  00B6' D058               	goto	L1
  3690  00B8'                    l5987:
  3691                           
  3692                           ;TUsers.c: 54:             for (int i = 0; i < 10; i++){
  3693  00B8' 0E00               	movlw	0
  3694  00BA' 6E00'              	movwf	(changeUser@i_1363+1)^0,c
  3695  00BC' 0E00               	movlw	0
  3696  00BE' 6E00'              	movwf	changeUser@i_1363^0,c
  3697  00C0'                    l5993:
  3698                           
  3699                           ;TUsers.c: 55:                 users2[user].name[i] = users2[numUsersAux].name[i];
  3700  00C0' 5000'              	movf	changeUser@numUsersAux^0,w,c
  3701  00C2' 0D0B               	mullw	11
  3702  00C4' 0E00'              	movlw	low _users2
  3703  00C6' 6E00'              	movwf	??_changeUser^0,c
  3704  00C8' 0E00'              	movlw	high _users2
  3705  00CA' 6E00'              	movwf	(??_changeUser+1)^0,c
  3706  00CC' 50F3               	movf	243,w,c
  3707  00CE' 2600'              	addwf	??_changeUser^0,f,c
  3708  00D0' 50F4               	movf	244,w,c
  3709  00D2' 2200'              	addwfc	(??_changeUser+1)^0,f,c
  3710  00D4' 5000'              	movf	changeUser@i_1363^0,w,c
  3711  00D6' 2400'              	addwf	??_changeUser^0,w,c
  3712  00D8' 6ED9               	movwf	fsr2l,c
  3713  00DA' 5000'              	movf	(changeUser@i_1363+1)^0,w,c
  3714  00DC' 2000'              	addwfc	(??_changeUser+1)^0,w,c
  3715  00DE' 6EDA               	movwf	fsr2h,c
  3716  00E0' 5000'              	movf	_user^0,w,c
  3717  00E2' 0D0B               	mullw	11
  3718  00E4' 0E00'              	movlw	low _users2
  3719  00E6' 6E00'              	movwf	(??_changeUser+2)^0,c
  3720  00E8' 0E00'              	movlw	high _users2
  3721  00EA' 6E00'              	movwf	(??_changeUser+3)^0,c
  3722  00EC' 50F3               	movf	243,w,c
  3723  00EE' 2600'              	addwf	(??_changeUser+2)^0,f,c
  3724  00F0' 50F4               	movf	244,w,c
  3725  00F2' 2200'              	addwfc	(??_changeUser+3)^0,f,c
  3726  00F4' 5000'              	movf	changeUser@i_1363^0,w,c
  3727  00F6' 2400'              	addwf	(??_changeUser+2)^0,w,c
  3728  00F8' 6EE1               	movwf	fsr1l,c
  3729  00FA' 5000'              	movf	(changeUser@i_1363+1)^0,w,c
  3730  00FC' 2000'              	addwfc	(??_changeUser+3)^0,w,c
  3731  00FE' 6EE2               	movwf	fsr1h,c
  3732  0100' CFDF FFE7          	movff	indf2,indf1
  3733                           
  3734                           ;TUsers.c: 56:                 users2[numUsersAux].name[i] = '\0';
  3735  0104' 5000'              	movf	changeUser@numUsersAux^0,w,c
  3736  0106' 0D0B               	mullw	11
  3737  0108' 0E00'              	movlw	low _users2
  3738  010A' 6E00'              	movwf	??_changeUser^0,c
  3739  010C' 0E00'              	movlw	high _users2
  3740  010E' 6E00'              	movwf	(??_changeUser+1)^0,c
  3741  0110' 50F3               	movf	243,w,c
  3742  0112' 2600'              	addwf	??_changeUser^0,f,c
  3743  0114' 50F4               	movf	244,w,c
  3744  0116' 2200'              	addwfc	(??_changeUser+1)^0,f,c
  3745  0118' 5000'              	movf	changeUser@i_1363^0,w,c
  3746  011A' 2400'              	addwf	??_changeUser^0,w,c
  3747  011C' 6ED9               	movwf	fsr2l,c
  3748  011E' 5000'              	movf	(changeUser@i_1363+1)^0,w,c
  3749  0120' 2000'              	addwfc	(??_changeUser+1)^0,w,c
  3750  0122' 6EDA               	movwf	fsr2h,c
  3751  0124' 0E00               	movlw	0
  3752  0126' 6EDF               	movwf	indf2,c
  3753                           
  3754                           ;TUsers.c: 57:             }
  3755  0128' 4A00'              	infsnz	changeUser@i_1363^0,f,c
  3756  012A' 2A00'              	incf	(changeUser@i_1363+1)^0,f,c
  3757  012C' BE00'              	btfsc	(changeUser@i_1363+1)^0,7,c
  3758  012E' D7C8               	goto	l5993
  3759  0130' 5000'              	movf	(changeUser@i_1363+1)^0,w,c
  3760  0132' E104               	bnz	u6260
  3761  0134' 0E0A               	movlw	10
  3762  0136' 5C00'              	subwf	changeUser@i_1363^0,w,c
  3763  0138' A0D8               	btfss	status,0,c
  3764  013A' D7C2               	goto	l5993
  3765  013C'                    u6260:
  3766                           
  3767                           ;TUsers.c: 58:             users2[user].score = users[numUsersAux].score;
  3768  013C' 5000'              	movf	changeUser@numUsersAux^0,w,c
  3769  013E' 0D0B               	mullw	11
  3770  0140' C005' F008'        	movff	changeUser@users,??_changeUser
  3771  0144' C006' F009'        	movff	changeUser@users+1,??_changeUser+1
  3772  0148' 50F3               	movf	243,w,c
  3773  014A' 2600'              	addwf	??_changeUser^0,f,c
  3774  014C' 50F4               	movf	244,w,c
  3775  014E' 2200'              	addwfc	(??_changeUser+1)^0,f,c
  3776  0150' 0E0A               	movlw	10
  3777  0152' 2400'              	addwf	??_changeUser^0,w,c
  3778  0154' 6ED9               	movwf	fsr2l,c
  3779  0156' 0E00               	movlw	0
  3780  0158' 2000'              	addwfc	(??_changeUser+1)^0,w,c
  3781  015A' 6EDA               	movwf	fsr2h,c
  3782  015C' 5000'              	movf	_user^0,w,c
  3783  015E' 0D0B               	mullw	11
  3784  0160' 0E00'              	movlw	low (_users2+10)
  3785  0162' 24F3               	addwf	243,w,c
  3786  0164' 6EE1               	movwf	fsr1l,c
  3787  0166' 0E00'              	movlw	high (_users2+10)
  3788  0168'                    L1:
  3789  0168' 20F4               	addwfc	prodh,w,c
  3790  016A' 6EE2               	movwf	fsr1h,c
  3791  016C' CFDF FFE7          	movff	indf2,indf1
  3792                           
  3793                           ;TUsers.c: 60:         users[numUsersAux].score = 0;
  3794  0170' 5000'              	movf	changeUser@numUsersAux^0,w,c
  3795  0172' 0D0B               	mullw	11
  3796  0174' C005' F008'        	movff	changeUser@users,??_changeUser
  3797  0178' C006' F009'        	movff	changeUser@users+1,??_changeUser+1
  3798  017C' 50F3               	movf	243,w,c
  3799  017E' 2600'              	addwf	??_changeUser^0,f,c
  3800  0180' 50F4               	movf	244,w,c
  3801  0182' 2200'              	addwfc	(??_changeUser+1)^0,f,c
  3802  0184' 0E0A               	movlw	10
  3803  0186' 2400'              	addwf	??_changeUser^0,w,c
  3804  0188' 6ED9               	movwf	fsr2l,c
  3805  018A' 0E00               	movlw	0
  3806  018C' 2000'              	addwfc	(??_changeUser+1)^0,w,c
  3807  018E' 6EDA               	movwf	fsr2h,c
  3808  0190' 0E00               	movlw	0
  3809  0192' 6EDF               	movwf	indf2,c
  3810  0194' 0012               	return		;funcret
  3811  0196'                    __end_of_changeUser:
  3812                           	callstack 0
  3813                           
  3814 ;; *************** function _actionsSubMenus *****************
  3815 ;; Defined at:
  3816 ;;		line 33 in file "TCentral.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  key             1    wreg     unsigned char 
  3819 ;;  numChars        1   24[COMRAM] unsigned char 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  key             1   25[COMRAM] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1
  3831 ;;      Params:         1       0       0
  3832 ;;      Locals:         1       0       0
  3833 ;;      Temps:          0       0       0
  3834 ;;      Totals:         2       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 7
  3838 ;; This function calls:
  3839 ;;		_printLetter
  3840 ;;		_writeName
  3841 ;; This function is called by:
  3842 ;;		_manageKey
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text14
  3847  0000'                    __ptext14:
  3848                           	callstack 0
  3849  0000'                    _actionsSubMenus:
  3850                           	callstack 20
  3851                           
  3852                           ;incstack = 0
  3853                           ;actionsSubMenus@key stored from wreg
  3854  0000' 6E00'              	movwf	actionsSubMenus@key^0,c
  3855                           
  3856                           ;TCentral.c: 34:     static unsigned char posTime = 0;;TCentral.c: 36:     if (subMenu =
      +                          = 1){
  3857  0002' 0400'              	decf	_subMenu^0,w,c
  3858  0004' A4D8               	btfss	status,2,c
  3859  0006' D019               	goto	l4461
  3860                           
  3861                           ;TCentral.c: 37:         if (mGame == 2){
  3862  0008' 0E02               	movlw	2
  3863  000A' 1800'              	xorwf	_mGame^0,w,c
  3864  000C' A4D8               	btfss	status,2,c
  3865  000E' 0012               	return	
  3866                           
  3867                           ;TCentral.c: 38:             modeSMS = 1;
  3868  0010' 0E01               	movlw	1
  3869  0012' 6E00'              	movwf	_modeSMS^0,c
  3870                           
  3871                           ;TCentral.c: 39:             if (key != '*' && key != '#'){
  3872  0014' 0E2A               	movlw	42
  3873  0016' 1800'              	xorwf	actionsSubMenus@key^0,w,c
  3874  0018' B4D8               	btfsc	status,2,c
  3875  001A' 0012               	return	
  3876  001C' 0E23               	movlw	35
  3877  001E' 1800'              	xorwf	actionsSubMenus@key^0,w,c
  3878  0020' B4D8               	btfsc	status,2,c
  3879  0022' 0012               	return	
  3880                           
  3881                           ;TCentral.c: 40:                 printLetter(key, numChars);
  3882  0024' C018' F016'        	movff	actionsSubMenus@numChars,printLetter@numChars
  3883  0028' 5000'              	movf	actionsSubMenus@key^0,w,c
  3884  002A' EC00' F000'        	call	_printLetter
  3885                           
  3886                           ;TCentral.c: 41:                 writeName(key, numChars);
  3887  002E' C018' F005'        	movff	actionsSubMenus@numChars,writeName@numChars
  3888  0032' 5000'              	movf	actionsSubMenus@key^0,w,c
  3889  0034' EC00' F000'        	call	_writeName
  3890  0038' 0012               	return	
  3891  003A'                    l4461:
  3892  003A' 0E06               	movlw	6
  3893  003C' 1800'              	xorwf	_subMenu^0,w,c
  3894  003E' A4D8               	btfss	status,2,c
  3895  0040' 0012               	return	
  3896                           
  3897                           ;TCentral.c: 45:         if (key != '*'){
  3898  0042' 0E2A               	movlw	42
  3899  0044' 1800'              	xorwf	actionsSubMenus@key^0,w,c
  3900  0046' B4D8               	btfsc	status,2,c
  3901  0048' D01F               	goto	l4479
  3902                           
  3903                           ;TCentral.c: 46:             timeAM[posTime] = key;
  3904  004A' 5000'              	movf	actionsSubMenus@posTime^0,w,c
  3905  004C' 0F00'              	addlw	low _timeAM
  3906  004E' 6ED9               	movwf	fsr2l,c
  3907  0050' 6ADA               	clrf	fsr2h,c
  3908  0052' C019' FFDF         	movff	actionsSubMenus@key,indf2
  3909                           
  3910                           ;TCentral.c: 47:             printLetter(key, posTime + 8);
  3911  0056' 5000'              	movf	actionsSubMenus@posTime^0,w,c
  3912  0058' 0F08               	addlw	8
  3913  005A' 6E00'              	movwf	printLetter@numChars^0,c
  3914  005C' 5000'              	movf	actionsSubMenus@key^0,w,c
  3915  005E' EC00' F000'        	call	_printLetter
  3916                           
  3917                           ;TCentral.c: 48:             posTime++;
  3918  0062' 2A00'              	incf	actionsSubMenus@posTime^0,f,c
  3919                           
  3920                           ;TCentral.c: 49:             if (posTime == 2){
  3921  0064' 0E02               	movlw	2
  3922  0066' 1800'              	xorwf	actionsSubMenus@posTime^0,w,c
  3923  0068' A4D8               	btfss	status,2,c
  3924  006A' 0012               	return	
  3925                           
  3926                           ;TCentral.c: 50:                 timeAM[posTime] = ':';
  3927  006C' 5000'              	movf	actionsSubMenus@posTime^0,w,c
  3928  006E' 0F00'              	addlw	low _timeAM
  3929  0070' 6ED9               	movwf	fsr2l,c
  3930  0072' 6ADA               	clrf	fsr2h,c
  3931  0074' 0E3A               	movlw	58
  3932  0076' 6EDF               	movwf	indf2,c
  3933                           
  3934                           ;TCentral.c: 51:                 printLetter(':', posTime + 8);
  3935  0078' 5000'              	movf	actionsSubMenus@posTime^0,w,c
  3936  007A' 0F08               	addlw	8
  3937  007C' 6E00'              	movwf	printLetter@numChars^0,c
  3938  007E' 0E3A               	movlw	58
  3939  0080' EC00' F000'        	call	_printLetter
  3940                           
  3941                           ;TCentral.c: 52:                 posTime++;
  3942  0084' 2A00'              	incf	actionsSubMenus@posTime^0,f,c
  3943  0086' 0012               	return	
  3944  0088'                    l4479:
  3945                           
  3946                           ;TCentral.c: 55:             posTime = 0;
  3947  0088' 0E00               	movlw	0
  3948  008A' 6E00'              	movwf	actionsSubMenus@posTime^0,c
  3949  008C' 0012               	return		;funcret
  3950  008E'                    __end_of_actionsSubMenus:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function _writeName *****************
  3954 ;; Defined at:
  3955 ;;		line 38 in file "TUsers.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  key             1    wreg     unsigned char 
  3958 ;;  numChars        1    5[COMRAM] unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  key             1    8[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1
  3970 ;;      Params:         1       0       0
  3971 ;;      Locals:         1       0       0
  3972 ;;      Temps:          2       0       0
  3973 ;;      Totals:         4       0       0
  3974 ;;Total ram usage:        4 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 2
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_actionsSubMenus
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text15
  3985  0000'                    __ptext15:
  3986                           	callstack 0
  3987  0000'                    _writeName:
  3988                           	callstack 24
  3989                           
  3990                           ;incstack = 0
  3991                           ;writeName@key stored from wreg
  3992  0000' 6E00'              	movwf	writeName@key^0,c
  3993                           
  3994                           ;TUsers.c: 39:     if (array == 1){
  3995  0002' 0400'              	decf	_array^0,w,c
  3996  0004' A4D8               	btfss	status,2,c
  3997  0006' D013               	goto	l4345
  3998                           
  3999                           ;TUsers.c: 40:         users1[user].name[numChars] = key;
  4000  0008' 5000'              	movf	_user^0,w,c
  4001  000A' 0D0B               	mullw	11
  4002  000C' 0E00'              	movlw	low _users1
  4003  000E' 6E00'              	movwf	??_writeName^0,c
  4004  0010' 0E00'              	movlw	high _users1
  4005  0012' 6E00'              	movwf	(??_writeName+1)^0,c
  4006  0014' 50F3               	movf	243,w,c
  4007  0016' 2600'              	addwf	??_writeName^0,f,c
  4008  0018' 50F4               	movf	244,w,c
  4009  001A' 2200'              	addwfc	(??_writeName+1)^0,f,c
  4010  001C' 5000'              	movf	writeName@numChars^0,w,c
  4011  001E' 2400'              	addwf	??_writeName^0,w,c
  4012  0020' 6ED9               	movwf	fsr2l,c
  4013  0022' 0E00               	movlw	0
  4014  0024' 2000'              	addwfc	(??_writeName+1)^0,w,c
  4015  0026' 6EDA               	movwf	fsr2h,c
  4016  0028' C008' FFDF         	movff	writeName@key,indf2
  4017                           
  4018                           ;TUsers.c: 41:     } else {
  4019  002C' 0012               	return	
  4020  002E'                    l4345:
  4021                           
  4022                           ;TUsers.c: 42:         users2[user].name[numChars] = key;
  4023  002E' 5000'              	movf	_user^0,w,c
  4024  0030' 0D0B               	mullw	11
  4025  0032' 0E00'              	movlw	low _users2
  4026  0034' 6E00'              	movwf	??_writeName^0,c
  4027  0036' 0E00'              	movlw	high _users2
  4028  0038' 6E00'              	movwf	(??_writeName+1)^0,c
  4029  003A' 50F3               	movf	243,w,c
  4030  003C' 2600'              	addwf	??_writeName^0,f,c
  4031  003E' 50F4               	movf	244,w,c
  4032  0040' 2200'              	addwfc	(??_writeName+1)^0,f,c
  4033  0042' 5000'              	movf	writeName@numChars^0,w,c
  4034  0044' 2400'              	addwf	??_writeName^0,w,c
  4035  0046' 6ED9               	movwf	fsr2l,c
  4036  0048' 0E00               	movlw	0
  4037  004A' 2000'              	addwfc	(??_writeName+1)^0,w,c
  4038  004C' 6EDA               	movwf	fsr2h,c
  4039  004E' C008' FFDF         	movff	writeName@key,indf2
  4040  0052' 0012               	return		;funcret
  4041  0054'                    __end_of_writeName:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function _manageCursor *****************
  4045 ;; Defined at:
  4046 ;;		line 37 in file "TSms.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  key             1    wreg     unsigned char 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  key             1   12[COMRAM] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1
  4060 ;;      Params:         0       0       0
  4061 ;;      Locals:         1       0       0
  4062 ;;      Temps:          0       0       0
  4063 ;;      Totals:         1       0       0
  4064 ;;Total ram usage:        1 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 4
  4067 ;; This function calls:
  4068 ;;		_searchLetter
  4069 ;; This function is called by:
  4070 ;;		_manageKeySMS
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text16
  4075  0000'                    __ptext16:
  4076                           	callstack 0
  4077  0000'                    _manageCursor:
  4078                           	callstack 24
  4079                           
  4080                           ;incstack = 0
  4081                           ;manageCursor@key stored from wreg
  4082  0000' 6E00'              	movwf	manageCursor@key^0,c
  4083                           
  4084                           ;TSms.c: 38:     if (key == previousKey){
  4085  0002' 5000'              	movf	_previousKey^0,w,c
  4086  0004' 1800'              	xorwf	manageCursor@key^0,w,c
  4087  0006' A4D8               	btfss	status,2,c
  4088  0008' D003               	goto	l4879
  4089                           
  4090                           ;TSms.c: 39:         searchLetter();
  4091  000A' EC00' F000'        	call	_searchLetter	;wreg free
  4092                           
  4093                           ;TSms.c: 40:     } else {
  4094  000E' 0012               	return	
  4095  0010'                    l4879:
  4096                           
  4097                           ;TSms.c: 41:         keyColumn = 0;
  4098  0010' 0E00               	movlw	0
  4099  0012' 6E00'              	movwf	_keyColumn^0,c
  4100                           
  4101                           ;TSms.c: 42:         numChars++;
  4102  0014' 2A00'              	incf	_numChars^0,f,c
  4103  0016' 0012               	return		;funcret
  4104  0018'                    __end_of_manageCursor:
  4105                           	callstack 0
  4106                           
  4107 ;; *************** function _searchLetter *****************
  4108 ;; Defined at:
  4109 ;;		line 16 in file "TSms.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1
  4123 ;;      Params:         0       0       0
  4124 ;;      Locals:         0       0       0
  4125 ;;      Temps:          0       0       0
  4126 ;;      Totals:         0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 3
  4130 ;; This function calls:
  4131 ;;		_TiGetTics
  4132 ;; This function is called by:
  4133 ;;		_manageCursor
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text17
  4138  0000'                    __ptext17:
  4139                           	callstack 0
  4140  0000'                    _searchLetter:
  4141                           	callstack 24
  4142                           
  4143                           ;TSms.c: 18:         if (longer == 0){
  4144                           
  4145                           ;incstack = 0
  4146  0000' 0E00               	movlw	0
  4147  0002' EC00' F000'        	call	_TiGetTics
  4148  0006' 0EEF               	movlw	239
  4149  0008' 5C00'              	subwf	?_TiGetTics^0,w,c
  4150  000A' 0E02               	movlw	2
  4151  000C' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  4152  000E' B0D8               	btfsc	status,0,c
  4153  0010' D009               	goto	l4573
  4154                           
  4155                           ;TSms.c: 19:             if (keyColumn == 3){
  4156  0012' 0E03               	movlw	3
  4157  0014' 1800'              	xorwf	_keyColumn^0,w,c
  4158  0016' A4D8               	btfss	status,2,c
  4159  0018' D003               	goto	l4565
  4160                           
  4161                           ;TSms.c: 20:                 keyColumn = 0;
  4162  001A' 0E00               	movlw	0
  4163  001C' 6E00'              	movwf	_keyColumn^0,c
  4164                           
  4165                           ;TSms.c: 21:             } else {
  4166  001E' 0012               	return	
  4167  0020'                    l4565:
  4168                           
  4169                           ;TSms.c: 22:                 keyColumn++;
  4170  0020' 2A00'              	incf	_keyColumn^0,f,c
  4171  0022' 0012               	return	
  4172  0024'                    l4573:
  4173                           
  4174                           ;TSms.c: 32:         keyColumn = 0;
  4175  0024' 0E00               	movlw	0
  4176  0026' 6E00'              	movwf	_keyColumn^0,c
  4177                           
  4178                           ;TSms.c: 33:         numChars++;
  4179  0028' 2A00'              	incf	_numChars^0,f,c
  4180  002A' 0012               	return		;funcret
  4181  002C'                    __end_of_searchLetter:
  4182                           	callstack 0
  4183                           
  4184 ;; *************** function _TiCloseTimer *****************
  4185 ;; Defined at:
  4186 ;;		line 113 in file "TITTIMER.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  Handle          1    wreg     unsigned char 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  Handle          1    5[COMRAM] unsigned char 
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4195 ;; Tracked objects:
  4196 ;;		On entry : 0/0
  4197 ;;		On exit  : 0/0
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK1
  4200 ;;      Params:         0       0       0
  4201 ;;      Locals:         1       0       0
  4202 ;;      Temps:          0       0       0
  4203 ;;      Totals:         1       0       0
  4204 ;;Total ram usage:        1 bytes
  4205 ;; Hardware stack levels used: 1
  4206 ;; Hardware stack levels required when called: 2
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_manageKeySMS
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text18
  4215  0000'                    __ptext18:
  4216                           	callstack 0
  4217  0000'                    _TiCloseTimer:
  4218                           	callstack 26
  4219                           
  4220                           ;incstack = 0
  4221                           ;TiCloseTimer@Handle stored from wreg
  4222  0000' 6E00'              	movwf	TiCloseTimer@Handle^0,c
  4223                           
  4224                           ;TITTIMER.c: 114:  s_Timers[Handle].b_busy=0;
  4225  0002' 5000'              	movf	TiCloseTimer@Handle^0,w,c
  4226  0004' 0D03               	mullw	3
  4227  0006' 50F3               	movf	243,w,c
  4228  0008' 0F00'              	addlw	low (_s_Timers+2)
  4229  000A' 6ED9               	movwf	fsr2l,c
  4230  000C' 6ADA               	clrf	fsr2h,c
  4231  000E' 0E00               	movlw	0
  4232  0010' 6EDF               	movwf	indf2,c
  4233  0012' 0012               	return		;funcret
  4234  0014'                    __end_of_TiCloseTimer:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _checkKey *****************
  4238 ;; Defined at:
  4239 ;;		line 64 in file "TTeclat.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;  D0              2    6[COMRAM] unsigned int 
  4242 ;;  D1              2    8[COMRAM] unsigned int 
  4243 ;;  D2              2   10[COMRAM] unsigned int 
  4244 ;;  stateAux        1   12[COMRAM] unsigned char 
  4245 ;;  column          1   13[COMRAM] unsigned char 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1
  4257 ;;      Params:         8       0       0
  4258 ;;      Locals:         0       0       0
  4259 ;;      Temps:          0       0       0
  4260 ;;      Totals:         8       0       0
  4261 ;;Total ram usage:        8 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 4
  4264 ;; This function calls:
  4265 ;;		_comprovafila
  4266 ;; This function is called by:
  4267 ;;		_motorTeclat
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text19
  4272  0000'                    __ptext19:
  4273                           	callstack 0
  4274  0000'                    _checkKey:
  4275                           	callstack 25
  4276                           
  4277                           ;TTeclat.c: 65:     if (!HHT){
  4278                           
  4279                           ;incstack = 0
  4280  0000' 5000'              	movf	_HHT^0,w,c
  4281  0002' A4D8               	btfss	status,2,c
  4282  0004' D01E               	goto	l5001
  4283                           
  4284                           ;TTeclat.c: 66:        if ((PORTD & 0x78) == 0x78) {
  4285  0006' 5083               	movf	131,w,c	;volatile
  4286  0008' 0B78               	andlw	120
  4287  000A' 0A78               	xorlw	120
  4288  000C' A4D8               	btfss	status,2,c
  4289  000E' D014               	goto	l4997
  4290                           
  4291                           ;TTeclat.c: 67:             LATDbits.LATD0 = D0;
  4292  0010' B000'              	btfsc	checkKey@D0^0,0,c
  4293  0012' D002               	bra	u5095
  4294  0014' 908C               	bcf	140,0,c	;volatile
  4295  0016' D001               	bra	u5096
  4296  0018'                    u5095:
  4297  0018' 808C               	bsf	140,0,c	;volatile
  4298  001A'                    u5096:
  4299                           
  4300                           ;TTeclat.c: 68:             LATDbits.LATD1 = D1;
  4301  001A' B000'              	btfsc	checkKey@D1^0,0,c
  4302  001C' D002               	bra	u5105
  4303  001E' 928C               	bcf	140,1,c	;volatile
  4304  0020' D001               	bra	u5106
  4305  0022'                    u5105:
  4306  0022' 828C               	bsf	140,1,c	;volatile
  4307  0024'                    u5106:
  4308                           
  4309                           ;TTeclat.c: 69:             LATDbits.LATD2 = D2;
  4310  0024' B000'              	btfsc	checkKey@D2^0,0,c
  4311  0026' D002               	bra	u5115
  4312  0028' 948C               	bcf	140,2,c	;volatile
  4313  002A' D001               	bra	u5116
  4314  002C'                    u5115:
  4315  002C' 848C               	bsf	140,2,c	;volatile
  4316  002E'                    u5116:
  4317                           
  4318                           ;TTeclat.c: 70:             state = stateAux;
  4319  002E' C00C' F038'        	movff	checkKey@stateAux,_state
  4320                           
  4321                           ;TTeclat.c: 71:             c = column;
  4322  0032' C00D' F034'        	movff	checkKey@column,_c
  4323                           
  4324                           ;TTeclat.c: 72:         } else {
  4325  0036' 0012               	return	
  4326  0038'                    l4997:
  4327                           
  4328                           ;TTeclat.c: 73:             comprovafila();
  4329  0038' EC00' F000'        	call	_comprovafila	;wreg free
  4330                           
  4331                           ;TTeclat.c: 74:             state = 3;
  4332  003C' 0E03               	movlw	3
  4333  003E' 6E00'              	movwf	_state^0,c
  4334  0040' 0012               	return	
  4335  0042'                    l5001:
  4336                           
  4337                           ;TTeclat.c: 77:         state = 4;
  4338  0042' 0E04               	movlw	4
  4339  0044' 6E00'              	movwf	_state^0,c
  4340  0046' 0012               	return		;funcret
  4341  0048'                    __end_of_checkKey:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _comprovafila *****************
  4345 ;; Defined at:
  4346 ;;		line 22 in file "TTeclat.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1
  4360 ;;      Params:         0       0       0
  4361 ;;      Locals:         0       0       0
  4362 ;;      Temps:          0       0       0
  4363 ;;      Totals:         0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 3
  4367 ;; This function calls:
  4368 ;;		_TiResetTics
  4369 ;; This function is called by:
  4370 ;;		_checkKey
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text20
  4375  0000'                    __ptext20:
  4376                           	callstack 0
  4377  0000'                    _comprovafila:
  4378                           	callstack 25
  4379                           
  4380                           ;TTeclat.c: 23:  TiResetTics(timer);
  4381                           
  4382                           ;incstack = 0
  4383  0000' 5000'              	movf	_timer^0,w,c
  4384  0002' EC00' F000'        	call	_TiResetTics
  4385                           
  4386                           ;TTeclat.c: 24:     HHT = 1;
  4387  0006' 0E01               	movlw	1
  4388  0008' 6E00'              	movwf	_HHT^0,c
  4389                           
  4390                           ;TTeclat.c: 25:  if (PORTDbits.RD6 == 0) {
  4391  000A' BC83               	btfsc	131,6,c	;volatile
  4392  000C' D003               	goto	l499
  4393                           
  4394                           ;TTeclat.c: 26:   f = 4;
  4395  000E' 0E04               	movlw	4
  4396  0010' 6E00'              	movwf	_f^0,c
  4397                           
  4398                           ;TTeclat.c: 27:  } else if (PORTDbits.RD5 == 0) {
  4399  0012' 0012               	return	
  4400  0014'                    l499:
  4401  0014' BA83               	btfsc	131,5,c	;volatile
  4402  0016' D003               	goto	l501
  4403                           
  4404                           ;TTeclat.c: 28:   f = 3;
  4405  0018' 0E03               	movlw	3
  4406  001A' 6E00'              	movwf	_f^0,c
  4407                           
  4408                           ;TTeclat.c: 29:  } else if (PORTDbits.RD4 == 0) {
  4409  001C' 0012               	return	
  4410  001E'                    l501:
  4411  001E' B883               	btfsc	131,4,c	;volatile
  4412  0020' D003               	goto	l4871
  4413                           
  4414                           ;TTeclat.c: 30:   f = 2;
  4415  0022' 0E02               	movlw	2
  4416  0024' 6E00'              	movwf	_f^0,c
  4417                           
  4418                           ;TTeclat.c: 31:  } else {
  4419  0026' 0012               	return	
  4420  0028'                    l4871:
  4421                           
  4422                           ;TTeclat.c: 32:   f = 1;
  4423  0028' 0E01               	movlw	1
  4424  002A' 6E00'              	movwf	_f^0,c
  4425  002C' 0012               	return		;funcret
  4426  002E'                    __end_of_comprovafila:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _motorTX *****************
  4430 ;; Defined at:
  4431 ;;		line 98 in file "TSIO.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1
  4445 ;;      Params:         0       0       0
  4446 ;;      Locals:         0       0       0
  4447 ;;      Temps:          2       0       0
  4448 ;;      Totals:         2       0       0
  4449 ;;Total ram usage:        2 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 3
  4452 ;; This function calls:
  4453 ;;		_selectMessage
  4454 ;;		_sendMessage
  4455 ;; This function is called by:
  4456 ;;		_main
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text21
  4461  0000'                    __ptext21:
  4462                           	callstack 0
  4463  0000'                    _motorTX:
  4464                           	callstack 27
  4465                           
  4466                           ;TSIO.c: 99:     static char state = 0;;TSIO.c: 101:     switch (state){
  4467                           
  4468                           ;incstack = 0
  4469  0000' D069               	goto	l5589
  4470  0002'                    l1270:
  4471                           
  4472                           ;TSIO.c: 103:             if (TX == 1 && enviaDada == 1){
  4473  0002' AC82               	btfss	3970,6,c	;volatile
  4474  0004' 0012               	return	
  4475  0006' 0400'              	decf	_enviaDada^0,w,c
  4476  0008' A4D8               	btfss	status,2,c
  4477  000A' 0012               	return	
  4478                           
  4479                           ;TSIO.c: 104:                 enviaDada = TX = 0;
  4480  000C' 9C82               	bcf	3970,6,c	;volatile
  4481  000E' 0E00               	movlw	0
  4482  0010' BC82               	btfsc	3970,6,c	;volatile
  4483  0012' 0E01               	movlw	1
  4484  0014' 6E00'              	movwf	_enviaDada^0,c
  4485                           
  4486                           ;TSIO.c: 105:                 state = 1;
  4487  0016' 0E01               	movlw	1
  4488  0018' 6E00'              	movwf	motorTX@state^0,c
  4489  001A' 0012               	return	
  4490  001C'                    l1273:
  4491                           
  4492                           ;TSIO.c: 109:             if (TXSTAbits.TRMT == 1){
  4493  001C' A2AC               	btfss	172,1,c	;volatile
  4494  001E' 0012               	return	
  4495  0020' D03C               	goto	l5583
  4496  0022'                    l5557:
  4497                           
  4498                           ;TSIO.c: 112:                         if (posName < 10){
  4499  0022' 0E0A               	movlw	10
  4500  0024' 6000'              	cpfslt	_posName^0,c
  4501  0026' D020               	goto	l5569
  4502                           
  4503                           ;TSIO.c: 113:                             if (array == 1){
  4504  0028' 0400'              	decf	_array^0,w,c
  4505  002A' A4D8               	btfss	status,2,c
  4506  002C' D006               	goto	l5563
  4507                           
  4508                           ;TSIO.c: 114:                                 TXREG = users1[user].name[posName];
  4509  002E' 5000'              	movf	_user^0,w,c
  4510  0030' 0D0B               	mullw	11
  4511  0032' 0E00'              	movlw	low _users1
  4512  0034' 6E00'              	movwf	??_motorTX^0,c
  4513  0036' 0E00'              	movlw	high _users1
  4514  0038' D005               	goto	L2
  4515  003A'                    l5563:
  4516                           
  4517                           ;TSIO.c: 116:                                 TXREG = users2[user].name[posName];
  4518  003A' 5000'              	movf	_user^0,w,c
  4519  003C' 0D0B               	mullw	11
  4520  003E' 0E00'              	movlw	low _users2
  4521  0040' 6E00'              	movwf	??_motorTX^0,c
  4522  0042' 0E00'              	movlw	high _users2
  4523  0044'                    L2:
  4524  0044' 6E00'              	movwf	(??_motorTX+1)^0,c
  4525  0046' 50F3               	movf	243,w,c
  4526  0048' 2600'              	addwf	??_motorTX^0,f,c
  4527  004A' 50F4               	movf	244,w,c
  4528  004C' 2200'              	addwfc	(??_motorTX+1)^0,f,c
  4529  004E' 5000'              	movf	_posName^0,w,c
  4530  0050' 2400'              	addwf	??_motorTX^0,w,c
  4531  0052' 6ED9               	movwf	fsr2l,c
  4532  0054' 0E00               	movlw	0
  4533  0056' 2000'              	addwfc	(??_motorTX+1)^0,w,c
  4534  0058' 6EDA               	movwf	fsr2h,c
  4535  005A' 50DF               	movf	indf2,w,c
  4536  005C' 6EAD               	movwf	173,c	;volatile
  4537                           
  4538                           ;TSIO.c: 118:                             posName++;
  4539  005E' 2A00'              	incf	_posName^0,f,c
  4540                           
  4541                           ;TSIO.c: 119:                             selectMessage(1);
  4542  0060' 0E01               	movlw	1
  4543  0062' EC00' F000'        	call	_selectMessage
  4544                           
  4545                           ;TSIO.c: 120:                         } else {
  4546  0066' D033               	goto	l5585
  4547  0068'                    l5569:
  4548                           
  4549                           ;TSIO.c: 121:                             posName = 0;
  4550  0068' 0E00               	movlw	0
  4551  006A' 6E00'              	movwf	_posName^0,c
  4552                           
  4553                           ;TSIO.c: 122:                             message = 0;
  4554  006C' 0E00               	movlw	0
  4555  006E' 6E00'              	movwf	_message^0,c
  4556  0070' D02E               	goto	l5585
  4557  0072'                    l5571:
  4558                           
  4559                           ;TSIO.c: 126:                         sendMessage(AM);
  4560  0072' 5000'              	movf	_AM^0,w,c
  4561  0074' EC00' F000'        	call	_sendMessage
  4562                           
  4563                           ;TSIO.c: 127:                         break;
  4564  0078' D02A               	goto	l5585
  4565  007A'                    l5573:
  4566  007A' 0E55               	movlw	85
  4567  007C' EC00' F000'        	call	_sendMessage
  4568                           
  4569                           ;TSIO.c: 130:                         break;
  4570  0080' D026               	goto	l5585
  4571  0082'                    l5575:
  4572  0082' 0E44               	movlw	68
  4573  0084' EC00' F000'        	call	_sendMessage
  4574                           
  4575                           ;TSIO.c: 133:                         break;
  4576  0088' D022               	goto	l5585
  4577  008A'                    l5577:
  4578  008A' 0E4C               	movlw	76
  4579  008C' EC00' F000'        	call	_sendMessage
  4580                           
  4581                           ;TSIO.c: 136:                         break;
  4582  0090' D01E               	goto	l5585
  4583  0092'                    l5579:
  4584  0092' 0E52               	movlw	82
  4585  0094' EC00' F000'        	call	_sendMessage
  4586                           
  4587                           ;TSIO.c: 139:                         break;
  4588  0098' D01A               	goto	l5585
  4589  009A'                    l5583:
  4590  009A' 5000'              	movf	_message^0,w,c
  4591  009C' 6E00'              	movwf	??_motorTX^0,c
  4592  009E' 6A00'              	clrf	(??_motorTX+1)^0,c
  4593                           
  4594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4595                           ; Switch size 1, requested type "simple"
  4596                           ; Number of cases is 1, Range of values is 0 to 0
  4597                           ; switch strategies available:
  4598                           ; Name         Instructions Cycles
  4599                           ; simple_byte            4     3 (average)
  4600                           ;	Chosen strategy is simple_byte
  4601  00A0' 5000'              	movf	(??_motorTX+1)^0,w,c
  4602  00A2' 0A00               	xorlw	0	; case 0
  4603  00A4' A4D8               	btfss	status,2,c
  4604  00A6' D013               	goto	l5585
  4605                           
  4606                           ; Switch size 1, requested type "simple"
  4607                           ; Number of cases is 6, Range of values is 1 to 6
  4608                           ; switch strategies available:
  4609                           ; Name         Instructions Cycles
  4610                           ; simple_byte           19    10 (average)
  4611                           ;	Chosen strategy is simple_byte
  4612  00A8' 5000'              	movf	??_motorTX^0,w,c
  4613  00AA' 0A01               	xorlw	1	; case 1
  4614  00AC' B4D8               	btfsc	status,2,c
  4615  00AE' D7B9               	goto	l5557
  4616  00B0' 0A03               	xorlw	3	; case 2
  4617  00B2' B4D8               	btfsc	status,2,c
  4618  00B4' D7DE               	goto	l5571
  4619  00B6' 0A01               	xorlw	1	; case 3
  4620  00B8' B4D8               	btfsc	status,2,c
  4621  00BA' D7DF               	goto	l5573
  4622  00BC' 0A07               	xorlw	7	; case 4
  4623  00BE' B4D8               	btfsc	status,2,c
  4624  00C0' D7E0               	goto	l5575
  4625  00C2' 0A01               	xorlw	1	; case 5
  4626  00C4' B4D8               	btfsc	status,2,c
  4627  00C6' D7E1               	goto	l5577
  4628  00C8' 0A03               	xorlw	3	; case 6
  4629  00CA' B4D8               	btfsc	status,2,c
  4630  00CC' D7E2               	goto	l5579
  4631  00CE'                    l5585:
  4632                           
  4633                           ;TSIO.c: 143:                 state = 0;
  4634  00CE' 0E00               	movlw	0
  4635  00D0' 6E00'              	movwf	motorTX@state^0,c
  4636  00D2' 0012               	return	
  4637  00D4'                    l5589:
  4638  00D4' 5000'              	movf	motorTX@state^0,w,c
  4639  00D6' 6E00'              	movwf	??_motorTX^0,c
  4640  00D8' 6A00'              	clrf	(??_motorTX+1)^0,c
  4641                           
  4642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4643                           ; Switch size 1, requested type "simple"
  4644                           ; Number of cases is 1, Range of values is 0 to 0
  4645                           ; switch strategies available:
  4646                           ; Name         Instructions Cycles
  4647                           ; simple_byte            4     3 (average)
  4648                           ;	Chosen strategy is simple_byte
  4649  00DA' 5000'              	movf	(??_motorTX+1)^0,w,c
  4650  00DC' 0A00               	xorlw	0	; case 0
  4651  00DE' A4D8               	btfss	status,2,c
  4652  00E0' 0012               	return	
  4653                           
  4654                           ; Switch size 1, requested type "simple"
  4655                           ; Number of cases is 2, Range of values is 0 to 1
  4656                           ; switch strategies available:
  4657                           ; Name         Instructions Cycles
  4658                           ; simple_byte            7     4 (average)
  4659                           ;	Chosen strategy is simple_byte
  4660  00E2' 5000'              	movf	??_motorTX^0,w,c
  4661  00E4' 0A00               	xorlw	0	; case 0
  4662  00E6' B4D8               	btfsc	status,2,c
  4663  00E8' D78C               	goto	l1270
  4664  00EA' 0A01               	xorlw	1	; case 1
  4665  00EC' A4D8               	btfss	status,2,c
  4666  00EE' 0012               	return	
  4667  00F0' D795               	goto	l1273
  4668  00F2'                    __end_of_motorTX:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _sendMessage *****************
  4672 ;; Defined at:
  4673 ;;		line 25 in file "TSIO.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  info            1    wreg     unsigned char 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;  info            1    5[COMRAM] unsigned char 
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1
  4687 ;;      Params:         0       0       0
  4688 ;;      Locals:         1       0       0
  4689 ;;      Temps:          0       0       0
  4690 ;;      Totals:         1       0       0
  4691 ;;Total ram usage:        1 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 2
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_motorTX
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text22
  4702  0000'                    __ptext22:
  4703                           	callstack 0
  4704  0000'                    _sendMessage:
  4705                           	callstack 27
  4706                           
  4707                           ;incstack = 0
  4708                           ;sendMessage@info stored from wreg
  4709  0000' 6E00'              	movwf	sendMessage@info^0,c
  4710                           
  4711                           ;TSIO.c: 26:     TXREG = info;
  4712  0002' C005' FFAD         	movff	sendMessage@info,4013	;volatile
  4713                           
  4714                           ;TSIO.c: 27:     message = 0;
  4715  0006' 0E00               	movlw	0
  4716  0008' 6E00'              	movwf	_message^0,c
  4717  000A' 0012               	return		;funcret
  4718  000C'                    __end_of_sendMessage:
  4719                           	callstack 0
  4720                           
  4721 ;; *************** function _motorRX *****************
  4722 ;; Defined at:
  4723 ;;		line 69 in file "TSIO.c"
  4724 ;; Parameters:    Size  Location     Type
  4725 ;;		None
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;		None
  4728 ;; Return value:  Size  Location     Type
  4729 ;;                  1    wreg      void 
  4730 ;; Registers used:
  4731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4732 ;; Tracked objects:
  4733 ;;		On entry : 0/0
  4734 ;;		On exit  : 0/0
  4735 ;;		Unchanged: 0/0
  4736 ;; Data sizes:     COMRAM   BANK0   BANK1
  4737 ;;      Params:         0       0       0
  4738 ;;      Locals:         0       0       0
  4739 ;;      Temps:          1       0       0
  4740 ;;      Totals:         1       0       0
  4741 ;;Total ram usage:        1 bytes
  4742 ;; Hardware stack levels used: 1
  4743 ;; Hardware stack levels required when called: 4
  4744 ;; This function calls:
  4745 ;;		_convertScore
  4746 ;;		_updatePoints
  4747 ;; This function is called by:
  4748 ;;		_main
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text23
  4753  0000'                    __ptext23:
  4754                           	callstack 0
  4755  0000'                    _motorRX:
  4756                           	callstack 26
  4757                           
  4758                           ;TSIO.c: 70:     static char info;;TSIO.c: 72:     if (PIR1bits.RCIF == 1){
  4759                           
  4760                           ;incstack = 0
  4761  0000' AA9E               	btfss	158,5,c	;volatile
  4762  0002' 0012               	return	
  4763                           
  4764                           ;TSIO.c: 73:         info = RCREG;
  4765  0004' CFAE F01A'         	movff	4014,motorRX@info	;volatile
  4766                           
  4767                           ;TSIO.c: 74:         if (info == 'A'){
  4768  0008' 0E41               	movlw	65
  4769  000A' 1800'              	xorwf	motorRX@info^0,w,c
  4770  000C' A4D8               	btfss	status,2,c
  4771  000E' D005               	goto	l5635
  4772                           
  4773                           ;TSIO.c: 75:             score += 5;
  4774  0010' 0E05               	movlw	5
  4775  0012' 2600'              	addwf	_score^0,f,c
  4776                           
  4777                           ;TSIO.c: 76:             updatePoints();
  4778  0014' EC00' F000'        	call	_updatePoints	;wreg free
  4779                           
  4780                           ;TSIO.c: 77:         } else if (info == 'B'){
  4781  0018' 0012               	return	
  4782  001A'                    l5635:
  4783  001A' 0E42               	movlw	66
  4784  001C' 1800'              	xorwf	motorRX@info^0,w,c
  4785  001E' A4D8               	btfss	status,2,c
  4786  0020' 0012               	return	
  4787                           
  4788                           ;TSIO.c: 78:             playing = 2;
  4789  0022' 0E02               	movlw	2
  4790  0024' 6E00'              	movwf	_playing^0,c
  4791                           
  4792                           ;TSIO.c: 79:             if (array == 1){
  4793  0026' 0400'              	decf	_array^0,w,c
  4794  0028' A4D8               	btfss	status,2,c
  4795  002A' D01A               	goto	l5647
  4796                           
  4797                           ;TSIO.c: 80:                 if (users1[user].score < score){
  4798  002C' 5000'              	movf	_user^0,w,c
  4799  002E' 0D0B               	mullw	11
  4800  0030' 0E00'              	movlw	low (_users1+10)
  4801  0032' 24F3               	addwf	243,w,c
  4802  0034' 6ED9               	movwf	fsr2l,c
  4803  0036' 0E00'              	movlw	high (_users1+10)
  4804  0038' 20F4               	addwfc	prodh,w,c
  4805  003A' 6EDA               	movwf	fsr2h,c
  4806  003C' 5000'              	movf	_score^0,w,c
  4807  003E' 5CDE               	subwf	postinc2,w,c
  4808  0040' B0D8               	btfsc	status,0,c
  4809  0042' D007               	goto	l5645
  4810                           
  4811                           ;TSIO.c: 81:                     users1[user].score = score;
  4812  0044' 5000'              	movf	_user^0,w,c
  4813  0046' 0D0B               	mullw	11
  4814  0048' 0E00'              	movlw	low (_users1+10)
  4815  004A' 24F3               	addwf	243,w,c
  4816  004C' 6ED9               	movwf	fsr2l,c
  4817  004E' 0E00'              	movlw	high (_users1+10)
  4818  0050' D019               	goto	L3
  4819  0052'                    l5645:
  4820                           
  4821                           ;TSIO.c: 83:                     score = users1[user].score;
  4822  0052' 5000'              	movf	_user^0,w,c
  4823  0054' 0D0B               	mullw	11
  4824  0056' 0E00'              	movlw	low (_users1+10)
  4825  0058' 24F3               	addwf	243,w,c
  4826  005A' 6ED9               	movwf	fsr2l,c
  4827  005C' 0E00'              	movlw	high (_users1+10)
  4828  005E' D01D               	goto	L4
  4829  0060'                    l5647:
  4830                           
  4831                           ;TSIO.c: 86:                 if (users2[user].score < score){
  4832  0060' 5000'              	movf	_user^0,w,c
  4833  0062' 0D0B               	mullw	11
  4834  0064' 0E00'              	movlw	low (_users2+10)
  4835  0066' 24F3               	addwf	243,w,c
  4836  0068' 6ED9               	movwf	fsr2l,c
  4837  006A' 0E00'              	movlw	high (_users2+10)
  4838  006C' 20F4               	addwfc	prodh,w,c
  4839  006E' 6EDA               	movwf	fsr2h,c
  4840  0070' 5000'              	movf	_score^0,w,c
  4841  0072' 5CDE               	subwf	postinc2,w,c
  4842  0074' B0D8               	btfsc	status,0,c
  4843  0076' D00B               	goto	l5651
  4844                           
  4845                           ;TSIO.c: 87:                     users2[user].score = score;
  4846  0078' 5000'              	movf	_user^0,w,c
  4847  007A' 0D0B               	mullw	11
  4848  007C' 0E00'              	movlw	low (_users2+10)
  4849  007E' 24F3               	addwf	243,w,c
  4850  0080' 6ED9               	movwf	fsr2l,c
  4851  0082' 0E00'              	movlw	high (_users2+10)
  4852  0084'                    L3:
  4853  0084' 20F4               	addwfc	prodh,w,c
  4854  0086' 6EDA               	movwf	fsr2h,c
  4855  0088' C01B' FFDF         	movff	_score,indf2
  4856                           
  4857                           ;TSIO.c: 88:                 } else {
  4858  008C' D00A               	goto	l5653
  4859  008E'                    l5651:
  4860                           
  4861                           ;TSIO.c: 89:                     score = users2[user].score;
  4862  008E' 5000'              	movf	_user^0,w,c
  4863  0090' 0D0B               	mullw	11
  4864  0092' 0E00'              	movlw	low (_users2+10)
  4865  0094' 24F3               	addwf	243,w,c
  4866  0096' 6ED9               	movwf	fsr2l,c
  4867  0098' 0E00'              	movlw	high (_users2+10)
  4868  009A'                    L4:
  4869  009A' 20F4               	addwfc	prodh,w,c
  4870  009C' 6EDA               	movwf	fsr2h,c
  4871  009E' 50DF               	movf	indf2,w,c
  4872  00A0' 6E00'              	movwf	_score^0,c
  4873  00A2'                    l5653:
  4874                           
  4875                           ;TSIO.c: 92:             convertScore(score);
  4876  00A2' 5000'              	movf	_score^0,w,c
  4877  00A4' EC00' F000'        	call	_convertScore
  4878                           
  4879                           ;TSIO.c: 93:             score = 0;
  4880  00A8' 0E00               	movlw	0
  4881  00AA' 6E00'              	movwf	_score^0,c
  4882  00AC' 0012               	return		;funcret
  4883  00AE'                    __end_of_motorRX:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _updatePoints *****************
  4887 ;; Defined at:
  4888 ;;		line 30 in file "TSIO.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1
  4902 ;;      Params:         0       0       0
  4903 ;;      Locals:         0       0       0
  4904 ;;      Temps:          0       0       0
  4905 ;;      Totals:         0       0       0
  4906 ;;Total ram usage:        0 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 2
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_motorRX
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text24
  4917  0000'                    __ptext24:
  4918                           	callstack 0
  4919  0000'                    _updatePoints:
  4920                           	callstack 27
  4921                           
  4922                           ;TSIO.c: 31:     if (points[2] == '0'){
  4923                           
  4924                           ;incstack = 0
  4925  0000' 0E30               	movlw	48
  4926  0002' 1800'              	xorwf	(_points+2)^0,w,c
  4927  0004' A4D8               	btfss	status,2,c
  4928  0006' D003               	goto	l5161
  4929                           
  4930                           ;TSIO.c: 32:         points[2] = '5';
  4931  0008' 0E35               	movlw	53
  4932  000A' 6E00'              	movwf	(_points+2)^0,c
  4933                           
  4934                           ;TSIO.c: 33:     } else {
  4935  000C' 0012               	return	
  4936  000E'                    l5161:
  4937                           
  4938                           ;TSIO.c: 34:         points[2] = '0';
  4939  000E' 0E30               	movlw	48
  4940  0010' 6E00'              	movwf	(_points+2)^0,c
  4941                           
  4942                           ;TSIO.c: 35:         if (points[1] < '9'){
  4943  0012' 0E39               	movlw	57
  4944  0014' 6000'              	cpfslt	(_points+1)^0,c
  4945  0016' D002               	goto	l5167
  4946                           
  4947                           ;TSIO.c: 36:             points[1]++;
  4948  0018' 2A00'              	incf	(_points+1)^0,f,c
  4949                           
  4950                           ;TSIO.c: 37:         } else {
  4951  001A' 0012               	return	
  4952  001C'                    l5167:
  4953                           
  4954                           ;TSIO.c: 38:             points[1] = '0';
  4955  001C' 0E30               	movlw	48
  4956  001E' 6E00'              	movwf	(_points+1)^0,c
  4957                           
  4958                           ;TSIO.c: 39:             if(points[0] < '2'){
  4959  0020' 0E32               	movlw	50
  4960  0022' 6000'              	cpfslt	_points^0,c
  4961  0024' D002               	goto	l5173
  4962                           
  4963                           ;TSIO.c: 40:                 points[0]++;
  4964  0026' 2A00'              	incf	_points^0,f,c
  4965                           
  4966                           ;TSIO.c: 41:             } else {
  4967  0028' 0012               	return	
  4968  002A'                    l5173:
  4969                           
  4970                           ;TSIO.c: 42:                 points[0] = '0';
  4971  002A' 0E30               	movlw	48
  4972  002C' 6E00'              	movwf	_points^0,c
  4973  002E' 0012               	return		;funcret
  4974  0030'                    __end_of_updatePoints:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function _motorPWM *****************
  4978 ;; Defined at:
  4979 ;;		line 24 in file "TAltaveu.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1
  4993 ;;      Params:         0       0       0
  4994 ;;      Locals:         0       0       0
  4995 ;;      Temps:          2       0       0
  4996 ;;      Totals:         2       0       0
  4997 ;;Total ram usage:        2 bytes
  4998 ;; Hardware stack levels used: 1
  4999 ;; Hardware stack levels required when called: 3
  5000 ;; This function calls:
  5001 ;;		_TiGetTics
  5002 ;;		_TiResetTics
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text25
  5009  0000'                    __ptext25:
  5010                           	callstack 0
  5011  0000'                    _motorPWM:
  5012                           	callstack 27
  5013                           
  5014                           ;TAltaveu.c: 25:   static char estat = 0;;TAltaveu.c: 26:   if (playing == 1){
  5015                           
  5016                           ;incstack = 0
  5017  0000' 0400'              	decf	_playing^0,w,c
  5018  0002' A4D8               	btfss	status,2,c
  5019  0004' 0012               	return	
  5020  0006' D028               	goto	l5741
  5021  0008'                    l5723:
  5022                           
  5023                           ;TAltaveu.c: 29:         if (TiGetTics(timerPWM) >= (nota >> 1)){
  5024  0008' 90D8               	bcf	status,0,c
  5025  000A' 3000'              	rrcf	_nota^0,w,c
  5026  000C' 6E00'              	movwf	??_motorPWM^0,c
  5027  000E' 6A00'              	clrf	(??_motorPWM+1)^0,c
  5028  0010' 5000'              	movf	_timerPWM^0,w,c
  5029  0012' EC00' F000'        	call	_TiGetTics
  5030  0016' 5000'              	movf	??_motorPWM^0,w,c
  5031  0018' 5C00'              	subwf	?_TiGetTics^0,w,c
  5032  001A' 5000'              	movf	(??_motorPWM+1)^0,w,c
  5033  001C' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  5034  001E' A0D8               	btfss	status,0,c
  5035  0020' 0012               	return	
  5036                           
  5037                           ;TAltaveu.c: 30:           TiResetTics(timerPWM);
  5038  0022' 5000'              	movf	_timerPWM^0,w,c
  5039  0024' EC00' F000'        	call	_TiResetTics
  5040                           
  5041                           ;TAltaveu.c: 31:           LATAbits.LATA2 = 1;
  5042  0028' 8489               	bsf	137,2,c	;volatile
  5043                           
  5044                           ;TAltaveu.c: 32:           estat = 1;
  5045  002A' 0E01               	movlw	1
  5046  002C' 6E00'              	movwf	motorPWM@estat^0,c
  5047  002E' 0012               	return	
  5048  0030'                    l5731:
  5049                           
  5050                           ;TAltaveu.c: 36:         if (TiGetTics(timerPWM)>= (nota >> 1)){
  5051  0030' 90D8               	bcf	status,0,c
  5052  0032' 3000'              	rrcf	_nota^0,w,c
  5053  0034' 6E00'              	movwf	??_motorPWM^0,c
  5054  0036' 6A00'              	clrf	(??_motorPWM+1)^0,c
  5055  0038' 5000'              	movf	_timerPWM^0,w,c
  5056  003A' EC00' F000'        	call	_TiGetTics
  5057  003E' 5000'              	movf	??_motorPWM^0,w,c
  5058  0040' 5C00'              	subwf	?_TiGetTics^0,w,c
  5059  0042' 5000'              	movf	(??_motorPWM+1)^0,w,c
  5060  0044' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  5061  0046' A0D8               	btfss	status,0,c
  5062  0048' 0012               	return	
  5063                           
  5064                           ;TAltaveu.c: 37:           TiResetTics(timerPWM);
  5065  004A' 5000'              	movf	_timerPWM^0,w,c
  5066  004C' EC00' F000'        	call	_TiResetTics
  5067                           
  5068                           ;TAltaveu.c: 38:           LATAbits.LATA2 = 0;
  5069  0050' 9489               	bcf	137,2,c	;volatile
  5070                           
  5071                           ;TAltaveu.c: 39:           estat = 0;
  5072  0052' 0E00               	movlw	0
  5073  0054' 6E00'              	movwf	motorPWM@estat^0,c
  5074  0056' 0012               	return	
  5075  0058'                    l5741:
  5076  0058' 5000'              	movf	motorPWM@estat^0,w,c
  5077  005A' 6E00'              	movwf	??_motorPWM^0,c
  5078  005C' 6A00'              	clrf	(??_motorPWM+1)^0,c
  5079                           
  5080                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5081                           ; Switch size 1, requested type "simple"
  5082                           ; Number of cases is 1, Range of values is 0 to 0
  5083                           ; switch strategies available:
  5084                           ; Name         Instructions Cycles
  5085                           ; simple_byte            4     3 (average)
  5086                           ;	Chosen strategy is simple_byte
  5087  005E' 5000'              	movf	(??_motorPWM+1)^0,w,c
  5088  0060' 0A00               	xorlw	0	; case 0
  5089  0062' A4D8               	btfss	status,2,c
  5090  0064' 0012               	return	
  5091                           
  5092                           ; Switch size 1, requested type "simple"
  5093                           ; Number of cases is 2, Range of values is 0 to 1
  5094                           ; switch strategies available:
  5095                           ; Name         Instructions Cycles
  5096                           ; simple_byte            7     4 (average)
  5097                           ;	Chosen strategy is simple_byte
  5098  0066' 5000'              	movf	??_motorPWM^0,w,c
  5099  0068' 0A00               	xorlw	0	; case 0
  5100  006A' B4D8               	btfsc	status,2,c
  5101  006C' D7CD               	goto	l5723
  5102  006E' 0A01               	xorlw	1	; case 1
  5103  0070' A4D8               	btfss	status,2,c
  5104  0072' 0012               	return	
  5105  0074' D7DD               	goto	l5731
  5106  0076'                    __end_of_motorPWM:
  5107                           	callstack 0
  5108                           
  5109 ;; *************** function _motorMusica *****************
  5110 ;; Defined at:
  5111 ;;		line 46 in file "TAltaveu.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1
  5125 ;;      Params:         0       0       0
  5126 ;;      Locals:         0       0       0
  5127 ;;      Temps:          0       0       0
  5128 ;;      Totals:         0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 3
  5132 ;; This function calls:
  5133 ;;		_TiGetTics
  5134 ;;		_TiResetTics
  5135 ;; This function is called by:
  5136 ;;		_main
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text26
  5141  0000'                    __ptext26:
  5142                           	callstack 0
  5143  0000'                    _motorMusica:
  5144                           	callstack 27
  5145                           
  5146                           ;TAltaveu.c: 47:     if (TiGetTics(timerMusica) >= 2000){
  5147                           
  5148                           ;incstack = 0
  5149  0000' 5000'              	movf	_timerMusica^0,w,c
  5150  0002' EC00' F000'        	call	_TiGetTics
  5151  0006' 0ED0               	movlw	208
  5152  0008' 5C00'              	subwf	?_TiGetTics^0,w,c
  5153  000A' 0E07               	movlw	7
  5154  000C' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  5155  000E' A0D8               	btfss	status,0,c
  5156  0010' 0012               	return	
  5157                           
  5158                           ;TAltaveu.c: 48:         TiResetTics(timerMusica);
  5159  0012' 5000'              	movf	_timerMusica^0,w,c
  5160  0014' EC00' F000'        	call	_TiResetTics
  5161                           
  5162                           ;TAltaveu.c: 49:         if (nota == 10){
  5163  0018' 0E0A               	movlw	10
  5164  001A' 1800'              	xorwf	_nota^0,w,c
  5165  001C' A4D8               	btfss	status,2,c
  5166  001E' D003               	goto	l5717
  5167                           
  5168                           ;TAltaveu.c: 50:             nota = 1;
  5169  0020' 0E01               	movlw	1
  5170  0022' 6E00'              	movwf	_nota^0,c
  5171                           
  5172                           ;TAltaveu.c: 51:         } else {
  5173  0024' 0012               	return	
  5174  0026'                    l5717:
  5175                           
  5176                           ;TAltaveu.c: 52:             nota++;
  5177  0026' 2A00'              	incf	_nota^0,f,c
  5178  0028' 0012               	return		;funcret
  5179  002A'                    __end_of_motorMusica:
  5180                           	callstack 0
  5181                           
  5182 ;; *************** function _motorMenu *****************
  5183 ;; Defined at:
  5184 ;;		line 222 in file "TMenu.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;		None
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1
  5198 ;;      Params:         0       0       0
  5199 ;;      Locals:         0       0       0
  5200 ;;      Temps:          0       0       0
  5201 ;;      Totals:         0       0       0
  5202 ;;Total ram usage:        0 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 10
  5205 ;; This function calls:
  5206 ;;		_printLetter
  5207 ;;		_resetMenu
  5208 ;;		_showLCD
  5209 ;; This function is called by:
  5210 ;;		_main
  5211 ;; This function uses a non-reentrant model
  5212 ;;
  5213                           
  5214                           	psect	text27
  5215  0000'                    __ptext27:
  5216                           	callstack 0
  5217  0000'                    _motorMenu:
  5218                           	callstack 20
  5219                           
  5220                           ;TMenu.c: 223:     if(subMenu == 0 && playing == 0) {
  5221                           
  5222                           ;incstack = 0
  5223  0000' 5000'              	movf	_subMenu^0,w,c
  5224  0002' A4D8               	btfss	status,2,c
  5225  0004' D036               	goto	l6485
  5226  0006' 5000'              	movf	_playing^0,w,c
  5227  0008' A4D8               	btfss	status,2,c
  5228  000A' D033               	goto	l6485
  5229                           
  5230                           ;TMenu.c: 224:         if (pos == 1 || pos == 2){
  5231  000C' 0400'              	decf	_pos^0,w,c
  5232  000E' B4D8               	btfsc	status,2,c
  5233  0010' D004               	goto	u7230
  5234  0012' 0E02               	movlw	2
  5235  0014' 1800'              	xorwf	_pos^0,w,c
  5236  0016' A4D8               	btfss	status,2,c
  5237  0018' D00C               	goto	l6477
  5238  001A'                    u7230:
  5239                           
  5240                           ;TMenu.c: 225:             showLCD(OPTION1, OPTION2);
  5241  001A' 0E00'              	movlw	low _OPTION1
  5242  001C' 0101               	movlb	1	; () banked
  5243  001E' 6F00'              	movwf	showLCD@message1& (0+255),b
  5244  0020' 0E00'              	movlw	high _OPTION1
  5245  0022' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5246  0024' 0E00'              	movlw	low _OPTION2
  5247  0026' 6F00'              	movwf	showLCD@message2& (0+255),b
  5248  0028' 0E00'              	movlw	high _OPTION2
  5249  002A' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5250  002C' EC00' F000'        	call	_showLCD	;wreg free
  5251                           
  5252                           ;TMenu.c: 226:         } else if (pos == 3 || pos == 4){
  5253  0030' 0012               	return	
  5254  0032'                    l6477:
  5255  0032' 0E03               	movlw	3
  5256  0034' 1800'              	xorwf	_pos^0,w,c
  5257  0036' B4D8               	btfsc	status,2,c
  5258  0038' D004               	goto	u7250
  5259  003A' 0E04               	movlw	4
  5260  003C' 1800'              	xorwf	_pos^0,w,c
  5261  003E' A4D8               	btfss	status,2,c
  5262  0040' D00C               	goto	l6483
  5263  0042'                    u7250:
  5264                           
  5265                           ;TMenu.c: 227:             showLCD(OPTION3, OPTION4);
  5266  0042' 0E00'              	movlw	low _OPTION3
  5267  0044' 0101               	movlb	1	; () banked
  5268  0046' 6F00'              	movwf	showLCD@message1& (0+255),b
  5269  0048' 0E00'              	movlw	high _OPTION3
  5270  004A' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5271  004C' 0E00'              	movlw	low _OPTION4
  5272  004E' 6F00'              	movwf	showLCD@message2& (0+255),b
  5273  0050' 0E00'              	movlw	high _OPTION4
  5274  0052' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5275  0054' EC00' F000'        	call	_showLCD	;wreg free
  5276                           
  5277                           ;TMenu.c: 228:         } else {
  5278  0058' 0012               	return	
  5279  005A'                    l6483:
  5280                           
  5281                           ;TMenu.c: 229:             showLCD(OPTION5, OPTION6);
  5282  005A' 0E00'              	movlw	low _OPTION5
  5283  005C' 0101               	movlb	1	; () banked
  5284  005E' 6F00'              	movwf	showLCD@message1& (0+255),b
  5285  0060' 0E00'              	movlw	high _OPTION5
  5286  0062' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5287  0064' 0E00'              	movlw	low _OPTION6
  5288  0066' 6F00'              	movwf	showLCD@message2& (0+255),b
  5289  0068' 0E00'              	movlw	high _OPTION6
  5290  006A' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5291  006C' EC00' F000'        	call	_showLCD	;wreg free
  5292                           
  5293                           ;TMenu.c: 231:     } else if (subMenu == 1 || subMenu == 4){
  5294  0070' 0012               	return	
  5295  0072'                    l6485:
  5296  0072' 0400'              	decf	_subMenu^0,w,c
  5297  0074' B4D8               	btfsc	status,2,c
  5298  0076' D004               	goto	u7270
  5299  0078' 0E04               	movlw	4
  5300  007A' 1800'              	xorwf	_subMenu^0,w,c
  5301  007C' A4D8               	btfss	status,2,c
  5302  007E' D068               	goto	l6521
  5303  0080'                    u7270:
  5304                           
  5305                           ;TMenu.c: 232:         if (subMenu == 1 && mGame == 0){
  5306  0080' 0400'              	decf	_subMenu^0,w,c
  5307  0082' A4D8               	btfss	status,2,c
  5308  0084' D00F               	goto	l6495
  5309  0086' 5000'              	movf	_mGame^0,w,c
  5310  0088' A4D8               	btfss	status,2,c
  5311  008A' D00C               	goto	l6495
  5312                           
  5313                           ;TMenu.c: 233:             showLCD(SELECT_USER, NEW_USER);
  5314  008C' 0E00'              	movlw	low _SELECT_USER
  5315  008E' 0101               	movlb	1	; () banked
  5316  0090' 6F00'              	movwf	showLCD@message1& (0+255),b
  5317  0092' 0E00'              	movlw	high _SELECT_USER
  5318  0094' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5319  0096' 0E00'              	movlw	low _NEW_USER
  5320  0098' 6F00'              	movwf	showLCD@message2& (0+255),b
  5321  009A' 0E00'              	movlw	high _NEW_USER
  5322  009C' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5323  009E' EC00' F000'        	call	_showLCD	;wreg free
  5324                           
  5325                           ;TMenu.c: 234:         } else if (subMenu == 1 && mGame == 2){
  5326  00A2' 0012               	return	
  5327  00A4'                    l6495:
  5328  00A4' 0400'              	decf	_subMenu^0,w,c
  5329  00A6' A4D8               	btfss	status,2,c
  5330  00A8' D01F               	goto	l6505
  5331  00AA' 0E02               	movlw	2
  5332  00AC' 1800'              	xorwf	_mGame^0,w,c
  5333  00AE' A4D8               	btfss	status,2,c
  5334  00B0' D01B               	goto	l6505
  5335                           
  5336                           ;TMenu.c: 235:             if (mModUEdit == 0){
  5337  00B2' 5000'              	movf	_mModUEdit^0,w,c
  5338  00B4' A4D8               	btfss	status,2,c
  5339  00B6' D00C               	goto	l6503
  5340                           
  5341                           ;TMenu.c: 236:                 showLCD(ENTER_NAME, "");
  5342  00B8' 0E00'              	movlw	low _ENTER_NAME
  5343  00BA' 0101               	movlb	1	; () banked
  5344  00BC' 6F00'              	movwf	showLCD@message1& (0+255),b
  5345  00BE' 0E00'              	movlw	high _ENTER_NAME
  5346  00C0' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5347  00C2' 0E00'              	movlw	low STR_1
  5348  00C4' 6F00'              	movwf	showLCD@message2& (0+255),b
  5349  00C6' 0E00'              	movlw	high STR_1
  5350  00C8' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5351  00CA' EC00' F000'        	call	_showLCD	;wreg free
  5352                           
  5353                           ;TMenu.c: 237:             } else {
  5354  00CE' 0012               	return	
  5355  00D0'                    l6503:
  5356                           
  5357                           ;TMenu.c: 238:                 showLCD(ENTER_NEW_NAME, "");
  5358  00D0' 0E00'              	movlw	low _ENTER_NEW_NAME
  5359  00D2' 0101               	movlb	1	; () banked
  5360  00D4' 6F00'              	movwf	showLCD@message1& (0+255),b
  5361  00D6' 0E00'              	movlw	high _ENTER_NEW_NAME
  5362  00D8' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5363  00DA' 0E00'              	movlw	low STR_1
  5364  00DC' 6F00'              	movwf	showLCD@message2& (0+255),b
  5365  00DE' 0E00'              	movlw	high STR_1
  5366  00E0' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5367  00E2' EC00' F000'        	call	_showLCD	;wreg free
  5368  00E6' 0012               	return	
  5369  00E8'                    l6505:
  5370  00E8' 0400'              	decf	_subMenu^0,w,c
  5371  00EA' A4D8               	btfss	status,2,c
  5372  00EC' D003               	goto	u7340
  5373  00EE' 0400'              	decf	_mGame^0,w,c
  5374  00F0' B4D8               	btfsc	status,2,c
  5375  00F2' D004               	goto	u7350
  5376  00F4'                    u7340:
  5377  00F4' 0E04               	movlw	4
  5378  00F6' 1800'              	xorwf	_subMenu^0,w,c
  5379  00F8' A4D8               	btfss	status,2,c
  5380  00FA' 0012               	return	
  5381  00FC'                    u7350:
  5382                           
  5383                           ;TMenu.c: 241:             if (subMenu == 4 && mModUSelect == 1 && mModUEdit == 0){
  5384  00FC' 0E04               	movlw	4
  5385  00FE' 1800'              	xorwf	_subMenu^0,w,c
  5386  0100' A4D8               	btfss	status,2,c
  5387  0102' D012               	goto	l6519
  5388  0104' 0400'              	decf	_mModUSelect^0,w,c
  5389  0106' A4D8               	btfss	status,2,c
  5390  0108' D00F               	goto	l6519
  5391  010A' 5000'              	movf	_mModUEdit^0,w,c
  5392  010C' A4D8               	btfss	status,2,c
  5393  010E' D00C               	goto	l6519
  5394                           
  5395                           ;TMenu.c: 242:                 showLCD(EDIT_NAME, DELETE_USER);
  5396  0110' 0E00'              	movlw	low _EDIT_NAME
  5397  0112' 0101               	movlb	1	; () banked
  5398  0114' 6F00'              	movwf	showLCD@message1& (0+255),b
  5399  0116' 0E00'              	movlw	high _EDIT_NAME
  5400  0118' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5401  011A' 0E00'              	movlw	low _DELETE_USER
  5402  011C' 6F00'              	movwf	showLCD@message2& (0+255),b
  5403  011E' 0E00'              	movlw	high _DELETE_USER
  5404  0120' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5405  0122' EC00' F000'        	call	_showLCD	;wreg free
  5406                           
  5407                           ;TMenu.c: 243:             } else {
  5408  0126' 0012               	return	
  5409  0128'                    l6519:
  5410                           
  5411                           ;TMenu.c: 244:                 showLCD(users1[user].name, users2[user].name);
  5412  0128' 5000'              	movf	_user^0,w,c
  5413  012A' 0D0B               	mullw	11
  5414  012C' 0E00'              	movlw	low _users1
  5415  012E' 24F3               	addwf	243,w,c
  5416  0130' 0101               	movlb	1	; () banked
  5417  0132' 6F00'              	movwf	showLCD@message1& (0+255),b
  5418  0134' 0E00'              	movlw	high _users1
  5419  0136' 20F4               	addwfc	prodh,w,c
  5420  0138' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5421  013A' 5000'              	movf	_user^0,w,c
  5422  013C' 0D0B               	mullw	11
  5423  013E' 0E00'              	movlw	low _users2
  5424  0140' 24F3               	addwf	243,w,c
  5425  0142' 6F00'              	movwf	showLCD@message2& (0+255),b
  5426  0144' 0E00'              	movlw	high _users2
  5427  0146' 20F4               	addwfc	prodh,w,c
  5428  0148' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5429  014A' EC00' F000'        	call	_showLCD	;wreg free
  5430  014E' 0012               	return	
  5431  0150'                    l6521:
  5432  0150' 0E02               	movlw	2
  5433  0152' 1800'              	xorwf	_subMenu^0,w,c
  5434  0154' A4D8               	btfss	status,2,c
  5435  0156' D00C               	goto	l6525
  5436                           
  5437                           ;TMenu.c: 248:         showLCD("", "");
  5438  0158' 0E00'              	movlw	low STR_1
  5439  015A' 0101               	movlb	1	; () banked
  5440  015C' 6F00'              	movwf	showLCD@message1& (0+255),b
  5441  015E' 0E00'              	movlw	high STR_1
  5442  0160' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5443  0162' 0E00'              	movlw	low STR_1
  5444  0164' 6F00'              	movwf	showLCD@message2& (0+255),b
  5445  0166' 0E00'              	movlw	high STR_1
  5446  0168' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5447  016A' EC00' F000'        	call	_showLCD	;wreg free
  5448                           
  5449                           ;TMenu.c: 249:     } else if (subMenu == 3){
  5450  016E' 0012               	return	
  5451  0170'                    l6525:
  5452  0170' 0E03               	movlw	3
  5453  0172' 1800'              	xorwf	_subMenu^0,w,c
  5454  0174' A4D8               	btfss	status,2,c
  5455  0176' D00C               	goto	l6529
  5456                           
  5457                           ;TMenu.c: 250:         showLCD("", "");
  5458  0178' 0E00'              	movlw	low STR_1
  5459  017A' 0101               	movlb	1	; () banked
  5460  017C' 6F00'              	movwf	showLCD@message1& (0+255),b
  5461  017E' 0E00'              	movlw	high STR_1
  5462  0180' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5463  0182' 0E00'              	movlw	low STR_1
  5464  0184' 6F00'              	movwf	showLCD@message2& (0+255),b
  5465  0186' 0E00'              	movlw	high STR_1
  5466  0188' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5467  018A' EC00' F000'        	call	_showLCD	;wreg free
  5468                           
  5469                           ;TMenu.c: 251:     } else if (subMenu == 5){
  5470  018E' 0012               	return	
  5471  0190'                    l6529:
  5472  0190' 0E05               	movlw	5
  5473  0192' 1800'              	xorwf	_subMenu^0,w,c
  5474  0194' A4D8               	btfss	status,2,c
  5475  0196' D00E               	goto	l6535
  5476                           
  5477                           ;TMenu.c: 252:         if (showHora == 1){
  5478  0198' 0400'              	decf	_showHora^0,w,c
  5479  019A' A4D8               	btfss	status,2,c
  5480  019C' 0012               	return	
  5481                           
  5482                           ;TMenu.c: 253:             showLCD(SHOW_TIME, time);
  5483  019E' 0E00'              	movlw	low _SHOW_TIME
  5484  01A0' 0101               	movlb	1	; () banked
  5485  01A2' 6F00'              	movwf	showLCD@message1& (0+255),b
  5486  01A4' 0E00'              	movlw	high _SHOW_TIME
  5487  01A6' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5488  01A8' 0E00'              	movlw	low _time
  5489  01AA' 6F00'              	movwf	showLCD@message2& (0+255),b
  5490  01AC' 6B00'              	clrf	(showLCD@message2+1)& (0+255),b
  5491  01AE' EC00' F000'        	call	_showLCD	;wreg free
  5492  01B2' 0012               	return	
  5493  01B4'                    l6535:
  5494  01B4' 0E06               	movlw	6
  5495  01B6' 1800'              	xorwf	_subMenu^0,w,c
  5496  01B8' A4D8               	btfss	status,2,c
  5497  01BA' D00C               	goto	l6539
  5498                           
  5499                           ;TMenu.c: 256:         showLCD(ENTER_NEWTIME, TIME);
  5500  01BC' 0E00'              	movlw	low _ENTER_NEWTIME
  5501  01BE' 0101               	movlb	1	; () banked
  5502  01C0' 6F00'              	movwf	showLCD@message1& (0+255),b
  5503  01C2' 0E00'              	movlw	high _ENTER_NEWTIME
  5504  01C4' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5505  01C6' 0E00'              	movlw	low _TIME
  5506  01C8' 6F00'              	movwf	showLCD@message2& (0+255),b
  5507  01CA' 0E00'              	movlw	high _TIME
  5508  01CC' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5509  01CE' EC00' F000'        	call	_showLCD	;wreg free
  5510                           
  5511                           ;TMenu.c: 257:     } else if (playing == 1){
  5512  01D2' 0012               	return	
  5513  01D4'                    l6539:
  5514  01D4' 0400'              	decf	_playing^0,w,c
  5515  01D6' A4D8               	btfss	status,2,c
  5516  01D8' D023               	goto	l6547
  5517                           
  5518                           ;TMenu.c: 258:         if (array == 1){
  5519  01DA' 0400'              	decf	_array^0,w,c
  5520  01DC' A4D8               	btfss	status,2,c
  5521  01DE' D010               	goto	l6545
  5522                           
  5523                           ;TMenu.c: 259:             showLCD(users1[user].name, INFO_GAME);
  5524  01E0' 5000'              	movf	_user^0,w,c
  5525  01E2' 0D0B               	mullw	11
  5526  01E4' 0E00'              	movlw	low _users1
  5527  01E6' 24F3               	addwf	243,w,c
  5528  01E8' 0101               	movlb	1	; () banked
  5529  01EA' 6F00'              	movwf	showLCD@message1& (0+255),b
  5530  01EC' 0E00'              	movlw	high _users1
  5531  01EE' 20F4               	addwfc	prodh,w,c
  5532  01F0' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5533  01F2' 0E00'              	movlw	low _INFO_GAME
  5534  01F4' 6F00'              	movwf	showLCD@message2& (0+255),b
  5535  01F6' 0E00'              	movlw	high _INFO_GAME
  5536  01F8' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5537  01FA' EC00' F000'        	call	_showLCD	;wreg free
  5538                           
  5539                           ;TMenu.c: 260:         } else {
  5540  01FE' 0012               	return	
  5541  0200'                    l6545:
  5542                           
  5543                           ;TMenu.c: 261:             showLCD(users2[user].name, INFO_GAME);
  5544  0200' 5000'              	movf	_user^0,w,c
  5545  0202' 0D0B               	mullw	11
  5546  0204' 0E00'              	movlw	low _users2
  5547  0206' 24F3               	addwf	243,w,c
  5548  0208' 0101               	movlb	1	; () banked
  5549  020A' 6F00'              	movwf	showLCD@message1& (0+255),b
  5550  020C' 0E00'              	movlw	high _users2
  5551  020E' 20F4               	addwfc	prodh,w,c
  5552  0210' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5553  0212' 0E00'              	movlw	low _INFO_GAME
  5554  0214' 6F00'              	movwf	showLCD@message2& (0+255),b
  5555  0216' 0E00'              	movlw	high _INFO_GAME
  5556  0218' 6F00'              	movwf	(showLCD@message2+1)& (0+255),b
  5557  021A' EC00' F000'        	call	_showLCD	;wreg free
  5558  021E' 0012               	return	
  5559  0220'                    l6547:
  5560  0220' 0E02               	movlw	2
  5561  0222' 1800'              	xorwf	_playing^0,w,c
  5562  0224' A4D8               	btfss	status,2,c
  5563  0226' 0012               	return	
  5564                           
  5565                           ;TMenu.c: 264:         if (first == 0){
  5566  0228' 5000'              	movf	_first^0,w,c
  5567  022A' A4D8               	btfss	status,2,c
  5568  022C' D005               	goto	l6555
  5569                           
  5570                           ;TMenu.c: 265:             resetMenu();
  5571  022E' EC00' F000'        	call	_resetMenu	;wreg free
  5572                           
  5573                           ;TMenu.c: 266:             first = 1;
  5574  0232' 0E01               	movlw	1
  5575  0234' 6E00'              	movwf	_first^0,c
  5576                           
  5577                           ;TMenu.c: 267:         } else {
  5578  0236' 0012               	return	
  5579  0238'                    l6555:
  5580                           
  5581                           ;TMenu.c: 268:             showLCD(SCORE, HIGH_SCORE);
  5582  0238' 0E00'              	movlw	low _SCORE
  5583  023A' 0101               	movlb	1	; () banked
  5584  023C' 6F00'              	movwf	showLCD@message1& (0+255),b
  5585  023E' 0E00'              	movlw	high _SCORE
  5586  0240' 6F00'              	movwf	(showLCD@message1+1)& (0+255),b
  5587  0242' 0E00'              	movlw	low _HIGH_SCORE
  5588  0244' 6F00'              	movwf	showLCD@message2& (0+255),b
  5589  0246' 6B00'              	clrf	(showLCD@message2+1)& (0+255),b
  5590  0248' EC00' F000'        	call	_showLCD	;wreg free
  5591                           
  5592                           ;TMenu.c: 269:             if (posScore < 3) {
  5593  024C' 0E03               	movlw	3
  5594  024E' 6000'              	cpfslt	_posScore^0,c
  5595  0250' D01A               	goto	l6567
  5596                           
  5597                           ;TMenu.c: 270:                 printLetter(points[posScore], posScore + 7);
  5598  0252' 5000'              	movf	_posScore^0,w,c
  5599  0254' 0F07               	addlw	7
  5600  0256' 6E00'              	movwf	printLetter@numChars^0,c
  5601  0258' 5000'              	movf	_posScore^0,w,c
  5602  025A' 0F00'              	addlw	low _points
  5603  025C' 6ED9               	movwf	fsr2l,c
  5604  025E' 6ADA               	clrf	fsr2h,c
  5605  0260' 50DF               	movf	indf2,w,c
  5606  0262' EC00' F000'        	call	_printLetter
  5607                           
  5608                           ;TMenu.c: 271:                 second = 1;
  5609  0266' 0E01               	movlw	1
  5610  0268' 6E00'              	movwf	_second^0,c
  5611                           
  5612                           ;TMenu.c: 272:                 printLetter(hScore[posScore], posScore + 12);
  5613  026A' 5000'              	movf	_posScore^0,w,c
  5614  026C' 0F0C               	addlw	12
  5615  026E' 6E00'              	movwf	printLetter@numChars^0,c
  5616  0270' 5000'              	movf	_posScore^0,w,c
  5617  0272' 0F00'              	addlw	low _hScore
  5618  0274' 6ED9               	movwf	fsr2l,c
  5619  0276' 6ADA               	clrf	fsr2h,c
  5620  0278' 50DF               	movf	indf2,w,c
  5621  027A' EC00' F000'        	call	_printLetter
  5622                           
  5623                           ;TMenu.c: 273:                 second = 0;
  5624  027E' 0E00               	movlw	0
  5625  0280' 6E00'              	movwf	_second^0,c
  5626                           
  5627                           ;TMenu.c: 274:                 posScore++;
  5628  0282' 2A00'              	incf	_posScore^0,f,c
  5629                           
  5630                           ;TMenu.c: 275:             } else {
  5631  0284' 0012               	return	
  5632  0286'                    l6567:
  5633                           
  5634                           ;TMenu.c: 276:                 posScore = 0;
  5635  0286' 0E00               	movlw	0
  5636  0288' 6E00'              	movwf	_posScore^0,c
  5637  028A' 0012               	return		;funcret
  5638  028C'                    __end_of_motorMenu:
  5639                           	callstack 0
  5640                           
  5641 ;; *************** function _showLCD *****************
  5642 ;; Defined at:
  5643 ;;		line 188 in file "TMenu.c"
  5644 ;; Parameters:    Size  Location     Type
  5645 ;;  message1        2    0[BANK1 ] PTR unsigned char 
  5646 ;;		 -> SCORE(20), ENTER_NEWTIME(20), SHOW_TIME(20), STR_5(1), 
  5647 ;;		 -> STR_3(1), EDIT_NAME(20), ENTER_NEW_NAME(20), ENTER_NAME(20), 
  5648 ;;		 -> SELECT_USER(20), OPTION5(20), OPTION3(20), OPTION1(20), 
  5649 ;;		 -> users2(110), users1(110), 
  5650 ;;  message2        2    2[BANK1 ] PTR unsigned char 
  5651 ;;		 -> INFO_GAME(20), TIME(20), STR_6(1), STR_4(1), 
  5652 ;;		 -> DELETE_USER(20), STR_2(1), STR_1(1), NEW_USER(20), 
  5653 ;;		 -> OPTION6(20), OPTION4(20), OPTION2(20), HIGH_SCORE(20), 
  5654 ;;		 -> time(5), users2(110), 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 3F/1
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1
  5666 ;;      Params:         0       0       4
  5667 ;;      Locals:         0       0       0
  5668 ;;      Temps:          2       0       0
  5669 ;;      Totals:         2       0       4
  5670 ;;Total ram usage:        6 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 9
  5673 ;; This function calls:
  5674 ;;		_LcGotoXY
  5675 ;;		_LcPutChar
  5676 ;;		_printOptions
  5677 ;;		_showArrow
  5678 ;;		_toMarkesination
  5679 ;; This function is called by:
  5680 ;;		_motorMenu
  5681 ;; This function uses a non-reentrant model
  5682 ;;
  5683                           
  5684                           	psect	text28
  5685  0000'                    __ptext28:
  5686                           	callstack 0
  5687  0000'                    _showLCD:
  5688                           	callstack 20
  5689                           
  5690                           ; BSR set to: 1
  5691                           ;TMenu.c: 189:     if ((message1[16] == '\0' && message2[16] == '\0' && subMenu != 3 && 
      +                          subMenu != 2) || playing == 1 || subMenu == 5) {
  5692                           
  5693                           ;incstack = 0
  5694  0000' 0E10               	movlw	16
  5695  0002' 2500'              	addwf	showLCD@message1& (0+255),w,b
  5696  0004' 6E00'              	movwf	??_showLCD^0,c
  5697  0006' 0E00               	movlw	0
  5698  0008' 2100'              	addwfc	(showLCD@message1+1)& (0+255),w,b
  5699  000A' 6E00'              	movwf	(??_showLCD+1)^0,c
  5700  000C' C02C' FFF6         	movff	??_showLCD,tblptrl
  5701  0010' C02D' FFF7         	movff	??_showLCD+1,tblptrh
  5702  0014' 6AF8               	clrf	tblptru,c
  5703  0016' 0EFF'              	movlw	(high __ramtop+-1)
  5704  0018' 64F7               	cpfsgt	tblptrh,c
  5705  001A' D003               	bra	u6947
  5706  001C' 0008               	tblrd		*
  5707  001E' 50F5               	movf	tablat,w,c
  5708  0020' D005               	bra	u6940
  5709  0022'                    u6947:
  5710  0022' CFF6 FFE9          	movff	tblptrl,fsr0l
  5711  0026' CFF7 FFEA          	movff	tblptrh,fsr0h
  5712  002A' 50EF               	movf	indf0,w,c
  5713  002C'                    u6940:
  5714  002C' 0900               	iorlw	0
  5715  002E' A4D8               	btfss	status,2,c
  5716  0030' D022               	goto	u6990
  5717  0032' 0E10               	movlw	16
  5718  0034' 0101               	movlb	1	; () banked
  5719  0036' 2500'              	addwf	showLCD@message2& (0+255),w,b
  5720  0038' 6E00'              	movwf	??_showLCD^0,c
  5721  003A' 0E00               	movlw	0
  5722  003C' 2100'              	addwfc	(showLCD@message2+1)& (0+255),w,b
  5723  003E' 6E00'              	movwf	(??_showLCD+1)^0,c
  5724  0040' C02C' FFF6         	movff	??_showLCD,tblptrl
  5725  0044' C02D' FFF7         	movff	??_showLCD+1,tblptrh
  5726  0048' 6AF8               	clrf	tblptru,c
  5727  004A' 0EFF'              	movlw	(high __ramtop+-1)
  5728  004C' 64F7               	cpfsgt	tblptrh,c
  5729  004E' D003               	bra	u6967
  5730  0050' 0008               	tblrd		*
  5731  0052' 50F5               	movf	tablat,w,c
  5732  0054' D005               	bra	u6960
  5733  0056'                    u6967:
  5734  0056' CFF6 FFE9          	movff	tblptrl,fsr0l
  5735  005A' CFF7 FFEA          	movff	tblptrh,fsr0h
  5736  005E' 50EF               	movf	indf0,w,c
  5737  0060'                    u6960:
  5738  0060' 0900               	iorlw	0
  5739  0062' A4D8               	btfss	status,2,c
  5740  0064' D008               	goto	u6990
  5741  0066' 0E03               	movlw	3
  5742  0068' 1800'              	xorwf	_subMenu^0,w,c
  5743  006A' B4D8               	btfsc	status,2,c
  5744  006C' D004               	goto	u6990
  5745  006E' 0E02               	movlw	2
  5746  0070' 1800'              	xorwf	_subMenu^0,w,c
  5747  0072' A4D8               	btfss	status,2,c
  5748  0074' D007               	goto	u7010
  5749  0076'                    u6990:
  5750  0076' 0400'              	decf	_playing^0,w,c
  5751  0078' B4D8               	btfsc	status,2,c
  5752  007A' D004               	goto	u7010
  5753  007C' 0E05               	movlw	5
  5754  007E' 1800'              	xorwf	_subMenu^0,w,c
  5755  0080' A4D8               	btfss	status,2,c
  5756  0082' D00B               	goto	l6363
  5757  0084'                    u7010:
  5758                           
  5759                           ;TMenu.c: 190:         printOptions(message1, message2);
  5760  0084' C000' F01C'        	movff	showLCD@message1,printOptions@message1
  5761  0088' C001' F01D'        	movff	showLCD@message1+1,printOptions@message1+1
  5762  008C' C002' F01E'        	movff	showLCD@message2,printOptions@message2
  5763  0090' C003' F01F'        	movff	showLCD@message2+1,printOptions@message2+1
  5764  0094' EC00' F000'        	call	_printOptions	;wreg free
  5765                           
  5766                           ;TMenu.c: 191:     } else if (subMenu == 0){
  5767  0098' D03C               	goto	l1104
  5768  009A'                    l6363:
  5769  009A' 5000'              	movf	_subMenu^0,w,c
  5770  009C' A4D8               	btfss	status,2,c
  5771  009E' D00F               	goto	l6367
  5772                           
  5773                           ;TMenu.c: 192:         toMarkesination(message1, message2, 20, 3);
  5774  00A0' C000' F020'        	movff	showLCD@message1,toMarkesination@message1
  5775  00A4' C001' F021'        	movff	showLCD@message1+1,toMarkesination@message1+1
  5776  00A8' C002' F022'        	movff	showLCD@message2,toMarkesination@message2
  5777  00AC' C003' F023'        	movff	showLCD@message2+1,toMarkesination@message2+1
  5778  00B0' 0E14               	movlw	20
  5779  00B2' 6E00'              	movwf	toMarkesination@limit^0,c
  5780  00B4' 0E03               	movlw	3
  5781  00B6' 6E00'              	movwf	toMarkesination@refresh^0,c
  5782  00B8' EC00' F000'        	call	_toMarkesination	;wreg free
  5783                           
  5784                           ;TMenu.c: 193:     } else if (subMenu == 2){
  5785  00BC' D02A               	goto	l1104
  5786  00BE'                    l6367:
  5787  00BE' 0E02               	movlw	2
  5788  00C0' 1800'              	xorwf	_subMenu^0,w,c
  5789  00C2' A4D8               	btfss	status,2,c
  5790  00C4' D00E               	goto	l6371
  5791                           
  5792                           ;TMenu.c: 194:         toMarkesination(users1[0].name, HIGH_SCORE, 31, 0);
  5793  00C6' 0E00'              	movlw	low _users1
  5794  00C8' 6E00'              	movwf	toMarkesination@message1^0,c
  5795  00CA' 0E00'              	movlw	high _users1
  5796  00CC' 6E00'              	movwf	(toMarkesination@message1+1)^0,c
  5797  00CE' 0E00'              	movlw	low _HIGH_SCORE
  5798  00D0' 6E00'              	movwf	toMarkesination@message2^0,c
  5799  00D2' 6A00'              	clrf	(toMarkesination@message2+1)^0,c
  5800  00D4' 0E1F               	movlw	31
  5801  00D6' 6E00'              	movwf	toMarkesination@limit^0,c
  5802  00D8' 0E00               	movlw	0
  5803  00DA' 6E00'              	movwf	toMarkesination@refresh^0,c
  5804  00DC' EC00' F000'        	call	_toMarkesination	;wreg free
  5805                           
  5806                           ;TMenu.c: 195:     } else if (subMenu == 3){
  5807  00E0' D018               	goto	l1104
  5808  00E2'                    l6371:
  5809  00E2' 0E03               	movlw	3
  5810  00E4' 1800'              	xorwf	_subMenu^0,w,c
  5811  00E6' A4D8               	btfss	status,2,c
  5812  00E8' D014               	goto	l1104
  5813                           
  5814                           ;TMenu.c: 196:          toMarkesination(users1[0].name, users2[0].name, ((20 - 3) * ((nu
      +                          mUsers >> 1) + 1)), 0);
  5815  00EA' 0E00'              	movlw	low _users1
  5816  00EC' 6E00'              	movwf	toMarkesination@message1^0,c
  5817  00EE' 0E00'              	movlw	high _users1
  5818  00F0' 6E00'              	movwf	(toMarkesination@message1+1)^0,c
  5819  00F2' 0E00'              	movlw	low _users2
  5820  00F4' 6E00'              	movwf	toMarkesination@message2^0,c
  5821  00F6' 0E00'              	movlw	high _users2
  5822  00F8' 6E00'              	movwf	(toMarkesination@message2+1)^0,c
  5823  00FA' C047' F02C'        	movff	_numUsers,??_showLCD
  5824  00FE' 90D8               	bcf	status,0,c
  5825  0100' 3200'              	rrcf	??_showLCD^0,f,c
  5826  0102' 2800'              	incf	??_showLCD^0,w,c
  5827  0104' 0D11               	mullw	17
  5828  0106' CFF3 F024'         	movff	prodl,toMarkesination@limit
  5829  010A' 0E00               	movlw	0
  5830  010C' 6E00'              	movwf	toMarkesination@refresh^0,c
  5831  010E' EC00' F000'        	call	_toMarkesination	;wreg free
  5832  0112'                    l1104:
  5833                           
  5834                           ;TMenu.c: 198:     if (isPrinted == 1 && arrow == 0){
  5835  0112' 0400'              	decf	_isPrinted^0,w,c
  5836  0114' A4D8               	btfss	status,2,c
  5837  0116' 0012               	return	
  5838  0118' 5000'              	movf	_arrow^0,w,c
  5839  011A' A4D8               	btfss	status,2,c
  5840  011C' 0012               	return	
  5841                           
  5842                           ;TMenu.c: 199:         if (pos % 2 != 0 && posLCD == 0){
  5843  011E' A000'              	btfss	_pos^0,0,c
  5844  0120' D013               	goto	l1109
  5845  0122' 5000'              	movf	_posLCD^0,w,c
  5846  0124' A4D8               	btfss	status,2,c
  5847  0126' D010               	goto	l1109
  5848                           
  5849                           ;TMenu.c: 200:             showArrow(message2, 0, 1);
  5850  0128' C002' F016'        	movff	showLCD@message2,showArrow@message
  5851  012C' C003' F017'        	movff	showLCD@message2+1,showArrow@message+1
  5852  0130' 0E00               	movlw	0
  5853  0132' 6E00'              	movwf	showArrow@column^0,c
  5854  0134' 0E01               	movlw	1
  5855  0136' 6E00'              	movwf	showArrow@row^0,c
  5856  0138' EC00' F000'        	call	_showArrow	;wreg free
  5857                           
  5858                           ;TMenu.c: 201:             LcGotoXY(0,0);
  5859  013C' 0E00               	movlw	0
  5860  013E' 6E00'              	movwf	LcGotoXY@Fila^0,c
  5861  0140' 0E00               	movlw	0
  5862  0142' EC00' F000'        	call	_LcGotoXY
  5863                           
  5864                           ;TMenu.c: 202:         } else if (pos%2 != 0 && posLCD == 1){
  5865  0146' D03E               	goto	l1112
  5866  0148'                    l1109:
  5867  0148' A000'              	btfss	_pos^0,0,c
  5868  014A' D013               	goto	l1111
  5869  014C' 0400'              	decf	_posLCD^0,w,c
  5870  014E' A4D8               	btfss	status,2,c
  5871  0150' D010               	goto	l1111
  5872                           
  5873                           ;TMenu.c: 203:             showArrow(message2, 1, 1);
  5874  0152' C002' F016'        	movff	showLCD@message2,showArrow@message
  5875  0156' C003' F017'        	movff	showLCD@message2+1,showArrow@message+1
  5876  015A' 0E01               	movlw	1
  5877  015C' 6E00'              	movwf	showArrow@column^0,c
  5878  015E' 0E01               	movlw	1
  5879  0160' 6E00'              	movwf	showArrow@row^0,c
  5880  0162' EC00' F000'        	call	_showArrow	;wreg free
  5881                           
  5882                           ;TMenu.c: 204:             LcGotoXY(1,0);
  5883  0166' 0E00               	movlw	0
  5884  0168' 6E00'              	movwf	LcGotoXY@Fila^0,c
  5885  016A' 0E01               	movlw	1
  5886  016C' EC00' F000'        	call	_LcGotoXY
  5887                           
  5888                           ;TMenu.c: 205:         } else if (pos%2 == 0 && posLCD == 0) {
  5889  0170' D029               	goto	l1112
  5890  0172'                    l1111:
  5891  0172' B000'              	btfsc	_pos^0,0,c
  5892  0174' D013               	goto	l1113
  5893  0176' 5000'              	movf	_posLCD^0,w,c
  5894  0178' A4D8               	btfss	status,2,c
  5895  017A' D010               	goto	l1113
  5896                           
  5897                           ;TMenu.c: 206:             showArrow(message1, 0, 0);
  5898  017C' C000' F016'        	movff	showLCD@message1,showArrow@message
  5899  0180' C001' F017'        	movff	showLCD@message1+1,showArrow@message+1
  5900  0184' 0E00               	movlw	0
  5901  0186' 6E00'              	movwf	showArrow@column^0,c
  5902  0188' 0E00               	movlw	0
  5903  018A' 6E00'              	movwf	showArrow@row^0,c
  5904  018C' EC00' F000'        	call	_showArrow	;wreg free
  5905                           
  5906                           ;TMenu.c: 207:             LcGotoXY(0,1);
  5907  0190' 0E01               	movlw	1
  5908  0192' 6E00'              	movwf	LcGotoXY@Fila^0,c
  5909  0194' 0E00               	movlw	0
  5910  0196' EC00' F000'        	call	_LcGotoXY
  5911                           
  5912                           ;TMenu.c: 208:         } else if (pos%2 == 0 && posLCD == 1){
  5913  019A' D014               	goto	l1112
  5914  019C'                    l1113:
  5915  019C' B000'              	btfsc	_pos^0,0,c
  5916  019E' D012               	goto	l1112
  5917  01A0' 0400'              	decf	_posLCD^0,w,c
  5918  01A2' A4D8               	btfss	status,2,c
  5919  01A4' D00F               	goto	l1112
  5920                           
  5921                           ;TMenu.c: 209:             showArrow(message1, 1, 0);
  5922  01A6' C000' F016'        	movff	showLCD@message1,showArrow@message
  5923  01AA' C001' F017'        	movff	showLCD@message1+1,showArrow@message+1
  5924  01AE' 0E01               	movlw	1
  5925  01B0' 6E00'              	movwf	showArrow@column^0,c
  5926  01B2' 0E00               	movlw	0
  5927  01B4' 6E00'              	movwf	showArrow@row^0,c
  5928  01B6' EC00' F000'        	call	_showArrow	;wreg free
  5929                           
  5930                           ;TMenu.c: 210:             LcGotoXY(1,1);
  5931  01BA' 0E01               	movlw	1
  5932  01BC' 6E00'              	movwf	LcGotoXY@Fila^0,c
  5933  01BE' 0E01               	movlw	1
  5934  01C0' EC00' F000'        	call	_LcGotoXY
  5935  01C4'                    l1112:
  5936                           
  5937                           ;TMenu.c: 212:         if (posLCD < 3){
  5938  01C4' 0E03               	movlw	3
  5939  01C6' 6000'              	cpfslt	_posLCD^0,c
  5940  01C8' D00C               	goto	l6411
  5941                           
  5942                           ;TMenu.c: 213:             LcPutChar(ARROW[posLCD]);
  5943  01CA' 0E00'              	movlw	low _ARROW
  5944  01CC' 2400'              	addwf	_posLCD^0,w,c
  5945  01CE' 6EF6               	movwf	tblptrl,c
  5946  01D0' 6AF7               	clrf	tblptrh,c
  5947  01D2' 0E00'              	movlw	high _ARROW
  5948  01D4' 22F7               	addwfc	tblptrh,f,c
  5949  01D6'                    	if	0	;There are less than 3 active tblptr bytes
  5950  01D6'                    	endif
  5951  01D6' 0008               	tblrd		*
  5952  01D8' 50F5               	movf	tablat,w,c
  5953  01DA' EC00' F000'        	call	_LcPutChar
  5954                           
  5955                           ;TMenu.c: 214:             posLCD++;
  5956  01DE' 2A00'              	incf	_posLCD^0,f,c
  5957                           
  5958                           ;TMenu.c: 215:         } else {
  5959  01E0' 0012               	return	
  5960  01E2'                    l6411:
  5961                           
  5962                           ;TMenu.c: 216:             arrow = 1;
  5963  01E2' 0E01               	movlw	1
  5964  01E4' 6E00'              	movwf	_arrow^0,c
  5965  01E6' 0012               	return		;funcret
  5966  01E8'                    __end_of_showLCD:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _toMarkesination *****************
  5970 ;; Defined at:
  5971 ;;		line 120 in file "TMenu.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  message1        2   32[COMRAM] PTR unsigned char 
  5974 ;;		 -> SCORE(20), ENTER_NEWTIME(20), SHOW_TIME(20), STR_5(1), 
  5975 ;;		 -> STR_3(1), EDIT_NAME(20), ENTER_NEW_NAME(20), ENTER_NAME(20), 
  5976 ;;		 -> SELECT_USER(20), OPTION5(20), OPTION3(20), OPTION1(20), 
  5977 ;;		 -> users2(110), users1(110), 
  5978 ;;  message2        2   34[COMRAM] PTR unsigned char 
  5979 ;;		 -> INFO_GAME(20), TIME(20), STR_6(1), STR_4(1), 
  5980 ;;		 -> DELETE_USER(20), STR_2(1), STR_1(1), NEW_USER(20), 
  5981 ;;		 -> OPTION6(20), OPTION4(20), OPTION2(20), HIGH_SCORE(20), 
  5982 ;;		 -> time(5), users2(110), 
  5983 ;;  limit           1   36[COMRAM] unsigned char 
  5984 ;;  refresh         1   37[COMRAM] unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;		None
  5987 ;; Return value:  Size  Location     Type
  5988 ;;                  1    wreg      void 
  5989 ;; Registers used:
  5990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5991 ;; Tracked objects:
  5992 ;;		On entry : 0/1
  5993 ;;		On exit  : 0/0
  5994 ;;		Unchanged: 0/0
  5995 ;; Data sizes:     COMRAM   BANK0   BANK1
  5996 ;;      Params:         6       0       0
  5997 ;;      Locals:         0       0       0
  5998 ;;      Temps:          6       0       0
  5999 ;;      Totals:        12       0       0
  6000 ;;Total ram usage:       12 bytes
  6001 ;; Hardware stack levels used: 1
  6002 ;; Hardware stack levels required when called: 8
  6003 ;; This function calls:
  6004 ;;		_LcGotoXY
  6005 ;;		_LcPutChar
  6006 ;;		_TiGetTics
  6007 ;;		_TiResetTics
  6008 ;;		_convertScore
  6009 ;;		_printOptions
  6010 ;; This function is called by:
  6011 ;;		_showLCD
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text29
  6016  0000'                    __ptext29:
  6017                           	callstack 0
  6018  0000'                    _toMarkesination:
  6019                           	callstack 20
  6020                           
  6021                           ;TMenu.c: 121:     if (isPrinted == 0){
  6022                           
  6023                           ;incstack = 0
  6024  0000' 5000'              	movf	_isPrinted^0,w,c
  6025  0002' A4D8               	btfss	status,2,c
  6026  0004' D01A               	goto	l4899
  6027                           
  6028                           ;TMenu.c: 122:         convertScore(users1[0].score);
  6029  0006' 0101               	movlb	1	; () banked
  6030  0008' 5100'              	movf	(_users1+10)& (0+255),w,b
  6031  000A' EC00' F000'        	call	_convertScore
  6032                           
  6033                           ;TMenu.c: 123:         HIGH_SCORE[12] = hScore[0];
  6034  000E' C000' F00C'        	movff	_hScore,_HIGH_SCORE+12
  6035                           
  6036                           ;TMenu.c: 124:         HIGH_SCORE[13] = hScore[1];
  6037  0012' C001' F00D'        	movff	_hScore+1,_HIGH_SCORE+13
  6038                           
  6039                           ;TMenu.c: 125:         HIGH_SCORE[14] = hScore[2];
  6040  0016' C002' F00E'        	movff	_hScore+2,_HIGH_SCORE+14
  6041                           
  6042                           ;TMenu.c: 126:         printOptions(message1, message2);
  6043  001A' C020' F01C'        	movff	toMarkesination@message1,printOptions@message1
  6044  001E' C021' F01D'        	movff	toMarkesination@message1+1,printOptions@message1+1
  6045  0022' C022' F01E'        	movff	toMarkesination@message2,printOptions@message2
  6046  0026' C023' F01F'        	movff	toMarkesination@message2+1,printOptions@message2+1
  6047  002A' EC00' F000'        	call	_printOptions	;wreg free
  6048                           
  6049                           ;TMenu.c: 127:         if (isPrinted == 1){
  6050  002E' 0400'              	decf	_isPrinted^0,w,c
  6051  0030' A4D8               	btfss	status,2,c
  6052  0032' 0012               	return	
  6053                           
  6054                           ;TMenu.c: 128:             posMarkesine = refresh;
  6055  0034' C025' F021'        	movff	toMarkesination@refresh,_posMarkesine
  6056  0038' 0012               	return	
  6057  003A'                    l4899:
  6058                           
  6059                           ;TMenu.c: 131:         if (TiGetTics(timer) >= 63){
  6060  003A' 5000'              	movf	_timer@TMenu$F1145^0,w,c
  6061  003C' EC00' F000'        	call	_TiGetTics
  6062  0040' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  6063  0042' E104               	bnz	u4840
  6064  0044' 0E3F               	movlw	63
  6065  0046' 5C00'              	subwf	?_TiGetTics^0,w,c
  6066  0048' A0D8               	btfss	status,0,c
  6067  004A' 0012               	return	
  6068  004C'                    u4840:
  6069                           
  6070                           ;TMenu.c: 132:             if(posMarkesine < 16){
  6071  004C' 0E10               	movlw	16
  6072  004E' 6000'              	cpfslt	_posMarkesine^0,c
  6073  0050' D0FD               	goto	l4951
  6074                           
  6075                           ;TMenu.c: 133:                 if (subMenu == 3 || subMenu == 2){
  6076  0052' 0E03               	movlw	3
  6077  0054' 1800'              	xorwf	_subMenu^0,w,c
  6078  0056' B4D8               	btfsc	status,2,c
  6079  0058' D004               	goto	u4870
  6080  005A' 0E02               	movlw	2
  6081  005C' 1800'              	xorwf	_subMenu^0,w,c
  6082  005E' A4D8               	btfss	status,2,c
  6083  0060' D070               	goto	l1069
  6084  0062'                    u4870:
  6085                           
  6086                           ;TMenu.c: 134:                     LcGotoXY(posMarkesine, 0);
  6087  0062' 0E00               	movlw	0
  6088  0064' 6E00'              	movwf	LcGotoXY@Fila^0,c
  6089  0066' 5000'              	movf	_posMarkesine^0,w,c
  6090  0068' EC00' F000'        	call	_LcGotoXY
  6091                           
  6092                           ;TMenu.c: 135:                     if (message1[posMarkesine + sumand] != '\0' ) {
  6093  006C' 5000'              	movf	_posMarkesine^0,w,c
  6094  006E' 2400'              	addwf	toMarkesination@message1^0,w,c
  6095  0070' 6E00'              	movwf	??_toMarkesination^0,c
  6096  0072' 0E00               	movlw	0
  6097  0074' 2000'              	addwfc	(toMarkesination@message1+1)^0,w,c
  6098  0076' 6E00'              	movwf	(??_toMarkesination+1)^0,c
  6099  0078' 5000'              	movf	_sumand^0,w,c
  6100  007A' 2600'              	addwf	??_toMarkesination^0,f,c
  6101  007C' 0E00               	movlw	0
  6102  007E' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6103  0080' C026' FFF6         	movff	??_toMarkesination,tblptrl
  6104  0084' C027' FFF7         	movff	??_toMarkesination+1,tblptrh
  6105  0088' 6AF8               	clrf	tblptru,c
  6106  008A' 0EFF'              	movlw	(high __ramtop+-1)
  6107  008C' 64F7               	cpfsgt	tblptrh,c
  6108  008E' D003               	bra	u4887
  6109  0090' 0008               	tblrd		*
  6110  0092' 50F5               	movf	tablat,w,c
  6111  0094' D005               	bra	u4880
  6112  0096'                    u4887:
  6113  0096' CFF6 FFE9          	movff	tblptrl,fsr0l
  6114  009A' CFF7 FFEA          	movff	tblptrh,fsr0h
  6115  009E' 50EF               	movf	indf0,w,c
  6116  00A0'                    u4880:
  6117  00A0' 0900               	iorlw	0
  6118  00A2' B4D8               	btfsc	status,2,c
  6119  00A4' D04B               	goto	l4919
  6120                           
  6121                           ;TMenu.c: 136:                         if (subMenu == 3){
  6122  00A6' 0E03               	movlw	3
  6123  00A8' 1800'              	xorwf	_subMenu^0,w,c
  6124  00AA' A4D8               	btfss	status,2,c
  6125  00AC' D01D               	goto	l4915
  6126                           
  6127                           ;TMenu.c: 137:                             LcPutChar(message1[posMarkesine + sumand]);
  6128  00AE' 5000'              	movf	_posMarkesine^0,w,c
  6129  00B0' 2400'              	addwf	toMarkesination@message1^0,w,c
  6130  00B2' 6E00'              	movwf	??_toMarkesination^0,c
  6131  00B4' 0E00               	movlw	0
  6132  00B6' 2000'              	addwfc	(toMarkesination@message1+1)^0,w,c
  6133  00B8' 6E00'              	movwf	(??_toMarkesination+1)^0,c
  6134  00BA' 5000'              	movf	_sumand^0,w,c
  6135  00BC' 2600'              	addwf	??_toMarkesination^0,f,c
  6136  00BE' 0E00               	movlw	0
  6137  00C0' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6138  00C2' C026' FFF6         	movff	??_toMarkesination,tblptrl
  6139  00C6' C027' FFF7         	movff	??_toMarkesination+1,tblptrh
  6140  00CA' 6AF8               	clrf	tblptru,c
  6141  00CC' 0EFF'              	movlw	(high __ramtop+-1)
  6142  00CE' 64F7               	cpfsgt	tblptrh,c
  6143  00D0' D003               	bra	u4917
  6144  00D2' 0008               	tblrd		*
  6145  00D4' 50F5               	movf	tablat,w,c
  6146  00D6' D005               	bra	u4910
  6147  00D8'                    u4917:
  6148  00D8' CFF6 FFE9          	movff	tblptrl,fsr0l
  6149  00DC' CFF7 FFEA          	movff	tblptrh,fsr0h
  6150  00E0' 50EF               	movf	indf0,w,c
  6151  00E2'                    u4910:
  6152  00E2' EC00' F000'        	call	_LcPutChar
  6153                           
  6154                           ;TMenu.c: 138:                         } else if ((posMarkesine + sumand) <= 10){
  6155  00E6' D026               	goto	l1074
  6156  00E8'                    l4915:
  6157  00E8' 5000'              	movf	_sumand^0,w,c
  6158  00EA' C021' F026'        	movff	_posMarkesine,??_toMarkesination
  6159  00EE' 6A00'              	clrf	(??_toMarkesination+1)^0,c
  6160  00F0' 2600'              	addwf	??_toMarkesination^0,f,c
  6161  00F2' 0E00               	movlw	0
  6162  00F4' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6163  00F6' BE00'              	btfsc	(??_toMarkesination+1)^0,7,c
  6164  00F8' D006               	goto	u4920
  6165  00FA' 5000'              	movf	(??_toMarkesination+1)^0,w,c
  6166  00FC' E11B               	bnz	l1074
  6167  00FE' 0E0B               	movlw	11
  6168  0100' 5C00'              	subwf	??_toMarkesination^0,w,c
  6169  0102' B0D8               	btfsc	status,0,c
  6170  0104' D017               	goto	l1074
  6171  0106'                    u4920:
  6172                           
  6173                           ;TMenu.c: 139:                             LcPutChar(users1[times].name[posMarkesine + s
      +                          umand]);
  6174  0106' 5000'              	movf	_times^0,w,c
  6175  0108' 0D0B               	mullw	11
  6176  010A' 0E00'              	movlw	low _users1
  6177  010C' 6E00'              	movwf	??_toMarkesination^0,c
  6178  010E' 0E00'              	movlw	high _users1
  6179  0110' 6E00'              	movwf	(??_toMarkesination+1)^0,c
  6180  0112' 50F3               	movf	243,w,c
  6181  0114' 2600'              	addwf	??_toMarkesination^0,f,c
  6182  0116' 50F4               	movf	244,w,c
  6183  0118' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6184  011A' 5000'              	movf	_posMarkesine^0,w,c
  6185  011C' 2600'              	addwf	??_toMarkesination^0,f,c
  6186  011E' 0E00               	movlw	0
  6187  0120' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6188  0122' 5000'              	movf	_sumand^0,w,c
  6189  0124' 2400'              	addwf	??_toMarkesination^0,w,c
  6190  0126' 6ED9               	movwf	fsr2l,c
  6191  0128' 0E00               	movlw	0
  6192  012A' 2000'              	addwfc	(??_toMarkesination+1)^0,w,c
  6193  012C' 6EDA               	movwf	fsr2h,c
  6194  012E' 50DF               	movf	indf2,w,c
  6195  0130' EC00' F000'        	call	_LcPutChar
  6196  0134'                    l1074:
  6197                           
  6198                           ;TMenu.c: 141:                         LcPutChar(' ');
  6199  0134' 0E20               	movlw	32
  6200  0136' EC00' F000'        	call	_LcPutChar
  6201                           
  6202                           ;TMenu.c: 142:                     } else {
  6203  013A' D003               	goto	l1069
  6204  013C'                    l4919:
  6205                           
  6206                           ;TMenu.c: 143:                         LcPutChar(' ');
  6207  013C' 0E20               	movlw	32
  6208  013E' EC00' F000'        	call	_LcPutChar
  6209  0142'                    l1069:
  6210                           
  6211                           ;TMenu.c: 146:                 LcGotoXY(posMarkesine, 1);
  6212  0142' 0E01               	movlw	1
  6213  0144' 6E00'              	movwf	LcGotoXY@Fila^0,c
  6214  0146' 5000'              	movf	_posMarkesine^0,w,c
  6215  0148' EC00' F000'        	call	_LcGotoXY
  6216                           
  6217                           ;TMenu.c: 147:                 if (message2[posMarkesine + sumand] != '\0' && subMenu !=
      +                           2){
  6218  014C' 5000'              	movf	_posMarkesine^0,w,c
  6219  014E' 2400'              	addwf	toMarkesination@message2^0,w,c
  6220  0150' 6E00'              	movwf	??_toMarkesination^0,c
  6221  0152' 0E00               	movlw	0
  6222  0154' 2000'              	addwfc	(toMarkesination@message2+1)^0,w,c
  6223  0156' 6E00'              	movwf	(??_toMarkesination+1)^0,c
  6224  0158' 5000'              	movf	_sumand^0,w,c
  6225  015A' 2600'              	addwf	??_toMarkesination^0,f,c
  6226  015C' 0E00               	movlw	0
  6227  015E' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6228  0160' C026' FFF6         	movff	??_toMarkesination,tblptrl
  6229  0164' C027' FFF7         	movff	??_toMarkesination+1,tblptrh
  6230  0168' 6AF8               	clrf	tblptru,c
  6231  016A' 0EFF'              	movlw	(high __ramtop+-1)
  6232  016C' 64F7               	cpfsgt	tblptrh,c
  6233  016E' D003               	bra	u4937
  6234  0170' 0008               	tblrd		*
  6235  0172' 50F5               	movf	tablat,w,c
  6236  0174' D005               	bra	u4930
  6237  0176'                    u4937:
  6238  0176' CFF6 FFE9          	movff	tblptrl,fsr0l
  6239  017A' CFF7 FFEA          	movff	tblptrh,fsr0h
  6240  017E' 50EF               	movf	indf0,w,c
  6241  0180'                    u4930:
  6242  0180' 0900               	iorlw	0
  6243  0182' B4D8               	btfsc	status,2,c
  6244  0184' D024               	goto	l4929
  6245  0186' 0E02               	movlw	2
  6246  0188' 1800'              	xorwf	_subMenu^0,w,c
  6247  018A' B4D8               	btfsc	status,2,c
  6248  018C' D020               	goto	l4929
  6249                           
  6250                           ;TMenu.c: 148:                     LcPutChar(message2[posMarkesine + sumand]);
  6251  018E' 5000'              	movf	_posMarkesine^0,w,c
  6252  0190' 2400'              	addwf	toMarkesination@message2^0,w,c
  6253  0192' 6E00'              	movwf	??_toMarkesination^0,c
  6254  0194' 0E00               	movlw	0
  6255  0196' 2000'              	addwfc	(toMarkesination@message2+1)^0,w,c
  6256  0198' 6E00'              	movwf	(??_toMarkesination+1)^0,c
  6257  019A' 5000'              	movf	_sumand^0,w,c
  6258  019C' 2600'              	addwf	??_toMarkesination^0,f,c
  6259  019E' 0E00               	movlw	0
  6260  01A0' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6261  01A2' C026' FFF6         	movff	??_toMarkesination,tblptrl
  6262  01A6' C027' FFF7         	movff	??_toMarkesination+1,tblptrh
  6263  01AA' 6AF8               	clrf	tblptru,c
  6264  01AC' 0EFF'              	movlw	(high __ramtop+-1)
  6265  01AE' 64F7               	cpfsgt	tblptrh,c
  6266  01B0' D003               	bra	u4967
  6267  01B2' 0008               	tblrd		*
  6268  01B4' 50F5               	movf	tablat,w,c
  6269  01B6' D005               	bra	u4960
  6270  01B8'                    u4967:
  6271  01B8' CFF6 FFE9          	movff	tblptrl,fsr0l
  6272  01BC' CFF7 FFEA          	movff	tblptrh,fsr0h
  6273  01C0' 50EF               	movf	indf0,w,c
  6274  01C2'                    u4960:
  6275  01C2' EC00' F000'        	call	_LcPutChar
  6276                           
  6277                           ;TMenu.c: 149:                     LcPutChar(' ');
  6278  01C6' 0E20               	movlw	32
  6279  01C8' EC00' F000'        	call	_LcPutChar
  6280                           
  6281                           ;TMenu.c: 150:                 } else if (posMarkesine + sumand < 15 && subMenu == 2){
  6282  01CC' D03D               	goto	l4949
  6283  01CE'                    l4929:
  6284  01CE' 5000'              	movf	_sumand^0,w,c
  6285  01D0' C021' F026'        	movff	_posMarkesine,??_toMarkesination
  6286  01D4' 6A00'              	clrf	(??_toMarkesination+1)^0,c
  6287  01D6' 2600'              	addwf	??_toMarkesination^0,f,c
  6288  01D8' 0E00               	movlw	0
  6289  01DA' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6290  01DC' BE00'              	btfsc	(??_toMarkesination+1)^0,7,c
  6291  01DE' D006               	goto	u4970
  6292  01E0' 5000'              	movf	(??_toMarkesination+1)^0,w,c
  6293  01E2' E111               	bnz	l4935
  6294  01E4' 0E0F               	movlw	15
  6295  01E6' 5C00'              	subwf	??_toMarkesination^0,w,c
  6296  01E8' B0D8               	btfsc	status,0,c
  6297  01EA' D00D               	goto	l4935
  6298  01EC'                    u4970:
  6299  01EC' 0E02               	movlw	2
  6300  01EE' 1800'              	xorwf	_subMenu^0,w,c
  6301  01F0' A4D8               	btfss	status,2,c
  6302  01F2' D009               	goto	l4935
  6303                           
  6304                           ;TMenu.c: 151:                     LcPutChar(HIGH_SCORE[posMarkesine + sumand]);
  6305  01F4' 5000'              	movf	_posMarkesine^0,w,c
  6306  01F6' 0F00'              	addlw	low _HIGH_SCORE
  6307  01F8' 2400'              	addwf	_sumand^0,w,c
  6308  01FA' 6ED9               	movwf	fsr2l,c
  6309  01FC' 6ADA               	clrf	fsr2h,c
  6310  01FE' 50DF               	movf	indf2,w,c
  6311  0200' EC00' F000'        	call	_LcPutChar
  6312                           
  6313                           ;TMenu.c: 152:                 } else {
  6314  0204' D021               	goto	l4949
  6315  0206'                    l4935:
  6316                           
  6317                           ;TMenu.c: 153:                     LcPutChar(' ');
  6318  0206' 0E20               	movlw	32
  6319  0208' EC00' F000'        	call	_LcPutChar
  6320                           
  6321                           ;TMenu.c: 154:                     if(posMarkesine + sumand == 17){
  6322  020C' 5000'              	movf	_sumand^0,w,c
  6323  020E' C021' F026'        	movff	_posMarkesine,??_toMarkesination
  6324  0212' 6A00'              	clrf	(??_toMarkesination+1)^0,c
  6325  0214' 2600'              	addwf	??_toMarkesination^0,f,c
  6326  0216' 0E00               	movlw	0
  6327  0218' 2200'              	addwfc	(??_toMarkesination+1)^0,f,c
  6328  021A' 0E11               	movlw	17
  6329  021C' 1800'              	xorwf	??_toMarkesination^0,w,c
  6330  021E' 1000'              	iorwf	(??_toMarkesination+1)^0,w,c
  6331  0220' A4D8               	btfss	status,2,c
  6332  0222' D012               	goto	l4949
  6333                           
  6334                           ;TMenu.c: 155:                         times++;
  6335  0224' 2A00'              	incf	_times^0,f,c
  6336                           
  6337                           ;TMenu.c: 156:                         convertScore(users1[times].score);
  6338  0226' 5000'              	movf	_times^0,w,c
  6339  0228' 0D0B               	mullw	11
  6340  022A' 0E00'              	movlw	low (_users1+10)
  6341  022C' 24F3               	addwf	243,w,c
  6342  022E' 6ED9               	movwf	fsr2l,c
  6343  0230' 0E00'              	movlw	high (_users1+10)
  6344  0232' 20F4               	addwfc	prodh,w,c
  6345  0234' 6EDA               	movwf	fsr2h,c
  6346  0236' 50DF               	movf	indf2,w,c
  6347  0238' EC00' F000'        	call	_convertScore
  6348                           
  6349                           ;TMenu.c: 157:                         HIGH_SCORE[12] = hScore[0];
  6350  023C' C000' F00C'        	movff	_hScore,_HIGH_SCORE+12
  6351                           
  6352                           ;TMenu.c: 158:                         HIGH_SCORE[13] = hScore[1];
  6353  0240' C001' F00D'        	movff	_hScore+1,_HIGH_SCORE+13
  6354                           
  6355                           ;TMenu.c: 159:                         HIGH_SCORE[14] = hScore[2];
  6356  0244' C002' F00E'        	movff	_hScore+2,_HIGH_SCORE+14
  6357  0248'                    l4949:
  6358                           
  6359                           ;TMenu.c: 162:                 posMarkesine++;
  6360  0248' 2A00'              	incf	_posMarkesine^0,f,c
  6361                           
  6362                           ;TMenu.c: 163:             } else {
  6363  024A' D01B               	goto	l4959
  6364  024C'                    l4951:
  6365                           
  6366                           ;TMenu.c: 164:                 if (sumand == (limit - 16)){
  6367  024C' 5000'              	movf	_sumand^0,w,c
  6368  024E' 6E00'              	movwf	??_toMarkesination^0,c
  6369  0250' 6A00'              	clrf	(??_toMarkesination+1)^0,c
  6370  0252' 0EF0               	movlw	240
  6371  0254' 6E00'              	movwf	(??_toMarkesination+2)^0,c
  6372  0256' 0EFF               	movlw	255
  6373  0258' 6E00'              	movwf	(??_toMarkesination+3)^0,c
  6374  025A' 5000'              	movf	toMarkesination@limit^0,w,c
  6375  025C' 6E00'              	movwf	(??_toMarkesination+4)^0,c
  6376  025E' 6A00'              	clrf	(??_toMarkesination+5)^0,c
  6377  0260' 5000'              	movf	(??_toMarkesination+2)^0,w,c
  6378  0262' 2600'              	addwf	(??_toMarkesination+4)^0,f,c
  6379  0264' 5000'              	movf	(??_toMarkesination+3)^0,w,c
  6380  0266' 2200'              	addwfc	(??_toMarkesination+5)^0,f,c
  6381  0268' 5000'              	movf	??_toMarkesination^0,w,c
  6382  026A' 1800'              	xorwf	(??_toMarkesination+4)^0,w,c
  6383  026C' E107               	bnz	l4955
  6384  026E' 5000'              	movf	(??_toMarkesination+1)^0,w,c
  6385  0270' 1800'              	xorwf	(??_toMarkesination+5)^0,w,c
  6386  0272' A4D8               	btfss	status,2,c
  6387  0274' D003               	goto	l4955
  6388                           
  6389                           ;TMenu.c: 165:                     sumand = 0;
  6390  0276' 0E00               	movlw	0
  6391  0278' 6E00'              	movwf	_sumand^0,c
  6392                           
  6393                           ;TMenu.c: 166:                 } else {
  6394  027A' D001               	goto	l4957
  6395  027C'                    l4955:
  6396                           
  6397                           ;TMenu.c: 167:                     sumand++;
  6398  027C' 2A00'              	incf	_sumand^0,f,c
  6399  027E'                    l4957:
  6400                           
  6401                           ;TMenu.c: 169:                 posMarkesine = refresh;
  6402  027E' C025' F021'        	movff	toMarkesination@refresh,_posMarkesine
  6403  0282'                    l4959:
  6404                           
  6405                           ;TMenu.c: 171:             TiResetTics(timer);
  6406  0282' 5000'              	movf	_timer@TMenu$F1145^0,w,c
  6407  0284' EC00' F000'        	call	_TiResetTics
  6408  0288' 0012               	return		;funcret
  6409  028A'                    __end_of_toMarkesination:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _printOptions *****************
  6413 ;; Defined at:
  6414 ;;		line 79 in file "TMenu.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  message1        2   28[COMRAM] PTR unsigned char 
  6417 ;;		 -> SCORE(20), ENTER_NEWTIME(20), SHOW_TIME(20), STR_5(1), 
  6418 ;;		 -> STR_3(1), EDIT_NAME(20), ENTER_NEW_NAME(20), ENTER_NAME(20), 
  6419 ;;		 -> SELECT_USER(20), OPTION5(20), OPTION3(20), OPTION1(20), 
  6420 ;;		 -> users2(110), users1(110), 
  6421 ;;  message2        2   30[COMRAM] PTR unsigned char 
  6422 ;;		 -> INFO_GAME(20), TIME(20), STR_6(1), STR_4(1), 
  6423 ;;		 -> DELETE_USER(20), STR_2(1), STR_1(1), NEW_USER(20), 
  6424 ;;		 -> OPTION6(20), OPTION4(20), OPTION2(20), HIGH_SCORE(20), 
  6425 ;;		 -> time(5), users2(110), 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/1
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1
  6437 ;;      Params:         4       0       0
  6438 ;;      Locals:         0       0       0
  6439 ;;      Temps:          0       0       0
  6440 ;;      Totals:         4       0       0
  6441 ;;Total ram usage:        4 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; Hardware stack levels required when called: 7
  6444 ;; This function calls:
  6445 ;;		_LcGotoXY
  6446 ;;		_LcPutChar
  6447 ;;		_printLetter
  6448 ;;		_showMessage
  6449 ;; This function is called by:
  6450 ;;		_toMarkesination
  6451 ;;		_showLCD
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text30
  6456  0000'                    __ptext30:
  6457                           	callstack 0
  6458  0000'                    _printOptions:
  6459                           	callstack 20
  6460                           
  6461                           ;TMenu.c: 80:     if (posLCD < 16){
  6462                           
  6463                           ;incstack = 0
  6464  0000' 0E10               	movlw	16
  6465  0002' 6000'              	cpfslt	_posLCD^0,c
  6466  0004' D042               	goto	l4613
  6467                           
  6468                           ;TMenu.c: 81:         if (isPrinted == 0){
  6469  0006' 5000'              	movf	_isPrinted^0,w,c
  6470  0008' A4D8               	btfss	status,2,c
  6471  000A' D046               	goto	l4617
  6472                           
  6473                           ;TMenu.c: 82:             LcGotoXY(posLCD, 0);
  6474  000C' 0E00               	movlw	0
  6475  000E' 6E00'              	movwf	LcGotoXY@Fila^0,c
  6476  0010' 5000'              	movf	_posLCD^0,w,c
  6477  0012' EC00' F000'        	call	_LcGotoXY
  6478                           
  6479                           ;TMenu.c: 83:             if ((playing == 1 && posLCD > 9) || ((subMenu == 2 || subMenu 
      +                          == 3) && posLCD > 10)){
  6480  0016' 0400'              	decf	_playing^0,w,c
  6481  0018' A4D8               	btfss	status,2,c
  6482  001A' D003               	goto	u4120
  6483  001C' 0E0A               	movlw	10
  6484  001E' 6000'              	cpfslt	_posLCD^0,c
  6485  0020' D00B               	goto	u4150
  6486  0022'                    u4120:
  6487  0022' 0E02               	movlw	2
  6488  0024' 1800'              	xorwf	_subMenu^0,w,c
  6489  0026' B4D8               	btfsc	status,2,c
  6490  0028' D004               	goto	u4140
  6491  002A' 0E03               	movlw	3
  6492  002C' 1800'              	xorwf	_subMenu^0,w,c
  6493  002E' A4D8               	btfss	status,2,c
  6494  0030' D007               	goto	l4595
  6495  0032'                    u4140:
  6496  0032' 0E0A               	movlw	10
  6497  0034' 6400'              	cpfsgt	_posLCD^0,c
  6498  0036' D004               	goto	l4595
  6499  0038'                    u4150:
  6500                           
  6501                           ;TMenu.c: 84:                 LcPutChar(' ');
  6502  0038' 0E20               	movlw	32
  6503  003A' EC00' F000'        	call	_LcPutChar
  6504                           
  6505                           ;TMenu.c: 85:             } else {
  6506  003E' D006               	goto	l4597
  6507  0040'                    l4595:
  6508                           
  6509                           ;TMenu.c: 86:                 showMessage(message1);
  6510  0040' C01C' F016'        	movff	printOptions@message1,showMessage@message
  6511  0044' C01D' F017'        	movff	printOptions@message1+1,showMessage@message+1
  6512  0048' EC00' F000'        	call	_showMessage	;wreg free
  6513  004C'                    l4597:
  6514                           
  6515                           ;TMenu.c: 88:             LcGotoXY(posLCD, 1);
  6516  004C' 0E01               	movlw	1
  6517  004E' 6E00'              	movwf	LcGotoXY@Fila^0,c
  6518  0050' 5000'              	movf	_posLCD^0,w,c
  6519  0052' EC00' F000'        	call	_LcGotoXY
  6520                           
  6521                           ;TMenu.c: 89:             if ((subMenu == 5 && posLCD > 5 - 1) || (subMenu == 3 && posLC
      +                          D > 10)){
  6522  0056' 0E05               	movlw	5
  6523  0058' 1800'              	xorwf	_subMenu^0,w,c
  6524  005A' A4D8               	btfss	status,2,c
  6525  005C' D003               	goto	u4170
  6526  005E' 0E05               	movlw	5
  6527  0060' 6000'              	cpfslt	_posLCD^0,c
  6528  0062' D007               	goto	u4190
  6529  0064'                    u4170:
  6530  0064' 0E03               	movlw	3
  6531  0066' 1800'              	xorwf	_subMenu^0,w,c
  6532  0068' A4D8               	btfss	status,2,c
  6533  006A' D007               	goto	l4609
  6534  006C' 0E0A               	movlw	10
  6535  006E' 6400'              	cpfsgt	_posLCD^0,c
  6536  0070' D004               	goto	l4609
  6537  0072'                    u4190:
  6538                           
  6539                           ;TMenu.c: 90:                 LcPutChar(' ');
  6540  0072' 0E20               	movlw	32
  6541  0074' EC00' F000'        	call	_LcPutChar
  6542                           
  6543                           ;TMenu.c: 91:             } else {
  6544  0078' D006               	goto	l4611
  6545  007A'                    l4609:
  6546                           
  6547                           ;TMenu.c: 92:                 showMessage(message2);
  6548  007A' C01E' F016'        	movff	printOptions@message2,showMessage@message
  6549  007E' C01F' F017'        	movff	printOptions@message2+1,showMessage@message+1
  6550  0082' EC00' F000'        	call	_showMessage	;wreg free
  6551  0086'                    l4611:
  6552                           
  6553                           ;TMenu.c: 94:             posLCD++;
  6554  0086' 2A00'              	incf	_posLCD^0,f,c
  6555  0088' D007               	goto	l4617
  6556  008A'                    l4613:
  6557  008A' 5000'              	movf	_isPrinted^0,w,c
  6558  008C' A4D8               	btfss	status,2,c
  6559  008E' D004               	goto	l4617
  6560                           
  6561                           ;TMenu.c: 97:         isPrinted = 1;
  6562  0090' 0E01               	movlw	1
  6563  0092' 6E00'              	movwf	_isPrinted^0,c
  6564                           
  6565                           ;TMenu.c: 98:         posLCD = 0;
  6566  0094' 0E00               	movlw	0
  6567  0096' 6E00'              	movwf	_posLCD^0,c
  6568  0098'                    l4617:
  6569                           
  6570                           ;TMenu.c: 101:     if (showAM == 1 && playing == 1){
  6571  0098' 0400'              	decf	_showAM^0,w,c
  6572  009A' A4D8               	btfss	status,2,c
  6573  009C' D014               	goto	l4629
  6574  009E' 0400'              	decf	_playing^0,w,c
  6575  00A0' A4D8               	btfss	status,2,c
  6576  00A2' D011               	goto	l4629
  6577                           
  6578                           ;TMenu.c: 102:         if (posLCDAux < 5){
  6579  00A4' 0E05               	movlw	5
  6580  00A6' 6000'              	cpfslt	_posLCDAux^0,c
  6581  00A8' D00C               	goto	l4627
  6582                           
  6583                           ;TMenu.c: 103:             printLetter(timeAM[posLCDAux], posLCDAux + 2);
  6584  00AA' 5000'              	movf	_posLCDAux^0,w,c
  6585  00AC' 0F02               	addlw	2
  6586  00AE' 6E00'              	movwf	printLetter@numChars^0,c
  6587  00B0' 5000'              	movf	_posLCDAux^0,w,c
  6588  00B2' 0F00'              	addlw	low _timeAM
  6589  00B4' 6ED9               	movwf	fsr2l,c
  6590  00B6' 6ADA               	clrf	fsr2h,c
  6591  00B8' 50DF               	movf	indf2,w,c
  6592  00BA' EC00' F000'        	call	_printLetter
  6593                           
  6594                           ;TMenu.c: 104:             posLCDAux++;
  6595  00BE' 2A00'              	incf	_posLCDAux^0,f,c
  6596                           
  6597                           ;TMenu.c: 105:         } else {
  6598  00C0' D002               	goto	l4629
  6599  00C2'                    l4627:
  6600                           
  6601                           ;TMenu.c: 106:             posLCDAux = 0;
  6602  00C2' 0E00               	movlw	0
  6603  00C4' 6E00'              	movwf	_posLCDAux^0,c
  6604  00C6'                    l4629:
  6605                           
  6606                           ;TMenu.c: 110:     if (playing == 1){
  6607  00C6' 0400'              	decf	_playing^0,w,c
  6608  00C8' A4D8               	btfss	status,2,c
  6609  00CA' 0012               	return	
  6610                           
  6611                           ;TMenu.c: 111:         if (posScore < 3){
  6612  00CC' 0E03               	movlw	3
  6613  00CE' 6000'              	cpfslt	_posScore^0,c
  6614  00D0' D00C               	goto	l4637
  6615                           
  6616                           ;TMenu.c: 112:             printLetter(points[posScore], posScore + 12);
  6617  00D2' 5000'              	movf	_posScore^0,w,c
  6618  00D4' 0F0C               	addlw	12
  6619  00D6' 6E00'              	movwf	printLetter@numChars^0,c
  6620  00D8' 5000'              	movf	_posScore^0,w,c
  6621  00DA' 0F00'              	addlw	low _points
  6622  00DC' 6ED9               	movwf	fsr2l,c
  6623  00DE' 6ADA               	clrf	fsr2h,c
  6624  00E0' 50DF               	movf	indf2,w,c
  6625  00E2' EC00' F000'        	call	_printLetter
  6626                           
  6627                           ;TMenu.c: 113:             posScore++;
  6628  00E6' 2A00'              	incf	_posScore^0,f,c
  6629                           
  6630                           ;TMenu.c: 114:         } else {
  6631  00E8' 0012               	return	
  6632  00EA'                    l4637:
  6633                           
  6634                           ;TMenu.c: 115:             posScore = 0;
  6635  00EA' 0E00               	movlw	0
  6636  00EC' 6E00'              	movwf	_posScore^0,c
  6637  00EE' 0012               	return		;funcret
  6638  00F0'                    __end_of_printOptions:
  6639                           	callstack 0
  6640                           
  6641 ;; *************** function _showMessage *****************
  6642 ;; Defined at:
  6643 ;;		line 63 in file "TMenu.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  message         2   22[COMRAM] PTR unsigned char 
  6646 ;;		 -> SCORE(20), INFO_GAME(20), TIME(20), ENTER_NEWTIME(20), 
  6647 ;;		 -> SHOW_TIME(20), STR_6(1), STR_5(1), STR_4(1), 
  6648 ;;		 -> STR_3(1), DELETE_USER(20), EDIT_NAME(20), STR_2(1), 
  6649 ;;		 -> ENTER_NEW_NAME(20), STR_1(1), ENTER_NAME(20), NEW_USER(20), 
  6650 ;;		 -> SELECT_USER(20), OPTION6(20), OPTION5(20), OPTION4(20), 
  6651 ;;		 -> OPTION3(20), OPTION2(20), OPTION1(20), HIGH_SCORE(20), 
  6652 ;;		 -> time(5), users2(110), users1(110), 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;		None
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  1    wreg      void 
  6657 ;; Registers used:
  6658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/1
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1
  6664 ;;      Params:         2       0       0
  6665 ;;      Locals:         0       0       0
  6666 ;;      Temps:          4       0       0
  6667 ;;      Totals:         6       0       0
  6668 ;;Total ram usage:        6 bytes
  6669 ;; Hardware stack levels used: 1
  6670 ;; Hardware stack levels required when called: 6
  6671 ;; This function calls:
  6672 ;;		_LcPutChar
  6673 ;; This function is called by:
  6674 ;;		_printOptions
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           	psect	text31
  6679  0000'                    __ptext31:
  6680                           	callstack 0
  6681  0000'                    _showMessage:
  6682                           	callstack 20
  6683                           
  6684                           ;TMenu.c: 64:     if (((subMenu == 1 && mGame == 1) || subMenu == 4) && playing == 0){
  6685                           
  6686                           ;incstack = 0
  6687  0000' 0400'              	decf	_subMenu^0,w,c
  6688  0002' A4D8               	btfss	status,2,c
  6689  0004' D003               	goto	u3740
  6690  0006' 0400'              	decf	_mGame^0,w,c
  6691  0008' B4D8               	btfsc	status,2,c
  6692  000A' D004               	goto	u3750
  6693  000C'                    u3740:
  6694  000C' 0E04               	movlw	4
  6695  000E' 1800'              	xorwf	_subMenu^0,w,c
  6696  0010' A4D8               	btfss	status,2,c
  6697  0012' D05C               	goto	l4363
  6698  0014'                    u3750:
  6699  0014' 5000'              	movf	_playing^0,w,c
  6700  0016' A4D8               	btfss	status,2,c
  6701  0018' D059               	goto	l4363
  6702                           
  6703                           ;TMenu.c: 65:         if (message[posLCD - 3] != '\0' && (posLCD - 3) < 10){
  6704  001A' 0EFD               	movlw	253
  6705  001C' 6E00'              	movwf	??_showMessage^0,c
  6706  001E' 0EFF               	movlw	255
  6707  0020' 6E00'              	movwf	(??_showMessage+1)^0,c
  6708  0022' 5000'              	movf	_posLCD^0,w,c
  6709  0024' 2400'              	addwf	showMessage@message^0,w,c
  6710  0026' 6E00'              	movwf	(??_showMessage+2)^0,c
  6711  0028' 0E00               	movlw	0
  6712  002A' 2000'              	addwfc	(showMessage@message+1)^0,w,c
  6713  002C' 6E00'              	movwf	(??_showMessage+3)^0,c
  6714  002E' 5000'              	movf	??_showMessage^0,w,c
  6715  0030' 2600'              	addwf	(??_showMessage+2)^0,f,c
  6716  0032' 5000'              	movf	(??_showMessage+1)^0,w,c
  6717  0034' 2200'              	addwfc	(??_showMessage+3)^0,f,c
  6718  0036' C01A' FFF6         	movff	??_showMessage+2,tblptrl
  6719  003A' C01B' FFF7         	movff	??_showMessage+3,tblptrh
  6720  003E' 6AF8               	clrf	tblptru,c
  6721  0040' 0EFF'              	movlw	(high __ramtop+-1)
  6722  0042' 64F7               	cpfsgt	tblptrh,c
  6723  0044' D003               	bra	u3777
  6724  0046' 0008               	tblrd		*
  6725  0048' 50F5               	movf	tablat,w,c
  6726  004A' D005               	bra	u3770
  6727  004C'                    u3777:
  6728  004C' CFF6 FFE1          	movff	tblptrl,fsr1l
  6729  0050' CFF7 FFE2          	movff	tblptrh,fsr1h
  6730  0054' 50E7               	movf	indf1,w,c
  6731  0056'                    u3770:
  6732  0056' 0900               	iorlw	0
  6733  0058' B4D8               	btfsc	status,2,c
  6734  005A' D034               	goto	l4361
  6735  005C' 0EFD               	movlw	253
  6736  005E' 6E00'              	movwf	??_showMessage^0,c
  6737  0060' 0EFF               	movlw	255
  6738  0062' 6E00'              	movwf	(??_showMessage+1)^0,c
  6739  0064' 5000'              	movf	_posLCD^0,w,c
  6740  0066' 6E00'              	movwf	(??_showMessage+2)^0,c
  6741  0068' 6A00'              	clrf	(??_showMessage+3)^0,c
  6742  006A' 5000'              	movf	??_showMessage^0,w,c
  6743  006C' 2600'              	addwf	(??_showMessage+2)^0,f,c
  6744  006E' 5000'              	movf	(??_showMessage+1)^0,w,c
  6745  0070' 2200'              	addwfc	(??_showMessage+3)^0,f,c
  6746  0072' BE00'              	btfsc	(??_showMessage+3)^0,7,c
  6747  0074' D006               	goto	u3790
  6748  0076' 5000'              	movf	(??_showMessage+3)^0,w,c
  6749  0078' E125               	bnz	l4361
  6750  007A' 0E0A               	movlw	10
  6751  007C' 5C00'              	subwf	(??_showMessage+2)^0,w,c
  6752  007E' B0D8               	btfsc	status,0,c
  6753  0080' D021               	goto	l4361
  6754  0082'                    u3790:
  6755                           
  6756                           ;TMenu.c: 66:             LcPutChar(message[posLCD - 3]);
  6757  0082' 0EFD               	movlw	253
  6758  0084' 6E00'              	movwf	??_showMessage^0,c
  6759  0086' 0EFF               	movlw	255
  6760  0088' 6E00'              	movwf	(??_showMessage+1)^0,c
  6761  008A' 5000'              	movf	_posLCD^0,w,c
  6762  008C' 2400'              	addwf	showMessage@message^0,w,c
  6763  008E' 6E00'              	movwf	(??_showMessage+2)^0,c
  6764  0090' 0E00               	movlw	0
  6765  0092' 2000'              	addwfc	(showMessage@message+1)^0,w,c
  6766  0094' 6E00'              	movwf	(??_showMessage+3)^0,c
  6767  0096' 5000'              	movf	??_showMessage^0,w,c
  6768  0098' 2600'              	addwf	(??_showMessage+2)^0,f,c
  6769  009A' 5000'              	movf	(??_showMessage+1)^0,w,c
  6770  009C' 2200'              	addwfc	(??_showMessage+3)^0,f,c
  6771  009E' C01A' FFF6         	movff	??_showMessage+2,tblptrl
  6772  00A2' C01B' FFF7         	movff	??_showMessage+3,tblptrh
  6773  00A6' 6AF8               	clrf	tblptru,c
  6774  00A8' 0EFF'              	movlw	(high __ramtop+-1)
  6775  00AA' 64F7               	cpfsgt	tblptrh,c
  6776  00AC' D003               	bra	u3807
  6777  00AE' 0008               	tblrd		*
  6778  00B0' 50F5               	movf	tablat,w,c
  6779  00B2' D005               	bra	u3800
  6780  00B4'                    u3807:
  6781  00B4' CFF6 FFE1          	movff	tblptrl,fsr1l
  6782  00B8' CFF7 FFE2          	movff	tblptrh,fsr1h
  6783  00BC' 50E7               	movf	indf1,w,c
  6784  00BE'                    u3800:
  6785  00BE' EC00' F000'        	call	_LcPutChar
  6786                           
  6787                           ;TMenu.c: 67:         } else {
  6788  00C2' 0012               	return	
  6789  00C4'                    l4361:
  6790                           
  6791                           ;TMenu.c: 68:             LcPutChar(' ');
  6792  00C4' 0E20               	movlw	32
  6793  00C6' EC00' F000'        	call	_LcPutChar
  6794  00CA' 0012               	return	
  6795  00CC'                    l4363:
  6796                           
  6797                           ;TMenu.c: 71:         if (message[posLCD] != '\0'){
  6798  00CC' 5000'              	movf	_posLCD^0,w,c
  6799  00CE' 2400'              	addwf	showMessage@message^0,w,c
  6800  00D0' 6E00'              	movwf	??_showMessage^0,c
  6801  00D2' 0E00               	movlw	0
  6802  00D4' 2000'              	addwfc	(showMessage@message+1)^0,w,c
  6803  00D6' 6E00'              	movwf	(??_showMessage+1)^0,c
  6804  00D8' C018' FFF6         	movff	??_showMessage,tblptrl
  6805  00DC' C019' FFF7         	movff	??_showMessage+1,tblptrh
  6806  00E0' 6AF8               	clrf	tblptru,c
  6807  00E2' 0EFF'              	movlw	(high __ramtop+-1)
  6808  00E4' 64F7               	cpfsgt	tblptrh,c
  6809  00E6' D003               	bra	u3817
  6810  00E8' 0008               	tblrd		*
  6811  00EA' 50F5               	movf	tablat,w,c
  6812  00EC' D005               	bra	u3810
  6813  00EE'                    u3817:
  6814  00EE' CFF6 FFE1          	movff	tblptrl,fsr1l
  6815  00F2' CFF7 FFE2          	movff	tblptrh,fsr1h
  6816  00F6' 50E7               	movf	indf1,w,c
  6817  00F8'                    u3810:
  6818  00F8' 0900               	iorlw	0
  6819  00FA' B4D8               	btfsc	status,2,c
  6820  00FC' D019               	goto	l4367
  6821                           
  6822                           ;TMenu.c: 72:             LcPutChar(message[posLCD]);
  6823  00FE' 5000'              	movf	_posLCD^0,w,c
  6824  0100' 2400'              	addwf	showMessage@message^0,w,c
  6825  0102' 6E00'              	movwf	??_showMessage^0,c
  6826  0104' 0E00               	movlw	0
  6827  0106' 2000'              	addwfc	(showMessage@message+1)^0,w,c
  6828  0108' 6E00'              	movwf	(??_showMessage+1)^0,c
  6829  010A' C018' FFF6         	movff	??_showMessage,tblptrl
  6830  010E' C019' FFF7         	movff	??_showMessage+1,tblptrh
  6831  0112' 6AF8               	clrf	tblptru,c
  6832  0114' 0EFF'              	movlw	(high __ramtop+-1)
  6833  0116' 64F7               	cpfsgt	tblptrh,c
  6834  0118' D003               	bra	u3837
  6835  011A' 0008               	tblrd		*
  6836  011C' 50F5               	movf	tablat,w,c
  6837  011E' D005               	bra	u3830
  6838  0120'                    u3837:
  6839  0120' CFF6 FFE1          	movff	tblptrl,fsr1l
  6840  0124' CFF7 FFE2          	movff	tblptrh,fsr1h
  6841  0128' 50E7               	movf	indf1,w,c
  6842  012A'                    u3830:
  6843  012A' EC00' F000'        	call	_LcPutChar
  6844                           
  6845                           ;TMenu.c: 73:         } else {
  6846  012E' 0012               	return	
  6847  0130'                    l4367:
  6848                           
  6849                           ;TMenu.c: 74:             LcPutChar(' ');
  6850  0130' 0E20               	movlw	32
  6851  0132' EC00' F000'        	call	_LcPutChar
  6852  0136' 0012               	return		;funcret
  6853  0138'                    __end_of_showMessage:
  6854                           	callstack 0
  6855                           
  6856 ;; *************** function _printLetter *****************
  6857 ;; Defined at:
  6858 ;;		line 54 in file "TMenu.c"
  6859 ;; Parameters:    Size  Location     Type
  6860 ;;  key             1    wreg     unsigned char 
  6861 ;;  numChars        1   22[COMRAM] unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  key             1   23[COMRAM] unsigned char 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1
  6873 ;;      Params:         1       0       0
  6874 ;;      Locals:         1       0       0
  6875 ;;      Temps:          0       0       0
  6876 ;;      Totals:         2       0       0
  6877 ;;Total ram usage:        2 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 6
  6880 ;; This function calls:
  6881 ;;		_LcGotoXY
  6882 ;;		_LcPutChar
  6883 ;; This function is called by:
  6884 ;;		_actionsSubMenus
  6885 ;;		_printOptions
  6886 ;;		_motorMenu
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text32
  6891  0000'                    __ptext32:
  6892                           	callstack 0
  6893  0000'                    _printLetter:
  6894                           	callstack 20
  6895                           
  6896                           ;incstack = 0
  6897                           ;printLetter@key stored from wreg
  6898  0000' 6E00'              	movwf	printLetter@key^0,c
  6899                           
  6900                           ;TMenu.c: 55:     if (playing == 2 && second == 0){
  6901  0002' 0E02               	movlw	2
  6902  0004' 1800'              	xorwf	_playing^0,w,c
  6903  0006' A4D8               	btfss	status,2,c
  6904  0008' D009               	goto	l4339
  6905  000A' 5000'              	movf	_second^0,w,c
  6906  000C' A4D8               	btfss	status,2,c
  6907  000E' D006               	goto	l4339
  6908                           
  6909                           ;TMenu.c: 56:         LcGotoXY(numChars, 0);
  6910  0010' 0E00               	movlw	0
  6911  0012' 6E00'              	movwf	LcGotoXY@Fila^0,c
  6912  0014' 5000'              	movf	printLetter@numChars^0,w,c
  6913  0016' EC00' F000'        	call	_LcGotoXY
  6914                           
  6915                           ;TMenu.c: 57:     } else {
  6916  001A' D005               	goto	l1020
  6917  001C'                    l4339:
  6918                           
  6919                           ;TMenu.c: 58:         LcGotoXY(numChars, 1);
  6920  001C' 0E01               	movlw	1
  6921  001E' 6E00'              	movwf	LcGotoXY@Fila^0,c
  6922  0020' 5000'              	movf	printLetter@numChars^0,w,c
  6923  0022' EC00' F000'        	call	_LcGotoXY
  6924  0026'                    l1020:
  6925                           
  6926                           ;TMenu.c: 60:     LcPutChar(key);
  6927  0026' 5000'              	movf	printLetter@key^0,w,c
  6928  0028' EC00' F000'        	call	_LcPutChar
  6929  002C' 0012               	return		;funcret
  6930  002E'                    __end_of_printLetter:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function _convertScore *****************
  6934 ;; Defined at:
  6935 ;;		line 48 in file "TSIO.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  score           1    wreg     unsigned char 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  score           1    9[COMRAM] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1
  6949 ;;      Params:         0       0       0
  6950 ;;      Locals:         1       0       0
  6951 ;;      Temps:          0       0       0
  6952 ;;      Totals:         1       0       0
  6953 ;;Total ram usage:        1 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 3
  6956 ;; This function calls:
  6957 ;;		___lbdiv
  6958 ;; This function is called by:
  6959 ;;		_toMarkesination
  6960 ;;		_motorRX
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text33
  6965  0000'                    __ptext33:
  6966                           	callstack 0
  6967  0000'                    _convertScore:
  6968                           	callstack 26
  6969                           
  6970                           ;incstack = 0
  6971                           ;convertScore@score stored from wreg
  6972  0000' 6E00'              	movwf	convertScore@score^0,c
  6973                           
  6974                           ;TSIO.c: 49:     if (score < 10){
  6975  0002' 0E0A               	movlw	10
  6976  0004' 6000'              	cpfslt	convertScore@score^0,c
  6977  0006' D007               	goto	l1241
  6978                           
  6979                           ;TSIO.c: 50:         if (score == 5){
  6980  0008' 0E05               	movlw	5
  6981  000A' 1800'              	xorwf	convertScore@score^0,w,c
  6982  000C' A4D8               	btfss	status,2,c
  6983  000E' 0012               	return	
  6984                           
  6985                           ;TSIO.c: 51:             hScore[2] = '5';
  6986  0010' 0E35               	movlw	53
  6987  0012' 6E00'              	movwf	(_hScore+2)^0,c
  6988  0014' 0012               	return	
  6989  0016'                    l1241:
  6990                           
  6991                           ;TSIO.c: 54:         if (score % 2 != 0){
  6992  0016' A000'              	btfss	convertScore@score^0,0,c
  6993  0018' D002               	goto	l4647
  6994                           
  6995                           ;TSIO.c: 55:             hScore[2] = '5';
  6996  001A' 0E35               	movlw	53
  6997  001C' 6E00'              	movwf	(_hScore+2)^0,c
  6998  001E'                    l4647:
  6999                           
  7000                           ;TSIO.c: 57:         if (score < 100){
  7001  001E' 0E64               	movlw	100
  7002  0020' 6000'              	cpfslt	convertScore@score^0,c
  7003  0022' D00A               	goto	l4653
  7004                           
  7005                           ;TSIO.c: 58:             hScore[0] = '0';
  7006  0024' 0E30               	movlw	48
  7007  0026' 6E00'              	movwf	_hScore^0,c
  7008                           
  7009                           ;TSIO.c: 59:             hScore[1] = 48 + (score / 10);
  7010  0028' 0E0A               	movlw	10
  7011  002A' 6E00'              	movwf	___lbdiv@divisor^0,c
  7012  002C' 5000'              	movf	convertScore@score^0,w,c
  7013  002E' EC00' F000'        	call	___lbdiv
  7014  0032' 0F30               	addlw	48
  7015  0034' 6E00'              	movwf	(_hScore+1)^0,c
  7016                           
  7017                           ;TSIO.c: 60:         } else if (score < 200){
  7018  0036' 0012               	return	
  7019  0038'                    l4653:
  7020  0038' 0EC8               	movlw	200
  7021  003A' 6000'              	cpfslt	convertScore@score^0,c
  7022  003C' D00A               	goto	l4659
  7023                           
  7024                           ;TSIO.c: 61:             hScore[1] = 48 + ((score / 10) - 10);
  7025  003E' 0E0A               	movlw	10
  7026  0040' 6E00'              	movwf	___lbdiv@divisor^0,c
  7027  0042' 5000'              	movf	convertScore@score^0,w,c
  7028  0044' EC00' F000'        	call	___lbdiv
  7029  0048' 0F26               	addlw	38
  7030  004A' 6E00'              	movwf	(_hScore+1)^0,c
  7031                           
  7032                           ;TSIO.c: 62:             hScore[0] = '1';
  7033  004C' 0E31               	movlw	49
  7034  004E' 6E00'              	movwf	_hScore^0,c
  7035                           
  7036                           ;TSIO.c: 63:         } else {
  7037  0050' 0012               	return	
  7038  0052'                    l4659:
  7039                           
  7040                           ;TSIO.c: 64:             hScore[0] = '2';
  7041  0052' 0E32               	movlw	50
  7042  0054' 6E00'              	movwf	_hScore^0,c
  7043  0056' 0012               	return		;funcret
  7044  0058'                    __end_of_convertScore:
  7045                           	callstack 0
  7046                           
  7047 ;; *************** function ___lbdiv *****************
  7048 ;; Defined at:
  7049 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lbdiv.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  dividend        1    wreg     unsigned char 
  7052 ;;  divisor         1    5[COMRAM] unsigned char 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  dividend        1    6[COMRAM] unsigned char 
  7055 ;;  quotient        1    8[COMRAM] unsigned char 
  7056 ;;  counter         1    7[COMRAM] unsigned char 
  7057 ;; Return value:  Size  Location     Type
  7058 ;;                  1    wreg      unsigned char 
  7059 ;; Registers used:
  7060 ;;		wreg, status,2, status,0
  7061 ;; Tracked objects:
  7062 ;;		On entry : 0/0
  7063 ;;		On exit  : 0/0
  7064 ;;		Unchanged: 0/0
  7065 ;; Data sizes:     COMRAM   BANK0   BANK1
  7066 ;;      Params:         1       0       0
  7067 ;;      Locals:         3       0       0
  7068 ;;      Temps:          0       0       0
  7069 ;;      Totals:         4       0       0
  7070 ;;Total ram usage:        4 bytes
  7071 ;; Hardware stack levels used: 1
  7072 ;; Hardware stack levels required when called: 2
  7073 ;; This function calls:
  7074 ;;		Nothing
  7075 ;; This function is called by:
  7076 ;;		_convertScore
  7077 ;; This function uses a non-reentrant model
  7078 ;;
  7079                           
  7080                           	psect	text34
  7081  0000'                    __ptext34:
  7082                           	callstack 0
  7083  0000'                    ___lbdiv:
  7084                           	callstack 26
  7085                           
  7086                           ;incstack = 0
  7087                           ;___lbdiv@dividend stored from wreg
  7088  0000' 6E00'              	movwf	___lbdiv@dividend^0,c
  7089  0002' 0E00               	movlw	0
  7090  0004' 6E00'              	movwf	___lbdiv@quotient^0,c
  7091  0006' 5000'              	movf	___lbdiv@divisor^0,w,c
  7092  0008' B4D8               	btfsc	status,2,c
  7093  000A' D015               	goto	l4427
  7094  000C' 0E01               	movlw	1
  7095  000E' 6E00'              	movwf	___lbdiv@counter^0,c
  7096  0010' D003               	goto	l4415
  7097  0012'                    l4411:
  7098  0012' 90D8               	bcf	status,0,c
  7099  0014' 3600'              	rlcf	___lbdiv@divisor^0,f,c
  7100  0016' 2A00'              	incf	___lbdiv@counter^0,f,c
  7101  0018'                    l4415:
  7102  0018' AE00'              	btfss	___lbdiv@divisor^0,7,c
  7103  001A' D7FB               	goto	l4411
  7104  001C'                    u3880:
  7105  001C' 90D8               	bcf	status,0,c
  7106  001E' 3600'              	rlcf	___lbdiv@quotient^0,f,c
  7107  0020' 5000'              	movf	___lbdiv@divisor^0,w,c
  7108  0022' 5C00'              	subwf	___lbdiv@dividend^0,w,c
  7109  0024' A0D8               	btfss	status,0,c
  7110  0026' D003               	goto	l4423
  7111  0028' 5000'              	movf	___lbdiv@divisor^0,w,c
  7112  002A' 5E00'              	subwf	___lbdiv@dividend^0,f,c
  7113  002C' 8000'              	bsf	___lbdiv@quotient^0,0,c
  7114  002E'                    l4423:
  7115  002E' 90D8               	bcf	status,0,c
  7116  0030' 3200'              	rrcf	___lbdiv@divisor^0,f,c
  7117  0032' 2E00'              	decfsz	___lbdiv@counter^0,f,c
  7118  0034' D7F3               	goto	u3880
  7119  0036'                    l4427:
  7120  0036' 5000'              	movf	___lbdiv@quotient^0,w,c
  7121  0038' 0012               	return		;funcret
  7122  003A'                    __end_of___lbdiv:
  7123                           	callstack 0
  7124                           
  7125 ;; *************** function _showArrow *****************
  7126 ;; Defined at:
  7127 ;;		line 176 in file "TMenu.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  message         2   22[COMRAM] PTR unsigned char 
  7130 ;;		 -> SCORE(20), INFO_GAME(20), TIME(20), ENTER_NEWTIME(20), 
  7131 ;;		 -> SHOW_TIME(20), STR_6(1), STR_5(1), STR_4(1), 
  7132 ;;		 -> STR_3(1), DELETE_USER(20), EDIT_NAME(20), STR_2(1), 
  7133 ;;		 -> ENTER_NEW_NAME(20), STR_1(1), ENTER_NAME(20), NEW_USER(20), 
  7134 ;;		 -> SELECT_USER(20), OPTION6(20), OPTION5(20), OPTION4(20), 
  7135 ;;		 -> OPTION3(20), OPTION2(20), OPTION1(20), HIGH_SCORE(20), 
  7136 ;;		 -> time(5), users2(110), users1(110), 
  7137 ;;  column          1   24[COMRAM] unsigned char 
  7138 ;;  row             1   25[COMRAM] unsigned char 
  7139 ;; Auto vars:     Size  Location     Type
  7140 ;;		None
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  1    wreg      void 
  7143 ;; Registers used:
  7144 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/1
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMRAM   BANK0   BANK1
  7150 ;;      Params:         4       0       0
  7151 ;;      Locals:         0       0       0
  7152 ;;      Temps:          2       0       0
  7153 ;;      Totals:         6       0       0
  7154 ;;Total ram usage:        6 bytes
  7155 ;; Hardware stack levels used: 1
  7156 ;; Hardware stack levels required when called: 6
  7157 ;; This function calls:
  7158 ;;		_LcGotoXY
  7159 ;;		_LcPutChar
  7160 ;; This function is called by:
  7161 ;;		_showLCD
  7162 ;; This function uses a non-reentrant model
  7163 ;;
  7164                           
  7165                           	psect	text35
  7166  0000'                    __ptext35:
  7167                           	callstack 0
  7168  0000'                    _showArrow:
  7169                           	callstack 22
  7170                           
  7171                           ;TMenu.c: 177:     if ((subMenu == 1 && mGame == 1) || subMenu == 4){
  7172                           
  7173                           ;incstack = 0
  7174  0000' 0400'              	decf	_subMenu^0,w,c
  7175  0002' A4D8               	btfss	status,2,c
  7176  0004' D003               	goto	u5020
  7177  0006' 0400'              	decf	_mGame^0,w,c
  7178  0008' B4D8               	btfsc	status,2,c
  7179  000A' D004               	goto	u5030
  7180  000C'                    u5020:
  7181  000C' 0E04               	movlw	4
  7182  000E' 1800'              	xorwf	_subMenu^0,w,c
  7183  0010' A4D8               	btfss	status,2,c
  7184  0012' D011               	goto	l4969
  7185  0014'                    u5030:
  7186                           
  7187                           ;TMenu.c: 178:         LcGotoXY(posLCD, 0);
  7188  0014' 0E00               	movlw	0
  7189  0016' 6E00'              	movwf	LcGotoXY@Fila^0,c
  7190  0018' 5000'              	movf	_posLCD^0,w,c
  7191  001A' EC00' F000'        	call	_LcGotoXY
  7192                           
  7193                           ;TMenu.c: 179:         LcPutChar(' ');
  7194  001E' 0E20               	movlw	32
  7195  0020' EC00' F000'        	call	_LcPutChar
  7196                           
  7197                           ;TMenu.c: 180:         LcGotoXY(posLCD, 1);
  7198  0024' 0E01               	movlw	1
  7199  0026' 6E00'              	movwf	LcGotoXY@Fila^0,c
  7200  0028' 5000'              	movf	_posLCD^0,w,c
  7201  002A' EC00' F000'        	call	_LcGotoXY
  7202                           
  7203                           ;TMenu.c: 181:         LcPutChar(' ');
  7204  002E' 0E20               	movlw	32
  7205  0030' EC00' F000'        	call	_LcPutChar
  7206                           
  7207                           ;TMenu.c: 182:     } else {
  7208  0034' 0012               	return	
  7209  0036'                    l4969:
  7210                           
  7211                           ;TMenu.c: 183:         LcGotoXY(column,row);
  7212  0036' C019' F00D'        	movff	showArrow@row,LcGotoXY@Fila
  7213  003A' 5000'              	movf	showArrow@column^0,w,c
  7214  003C' EC00' F000'        	call	_LcGotoXY
  7215                           
  7216                           ;TMenu.c: 184:         LcPutChar(message[posLCD]);
  7217  0040' 5000'              	movf	_posLCD^0,w,c
  7218  0042' 2400'              	addwf	showArrow@message^0,w,c
  7219  0044' 6E00'              	movwf	??_showArrow^0,c
  7220  0046' 0E00               	movlw	0
  7221  0048' 2000'              	addwfc	(showArrow@message+1)^0,w,c
  7222  004A' 6E00'              	movwf	(??_showArrow+1)^0,c
  7223  004C' C01A' FFF6         	movff	??_showArrow,tblptrl
  7224  0050' C01B' FFF7         	movff	??_showArrow+1,tblptrh
  7225  0054' 6AF8               	clrf	tblptru,c
  7226  0056' 0EFF'              	movlw	(high __ramtop+-1)
  7227  0058' 64F7               	cpfsgt	tblptrh,c
  7228  005A' D003               	bra	u5047
  7229  005C' 0008               	tblrd		*
  7230  005E' 50F5               	movf	tablat,w,c
  7231  0060' D005               	bra	u5040
  7232  0062'                    u5047:
  7233  0062' CFF6 FFE9          	movff	tblptrl,fsr0l
  7234  0066' CFF7 FFEA          	movff	tblptrh,fsr0h
  7235  006A' 50EF               	movf	indf0,w,c
  7236  006C'                    u5040:
  7237  006C' EC00' F000'        	call	_LcPutChar
  7238  0070' 0012               	return		;funcret
  7239  0072'                    __end_of_showArrow:
  7240                           	callstack 0
  7241                           
  7242 ;; *************** function _LcPutChar *****************
  7243 ;; Defined at:
  7244 ;;		line 145 in file "LcTLCD.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  c               1    wreg     unsigned char 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  c               1   21[COMRAM] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      void 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/1
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1
  7258 ;;      Params:         0       0       0
  7259 ;;      Locals:         1       0       0
  7260 ;;      Temps:          0       0       0
  7261 ;;      Totals:         1       0       0
  7262 ;;Total ram usage:        1 bytes
  7263 ;; Hardware stack levels used: 1
  7264 ;; Hardware stack levels required when called: 5
  7265 ;; This function calls:
  7266 ;;		_CantaData
  7267 ;;		_LcGotoXY
  7268 ;;		_WaitForBusy
  7269 ;; This function is called by:
  7270 ;;		_printLetter
  7271 ;;		_showMessage
  7272 ;;		_printOptions
  7273 ;;		_toMarkesination
  7274 ;;		_showArrow
  7275 ;;		_showLCD
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text36
  7280  0000'                    __ptext36:
  7281                           	callstack 0
  7282  0000'                    _LcPutChar:
  7283                           	callstack 20
  7284                           
  7285                           ;incstack = 0
  7286                           ;LcPutChar@c stored from wreg
  7287  0000' 6E00'              	movwf	LcPutChar@c^0,c
  7288                           
  7289                           ;LcTLCD.c: 154:  WaitForBusy(); CantaData(c);
  7290  0002' EC00' F000'        	call	_WaitForBusy	;wreg free
  7291  0006' 5000'              	movf	LcPutChar@c^0,w,c
  7292  0008' EC00' F000'        	call	_CantaData
  7293                           
  7294                           ;LcTLCD.c: 156:  ++ColumnaAct;
  7295  000C' 2A00'              	incf	_ColumnaAct^0,f,c
  7296                           
  7297                           ;LcTLCD.c: 157:  if (Files == 3) {
  7298  000E' 0E03               	movlw	3
  7299  0010' 1800'              	xorwf	_Files^0,w,c
  7300  0012' A4D8               	btfss	status,2,c
  7301  0014' D011               	goto	l4269
  7302                           
  7303                           ;LcTLCD.c: 158:   if (ColumnaAct >= 20) {
  7304  0016' 0E13               	movlw	19
  7305  0018' 6400'              	cpfsgt	_ColumnaAct^0,c
  7306  001A' 0012               	return	
  7307                           
  7308                           ;LcTLCD.c: 159:    ColumnaAct = 0;
  7309  001C' 0E00               	movlw	0
  7310  001E' 6E00'              	movwf	_ColumnaAct^0,c
  7311                           
  7312                           ;LcTLCD.c: 160:    if (++FilaAct >= 4) FilaAct = 0;
  7313  0020' 2A00'              	incf	_FilaAct^0,f,c
  7314  0022' 0E03               	movlw	3
  7315  0024' 6400'              	cpfsgt	_FilaAct^0,c
  7316  0026' D002               	goto	l4267
  7317  0028' 0E00               	movlw	0
  7318  002A' 6E00'              	movwf	_FilaAct^0,c
  7319  002C'                    l4267:
  7320                           
  7321                           ;LcTLCD.c: 161:    LcGotoXY(ColumnaAct, FilaAct);
  7322  002C' C031' F00D'        	movff	_FilaAct,LcGotoXY@Fila
  7323  0030' 5000'              	movf	_ColumnaAct^0,w,c
  7324  0032' EC00' F000'        	call	_LcGotoXY
  7325  0036' 0012               	return	
  7326  0038'                    l4269:
  7327                           
  7328                           ;LcTLCD.c: 164:  if (Files == 2) {
  7329  0038' 0E02               	movlw	2
  7330  003A' 1800'              	xorwf	_Files^0,w,c
  7331  003C' A4D8               	btfss	status,2,c
  7332  003E' D011               	goto	l4281
  7333                           
  7334                           ;LcTLCD.c: 165:   if (ColumnaAct >= 40) {
  7335  0040' 0E27               	movlw	39
  7336  0042' 6400'              	cpfsgt	_ColumnaAct^0,c
  7337  0044' 0012               	return	
  7338                           
  7339                           ;LcTLCD.c: 166:    ColumnaAct = 0;
  7340  0046' 0E00               	movlw	0
  7341  0048' 6E00'              	movwf	_ColumnaAct^0,c
  7342                           
  7343                           ;LcTLCD.c: 167:    if (++FilaAct >= 2) FilaAct = 0;
  7344  004A' 2A00'              	incf	_FilaAct^0,f,c
  7345  004C' 0E01               	movlw	1
  7346  004E' 6400'              	cpfsgt	_FilaAct^0,c
  7347  0050' D002               	goto	l4279
  7348  0052' 0E00               	movlw	0
  7349  0054' 6E00'              	movwf	_FilaAct^0,c
  7350  0056'                    l4279:
  7351                           
  7352                           ;LcTLCD.c: 168:    LcGotoXY(ColumnaAct, FilaAct);
  7353  0056' C031' F00D'        	movff	_FilaAct,LcGotoXY@Fila
  7354  005A' 5000'              	movf	_ColumnaAct^0,w,c
  7355  005C' EC00' F000'        	call	_LcGotoXY
  7356  0060' 0012               	return	
  7357  0062'                    l4281:
  7358                           
  7359                           ;LcTLCD.c: 171:  if (FilaAct == 1) {
  7360  0062' 0400'              	decf	_FilaAct^0,w,c
  7361  0064' A4D8               	btfss	status,2,c
  7362  0066' 0012               	return	
  7363                           
  7364                           ;LcTLCD.c: 172:   if (ColumnaAct >= 40) ColumnaAct = 0;
  7365  0068' 0E27               	movlw	39
  7366  006A' 6400'              	cpfsgt	_ColumnaAct^0,c
  7367  006C' D002               	goto	l4287
  7368  006E' 0E00               	movlw	0
  7369  0070' 6E00'              	movwf	_ColumnaAct^0,c
  7370  0072'                    l4287:
  7371                           
  7372                           ;LcTLCD.c: 173:   LcGotoXY(ColumnaAct, FilaAct);
  7373  0072' C031' F00D'        	movff	_FilaAct,LcGotoXY@Fila
  7374  0076' 5000'              	movf	_ColumnaAct^0,w,c
  7375  0078' EC00' F000'        	call	_LcGotoXY
  7376  007C' 0012               	return		;funcret
  7377  007E'                    __end_of_LcPutChar:
  7378                           	callstack 0
  7379                           
  7380 ;; *************** function _LcGotoXY *****************
  7381 ;; Defined at:
  7382 ;;		line 118 in file "LcTLCD.c"
  7383 ;; Parameters:    Size  Location     Type
  7384 ;;  Columna         1    wreg     unsigned char 
  7385 ;;  Fila            1   13[COMRAM] unsigned char 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  Columna         1   20[COMRAM] unsigned char 
  7388 ;;  Fisica          2   18[COMRAM] int 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/1
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1
  7398 ;;      Params:         1       0       0
  7399 ;;      Locals:         5       0       0
  7400 ;;      Temps:          2       0       0
  7401 ;;      Totals:         8       0       0
  7402 ;;Total ram usage:        8 bytes
  7403 ;; Hardware stack levels used: 1
  7404 ;; Hardware stack levels required when called: 4
  7405 ;; This function calls:
  7406 ;;		_CantaIR
  7407 ;;		_WaitForBusy
  7408 ;; This function is called by:
  7409 ;;		_LcPutChar
  7410 ;;		_printLetter
  7411 ;;		_printOptions
  7412 ;;		_toMarkesination
  7413 ;;		_showArrow
  7414 ;;		_showLCD
  7415 ;; This function uses a non-reentrant model
  7416 ;;
  7417                           
  7418                           	psect	text37
  7419  0000'                    __ptext37:
  7420                           	callstack 0
  7421  0000'                    _LcGotoXY:
  7422                           	callstack 20
  7423                           
  7424                           ;incstack = 0
  7425                           ;LcGotoXY@Columna stored from wreg
  7426  0000' 6E00'              	movwf	LcGotoXY@Columna^0,c
  7427                           
  7428                           ;LcTLCD.c: 122:  int Fisica;;LcTLCD.c: 124:  switch (Files) {
  7429  0002' D036               	goto	l4205
  7430  0004'                    l4183:
  7431                           
  7432                           ;LcTLCD.c: 126:    Fisica = Columna + (!Fila ? 0 : 0x40); break;
  7433  0004' 5000'              	movf	LcGotoXY@Fila^0,w,c
  7434  0006' B4D8               	btfsc	status,2,c
  7435  0008' D004               	goto	l4187
  7436  000A' 0E00               	movlw	0
  7437  000C' 6E00'              	movwf	(_LcGotoXY$837+1)^0,c
  7438  000E' 0E40               	movlw	64
  7439  0010' D003               	goto	L5
  7440  0012'                    l4187:
  7441  0012' 0E00               	movlw	0
  7442  0014' 6E00'              	movwf	(_LcGotoXY$837+1)^0,c
  7443  0016' 0E00               	movlw	0
  7444  0018'                    L5:
  7445  0018' 6E00'              	movwf	_LcGotoXY$837^0,c
  7446  001A' 5000'              	movf	LcGotoXY@Columna^0,w,c
  7447  001C' 2400'              	addwf	_LcGotoXY$837^0,w,c
  7448  001E' 6E00'              	movwf	LcGotoXY@Fisica^0,c
  7449  0020' 0E00               	movlw	0
  7450  0022' 2000'              	addwfc	(_LcGotoXY$837+1)^0,w,c
  7451  0024' 6E00'              	movwf	(LcGotoXY@Fisica+1)^0,c
  7452  0026' D036               	goto	l4207
  7453  0028'                    l609:
  7454                           
  7455                           ;LcTLCD.c: 128:    Fisica = Columna;
  7456  0028' C014' F012'        	movff	LcGotoXY@Columna,LcGotoXY@Fisica
  7457  002C' 6A00'              	clrf	(LcGotoXY@Fisica+1)^0,c
  7458                           
  7459                           ;LcTLCD.c: 129:    if (Fila == 1) Fisica += 0x40; else
  7460  002E' 0400'              	decf	LcGotoXY@Fila^0,w,c
  7461  0030' A4D8               	btfss	status,2,c
  7462  0032' D002               	goto	l4195
  7463  0034' 0E40               	movlw	64
  7464  0036' D005               	goto	L6
  7465  0038'                    l4195:
  7466                           
  7467                           ;LcTLCD.c: 130:    if (Fila == 2) Fisica += Columnes; else
  7468  0038' 0E02               	movlw	2
  7469  003A' 1800'              	xorwf	LcGotoXY@Fila^0,w,c
  7470  003C' A4D8               	btfss	status,2,c
  7471  003E' D004               	goto	l4199
  7472  0040' 5000'              	movf	_Columnes^0,w,c
  7473  0042'                    L6:
  7474  0042' 2600'              	addwf	LcGotoXY@Fisica^0,f,c
  7475  0044' 0E00               	movlw	0
  7476  0046' D00E               	goto	L7
  7477  0048'                    l4199:
  7478                           
  7479                           ;LcTLCD.c: 131:    if (Fila == 3) Fisica += 0x40+Columnes;
  7480  0048' 0E03               	movlw	3
  7481  004A' 1800'              	xorwf	LcGotoXY@Fila^0,w,c
  7482  004C' A4D8               	btfss	status,2,c
  7483  004E' D022               	goto	l4207
  7484  0050' 5000'              	movf	_Columnes^0,w,c
  7485  0052' 6E00'              	movwf	??_LcGotoXY^0,c
  7486  0054' 6A00'              	clrf	(??_LcGotoXY+1)^0,c
  7487  0056' 0E40               	movlw	64
  7488  0058' 2600'              	addwf	??_LcGotoXY^0,f,c
  7489  005A' 0E00               	movlw	0
  7490  005C' 2200'              	addwfc	(??_LcGotoXY+1)^0,f,c
  7491  005E' 5000'              	movf	??_LcGotoXY^0,w,c
  7492  0060' 2600'              	addwf	LcGotoXY@Fisica^0,f,c
  7493  0062' 5000'              	movf	(??_LcGotoXY+1)^0,w,c
  7494  0064'                    L7:
  7495  0064' 2200'              	addwfc	(LcGotoXY@Fisica+1)^0,f,c
  7496                           
  7497                           ;LcTLCD.c: 132:    break;
  7498  0066' D016               	goto	l4207
  7499  0068'                    l616:
  7500                           
  7501                           ;LcTLCD.c: 135:    Fisica = Columna; break;
  7502  0068' C014' F012'        	movff	LcGotoXY@Columna,LcGotoXY@Fisica
  7503  006C' 6A00'              	clrf	(LcGotoXY@Fisica+1)^0,c
  7504  006E' D012               	goto	l4207
  7505  0070'                    l4205:
  7506  0070' 5000'              	movf	_Files^0,w,c
  7507  0072' 6E00'              	movwf	??_LcGotoXY^0,c
  7508  0074' 6A00'              	clrf	(??_LcGotoXY+1)^0,c
  7509                           
  7510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7511                           ; Switch size 1, requested type "simple"
  7512                           ; Number of cases is 1, Range of values is 0 to 0
  7513                           ; switch strategies available:
  7514                           ; Name         Instructions Cycles
  7515                           ; simple_byte            4     3 (average)
  7516                           ;	Chosen strategy is simple_byte
  7517  0076' 5000'              	movf	(??_LcGotoXY+1)^0,w,c
  7518  0078' 0A00               	xorlw	0	; case 0
  7519  007A' A4D8               	btfss	status,2,c
  7520  007C' D7F5               	goto	l616
  7521                           
  7522                           ; Switch size 1, requested type "simple"
  7523                           ; Number of cases is 3, Range of values is 1 to 4
  7524                           ; switch strategies available:
  7525                           ; Name         Instructions Cycles
  7526                           ; simple_byte           10     6 (average)
  7527                           ;	Chosen strategy is simple_byte
  7528  007E' 5000'              	movf	??_LcGotoXY^0,w,c
  7529  0080' 0A01               	xorlw	1	; case 1
  7530  0082' B4D8               	btfsc	status,2,c
  7531  0084' D7F1               	goto	l616
  7532  0086' 0A03               	xorlw	3	; case 2
  7533  0088' B4D8               	btfsc	status,2,c
  7534  008A' D7BC               	goto	l4183
  7535  008C' 0A06               	xorlw	6	; case 4
  7536  008E' B4D8               	btfsc	status,2,c
  7537  0090' D7CB               	goto	l609
  7538  0092' D7EA               	goto	l616
  7539  0094'                    l4207:
  7540                           
  7541                           ;LcTLCD.c: 138:  WaitForBusy();
  7542  0094' EC00' F000'        	call	_WaitForBusy	;wreg free
  7543                           
  7544                           ;LcTLCD.c: 139:  CantaIR(0x80 | Fisica);
  7545  0098' 5000'              	movf	LcGotoXY@Fisica^0,w,c
  7546  009A' 0980               	iorlw	128
  7547  009C' EC00' F000'        	call	_CantaIR
  7548                           
  7549                           ;LcTLCD.c: 141:  FilaAct = Fila;
  7550  00A0' C00D' F031'        	movff	LcGotoXY@Fila,_FilaAct
  7551                           
  7552                           ;LcTLCD.c: 142:  ColumnaAct = Columna;
  7553  00A4' C014' F030'        	movff	LcGotoXY@Columna,_ColumnaAct
  7554  00A8' 0012               	return		;funcret
  7555  00AA'                    __end_of_LcGotoXY:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _CantaData *****************
  7559 ;; Defined at:
  7560 ;;		line 220 in file "LcTLCD.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  Data            1    wreg     unsigned char 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  Data            1    7[COMRAM] unsigned char 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, status,2, status,0, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/1
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1
  7574 ;;      Params:         0       0       0
  7575 ;;      Locals:         1       0       0
  7576 ;;      Temps:          0       0       0
  7577 ;;      Totals:         1       0       0
  7578 ;;Total ram usage:        1 bytes
  7579 ;; Hardware stack levels used: 1
  7580 ;; Hardware stack levels required when called: 3
  7581 ;; This function calls:
  7582 ;;		_CantaPartAlta
  7583 ;;		_CantaPartBaixa
  7584 ;; This function is called by:
  7585 ;;		_LcPutChar
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text38
  7590  0000'                    __ptext38:
  7591                           	callstack 0
  7592  0000'                    _CantaData:
  7593                           	callstack 21
  7594                           
  7595                           ;incstack = 0
  7596                           ;CantaData@Data stored from wreg
  7597  0000' 6E00'              	movwf	CantaData@Data^0,c
  7598                           
  7599                           ;LcTLCD.c: 221:  (TRISCbits.RC0 = TRISCbits.RC1 = TRISCbits.RC2 = TRISCbits.RC3 = 0);
  7600  0002' 9694               	bcf	148,3,c	;volatile
  7601  0004' 9494               	bcf	148,2,c	;volatile
  7602  0006' 9294               	bcf	148,1,c	;volatile
  7603  0008' 9094               	bcf	148,0,c	;volatile
  7604                           
  7605                           ;LcTLCD.c: 222:  (LATBbits.LATB3 = 1);
  7606  000A' 868A               	bsf	138,3,c	;volatile
  7607                           
  7608                           ;LcTLCD.c: 223:  (LATBbits.LATB4 = 0);
  7609  000C' 988A               	bcf	138,4,c	;volatile
  7610                           
  7611                           ;LcTLCD.c: 224:  (LATBbits.LATB5 = 1);
  7612  000E' 8A8A               	bsf	138,5,c	;volatile
  7613                           
  7614                           ;LcTLCD.c: 225:  CantaPartAlta(Data);
  7615  0010' 5000'              	movf	CantaData@Data^0,w,c
  7616  0012' EC00' F000'        	call	_CantaPartAlta
  7617                           
  7618                           ;LcTLCD.c: 226:  (LATBbits.LATB5 = 1);
  7619  0016' 8A8A               	bsf	138,5,c	;volatile
  7620                           
  7621                           ;LcTLCD.c: 227:  (LATBbits.LATB5 = 0);
  7622  0018' 9A8A               	bcf	138,5,c	;volatile
  7623                           
  7624                           ;LcTLCD.c: 228:  (LATBbits.LATB5 = 0);
  7625  001A' 9A8A               	bcf	138,5,c	;volatile
  7626                           
  7627                           ;LcTLCD.c: 229:  (LATBbits.LATB5 = 1);
  7628  001C' 8A8A               	bsf	138,5,c	;volatile
  7629                           
  7630                           ;LcTLCD.c: 230:  CantaPartBaixa(Data);
  7631  001E' 5000'              	movf	CantaData@Data^0,w,c
  7632  0020' EC00' F000'        	call	_CantaPartBaixa
  7633                           
  7634                           ;LcTLCD.c: 231:  (LATBbits.LATB5 = 1);
  7635  0024' 8A8A               	bsf	138,5,c	;volatile
  7636                           
  7637                           ;LcTLCD.c: 232:  (LATBbits.LATB5 = 0);
  7638  0026' 9A8A               	bcf	138,5,c	;volatile
  7639                           
  7640                           ;LcTLCD.c: 233:  (TRISCbits.RC0 = TRISCbits.RC1 = TRISCbits.RC2 = TRISCbits.RC3 = 1);
  7641  0028' 8694               	bsf	148,3,c	;volatile
  7642  002A' 8494               	bsf	148,2,c	;volatile
  7643  002C' 8294               	bsf	148,1,c	;volatile
  7644  002E' 8094               	bsf	148,0,c	;volatile
  7645  0030' 0012               	return		;funcret
  7646  0032'                    __end_of_CantaData:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _motorHora *****************
  7650 ;; Defined at:
  7651 ;;		line 45 in file "THora.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1
  7665 ;;      Params:         0       0       0
  7666 ;;      Locals:         0       0       0
  7667 ;;      Temps:          2       0       0
  7668 ;;      Totals:         2       0       0
  7669 ;;Total ram usage:        2 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 6
  7672 ;; This function calls:
  7673 ;;		_TiGetTics
  7674 ;;		_TiResetTics
  7675 ;;		_manageHora
  7676 ;;		_resetMenu
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text39
  7683  0000'                    __ptext39:
  7684                           	callstack 0
  7685  0000'                    _motorHora:
  7686                           	callstack 24
  7687                           
  7688                           ;THora.c: 46:     switch (stateHora){
  7689                           
  7690                           ;incstack = 0
  7691  0000' D042               	goto	l5543
  7692  0002'                    l5505:
  7693                           
  7694                           ;THora.c: 48:             if (TiGetTics(timer) >= 1000){
  7695  0002' 5000'              	movf	_timer@THora$F1425^0,w,c
  7696  0004' EC00' F000'        	call	_TiGetTics
  7697  0008' 0EE8               	movlw	232
  7698  000A' 5C00'              	subwf	?_TiGetTics^0,w,c
  7699  000C' 0E03               	movlw	3
  7700  000E' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  7701  0010' A0D8               	btfss	status,0,c
  7702  0012' 0012               	return	
  7703                           
  7704                           ;THora.c: 49:                 stateHora = 1;
  7705  0014' 0E01               	movlw	1
  7706  0016' 6E00'              	movwf	_stateHora^0,c
  7707  0018' 0012               	return	
  7708  001A'                    l5509:
  7709                           
  7710                           ;THora.c: 53:             TiResetTics(timer);
  7711  001A' 5000'              	movf	_timer@THora$F1425^0,w,c
  7712  001C' EC00' F000'        	call	_TiResetTics
  7713                           
  7714                           ;THora.c: 54:             seconds++;
  7715  0020' 2A00'              	incf	_seconds^0,f,c
  7716                           
  7717                           ;THora.c: 55:             if (seconds > 59){
  7718  0022' 0E3B               	movlw	59
  7719  0024' 6400'              	cpfsgt	_seconds^0,c
  7720  0026' D005               	goto	l5517
  7721                           
  7722                           ;THora.c: 56:                 stateHora = 2;
  7723  0028' 0E02               	movlw	2
  7724  002A' 6E00'              	movwf	_stateHora^0,c
  7725                           
  7726                           ;THora.c: 57:                 seconds = 0;
  7727  002C' 0E00               	movlw	0
  7728  002E' 6E00'              	movwf	_seconds^0,c
  7729                           
  7730                           ;THora.c: 58:             } else {
  7731  0030' 0012               	return	
  7732  0032'                    l5517:
  7733                           
  7734                           ;THora.c: 59:                 stateHora = 0;
  7735  0032' 0E00               	movlw	0
  7736  0034' 6E00'              	movwf	_stateHora^0,c
  7737  0036' 0012               	return	
  7738  0038'                    l5519:
  7739                           
  7740                           ;THora.c: 63:             resetMenu();
  7741  0038' EC00' F000'        	call	_resetMenu	;wreg free
  7742                           
  7743                           ;THora.c: 64:             manageHora(&time[3], &time[4], &stateHora, 3);
  7744  003C' 0E00'              	movlw	low (_time+3)
  7745  003E' 6E00'              	movwf	manageHora@time1^0,c
  7746  0040' 0E00'              	movlw	low (_time+4)
  7747  0042' 6E00'              	movwf	manageHora@time2^0,c
  7748  0044' 0E00'              	movlw	low _stateHora
  7749  0046' 6E00'              	movwf	manageHora@state^0,c
  7750  0048' 0E03               	movlw	3
  7751  004A' 6E00'              	movwf	manageHora@nextState^0,c
  7752  004C' EC00' F000'        	call	_manageHora	;wreg free
  7753                           
  7754                           ;THora.c: 65:             break;
  7755  0050' 0012               	return	
  7756  0052'                    l5523:
  7757                           
  7758                           ;THora.c: 67:             time[3] = time[4] = '0';
  7759  0052' 0E30               	movlw	48
  7760  0054' 0100               	movlb	0	; () banked
  7761  0056' 6F00'              	movwf	(_time+4)& (0+255),b
  7762  0058' C069' F068'        	movff	_time+4,_time+3
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;THora.c: 68:             if (time[0] < '2'){
  7766  005C' 0E32               	movlw	50
  7767  005E' 6100'              	cpfslt	_time& (0+255),b
  7768  0060' D009               	goto	l5535
  7769                           
  7770                           ; BSR set to: 0
  7771                           ;THora.c: 69:                 if (time[1] < '9'){
  7772  0062' 0E39               	movlw	57
  7773  0064' 6100'              	cpfslt	(_time+1)& (0+255),b
  7774  0066' D002               	goto	l5531
  7775  0068'                    u5940:
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;THora.c: 70:                     time[1]++;
  7779  0068' 2B00'              	incf	(_time+1)& (0+255),f,b
  7780                           
  7781                           ;THora.c: 71:                 } else {
  7782  006A' D7E3               	goto	l5517
  7783  006C'                    l5531:
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;THora.c: 72:                     time[0]++;
  7787  006C' 2B00'              	incf	_time& (0+255),f,b
  7788                           
  7789                           ; BSR set to: 0
  7790                           ;THora.c: 73:                     time[1] = '0';
  7791  006E' 0E30               	movlw	48
  7792  0070' 6F00'              	movwf	(_time+1)& (0+255),b
  7793  0072' D7DF               	goto	l5517
  7794  0074'                    l5535:
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;THora.c: 76:                 if (time[1] < '3'){
  7798  0074' 0E33               	movlw	51
  7799  0076' 6100'              	cpfslt	(_time+1)& (0+255),b
  7800  0078' D001               	goto	l5539
  7801  007A' D7F6               	goto	u5940
  7802  007C'                    l5539:
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;THora.c: 79:                     time[0] = time[1] = '0';
  7806  007C' 0E30               	movlw	48
  7807  007E' 6F00'              	movwf	(_time+1)& (0+255),b
  7808  0080' C066' F065'        	movff	_time+1,_time
  7809  0084' D7D6               	goto	l5517
  7810  0086'                    l5543:
  7811  0086' 5000'              	movf	_stateHora^0,w,c
  7812  0088' 6E00'              	movwf	??_motorHora^0,c
  7813  008A' 6A00'              	clrf	(??_motorHora+1)^0,c
  7814                           
  7815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7816                           ; Switch size 1, requested type "simple"
  7817                           ; Number of cases is 1, Range of values is 0 to 0
  7818                           ; switch strategies available:
  7819                           ; Name         Instructions Cycles
  7820                           ; simple_byte            4     3 (average)
  7821                           ;	Chosen strategy is simple_byte
  7822  008C' 5000'              	movf	(??_motorHora+1)^0,w,c
  7823  008E' 0A00               	xorlw	0	; case 0
  7824  0090' A4D8               	btfss	status,2,c
  7825  0092' 0012               	return	
  7826                           
  7827                           ; Switch size 1, requested type "simple"
  7828                           ; Number of cases is 4, Range of values is 0 to 3
  7829                           ; switch strategies available:
  7830                           ; Name         Instructions Cycles
  7831                           ; simple_byte           13     7 (average)
  7832                           ;	Chosen strategy is simple_byte
  7833  0094' 5000'              	movf	??_motorHora^0,w,c
  7834  0096' 0A00               	xorlw	0	; case 0
  7835  0098' B4D8               	btfsc	status,2,c
  7836  009A' D7B3               	goto	l5505
  7837  009C' 0A01               	xorlw	1	; case 1
  7838  009E' B4D8               	btfsc	status,2,c
  7839  00A0' D7BC               	goto	l5509
  7840  00A2' 0A03               	xorlw	3	; case 2
  7841  00A4' B4D8               	btfsc	status,2,c
  7842  00A6' D7C8               	goto	l5519
  7843  00A8' 0A01               	xorlw	1	; case 3
  7844  00AA' A4D8               	btfss	status,2,c
  7845  00AC' 0012               	return	
  7846  00AE' D7D1               	goto	l5523
  7847  00B0'                    __end_of_motorHora:
  7848                           	callstack 0
  7849                           
  7850 ;; *************** function _motorAM *****************
  7851 ;; Defined at:
  7852 ;;		line 87 in file "THora.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;		None
  7855 ;; Auto vars:     Size  Location     Type
  7856 ;;		None
  7857 ;; Return value:  Size  Location     Type
  7858 ;;                  1    wreg      void 
  7859 ;; Registers used:
  7860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7861 ;; Tracked objects:
  7862 ;;		On entry : 0/0
  7863 ;;		On exit  : 0/0
  7864 ;;		Unchanged: 0/0
  7865 ;; Data sizes:     COMRAM   BANK0   BANK1
  7866 ;;      Params:         0       0       0
  7867 ;;      Locals:         0       0       0
  7868 ;;      Temps:          2       0       0
  7869 ;;      Totals:         2       0       0
  7870 ;;Total ram usage:        2 bytes
  7871 ;; Hardware stack levels used: 1
  7872 ;; Hardware stack levels required when called: 6
  7873 ;; This function calls:
  7874 ;;		_TiGetTics
  7875 ;;		_TiResetTics
  7876 ;;		_manageHora
  7877 ;;		_resetMenu
  7878 ;;		_selectMessage
  7879 ;; This function is called by:
  7880 ;;		_main
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text40
  7885  0000'                    __ptext40:
  7886                           	callstack 0
  7887  0000'                    _motorAM:
  7888                           	callstack 24
  7889                           
  7890                           ;THora.c: 88:     if (playing == 1) {
  7891                           
  7892                           ;incstack = 0
  7893  0000' 0400'              	decf	_playing^0,w,c
  7894  0002' A4D8               	btfss	status,2,c
  7895  0004' 0012               	return	
  7896  0006' D032               	goto	l5619
  7897  0008'                    l5603:
  7898                           
  7899                           ;THora.c: 91:             if (TiGetTics(timerAM) >= 1000){
  7900  0008' 5000'              	movf	_timerAM^0,w,c
  7901  000A' EC00' F000'        	call	_TiGetTics
  7902  000E' 0EE8               	movlw	232
  7903  0010' 5C00'              	subwf	?_TiGetTics^0,w,c
  7904  0012' 0E03               	movlw	3
  7905  0014' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  7906  0016' A0D8               	btfss	status,0,c
  7907  0018' 0012               	return	
  7908                           
  7909                           ;THora.c: 92:                 stateAM = 1;
  7910  001A' 0E01               	movlw	1
  7911  001C' 6E00'              	movwf	_stateAM^0,c
  7912  001E' 0012               	return	
  7913  0020'                    l5607:
  7914                           
  7915                           ;THora.c: 96:                 TiResetTics(timerAM);
  7916  0020' 5000'              	movf	_timerAM^0,w,c
  7917  0022' EC00' F000'        	call	_TiResetTics
  7918                           
  7919                           ;THora.c: 97:                 resetMenu();
  7920  0026' EC00' F000'        	call	_resetMenu	;wreg free
  7921                           
  7922                           ;THora.c: 98:                 AM++;
  7923  002A' 2A00'              	incf	_AM^0,f,c
  7924                           
  7925                           ;THora.c: 99:                 selectMessage(2);
  7926  002C' 0E02               	movlw	2
  7927  002E' EC00' F000'        	call	_selectMessage
  7928                           
  7929                           ;THora.c: 100:                 manageHora(&timeAM[3], &timeAM[4], &stateAM, 2);
  7930  0032' 0E00'              	movlw	low (_timeAM+3)
  7931  0034' 6E00'              	movwf	manageHora@time1^0,c
  7932  0036' 0E00'              	movlw	low (_timeAM+4)
  7933  0038' 6E00'              	movwf	manageHora@time2^0,c
  7934  003A' 0E00'              	movlw	low _stateAM
  7935  003C' 6E00'              	movwf	manageHora@state^0,c
  7936  003E' 0E02               	movlw	2
  7937  0040' 6E00'              	movwf	manageHora@nextState^0,c
  7938  0042' EC00' F000'        	call	_manageHora	;wreg free
  7939                           
  7940                           ;THora.c: 101:                 break;
  7941  0046' 0012               	return	
  7942  0048'                    l5615:
  7943                           
  7944                           ;THora.c: 103:                 AM = 0;
  7945  0048' 0E00               	movlw	0
  7946  004A' 6E00'              	movwf	_AM^0,c
  7947                           
  7948                           ;THora.c: 104:                 timeAM[3] = timeAM[4] = '0';
  7949  004C' 0E30               	movlw	48
  7950  004E' 0100               	movlb	0	; () banked
  7951  0050' 6F00'              	movwf	(_timeAM+4)& (0+255),b
  7952  0052' C064' F063'        	movff	_timeAM+4,_timeAM+3
  7953                           
  7954                           ; BSR set to: 0
  7955                           ;THora.c: 105:                 manageHora(&timeAM[0], &timeAM[1], &stateAM, 0);
  7956  0056' 0E00'              	movlw	low _timeAM
  7957  0058' 6E00'              	movwf	manageHora@time1^0,c
  7958  005A' 0E00'              	movlw	low (_timeAM+1)
  7959  005C' 6E00'              	movwf	manageHora@time2^0,c
  7960  005E' 0E00'              	movlw	low _stateAM
  7961  0060' 6E00'              	movwf	manageHora@state^0,c
  7962  0062' 0E00               	movlw	0
  7963  0064' 6E00'              	movwf	manageHora@nextState^0,c
  7964  0066' EC00' F000'        	call	_manageHora	;wreg free
  7965                           
  7966                           ;THora.c: 106:         }
  7967  006A' 0012               	return	
  7968  006C'                    l5619:
  7969  006C' 5000'              	movf	_stateAM^0,w,c
  7970  006E' 6E00'              	movwf	??_motorAM^0,c
  7971  0070' 6A00'              	clrf	(??_motorAM+1)^0,c
  7972                           
  7973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7974                           ; Switch size 1, requested type "simple"
  7975                           ; Number of cases is 1, Range of values is 0 to 0
  7976                           ; switch strategies available:
  7977                           ; Name         Instructions Cycles
  7978                           ; simple_byte            4     3 (average)
  7979                           ;	Chosen strategy is simple_byte
  7980  0072' 5000'              	movf	(??_motorAM+1)^0,w,c
  7981  0074' 0A00               	xorlw	0	; case 0
  7982  0076' A4D8               	btfss	status,2,c
  7983  0078' 0012               	return	
  7984                           
  7985                           ; Switch size 1, requested type "simple"
  7986                           ; Number of cases is 3, Range of values is 0 to 2
  7987                           ; switch strategies available:
  7988                           ; Name         Instructions Cycles
  7989                           ; simple_byte           10     6 (average)
  7990                           ;	Chosen strategy is simple_byte
  7991  007A' 5000'              	movf	??_motorAM^0,w,c
  7992  007C' 0A00               	xorlw	0	; case 0
  7993  007E' B4D8               	btfsc	status,2,c
  7994  0080' D7C3               	goto	l5603
  7995  0082' 0A01               	xorlw	1	; case 1
  7996  0084' B4D8               	btfsc	status,2,c
  7997  0086' D7CC               	goto	l5607
  7998  0088' 0A03               	xorlw	3	; case 2
  7999  008A' A4D8               	btfss	status,2,c
  8000  008C' 0012               	return	
  8001  008E' D7DC               	goto	l5615
  8002  0090'                    __end_of_motorAM:
  8003                           	callstack 0
  8004                           
  8005 ;; *************** function _resetMenu *****************
  8006 ;; Defined at:
  8007 ;;		line 27 in file "TMenu.c"
  8008 ;; Parameters:    Size  Location     Type
  8009 ;;		None
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;		None
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMRAM   BANK0   BANK1
  8021 ;;      Params:         0       0       0
  8022 ;;      Locals:         0       0       0
  8023 ;;      Temps:          0       0       0
  8024 ;;      Totals:         0       0       0
  8025 ;;Total ram usage:        0 bytes
  8026 ;; Hardware stack levels used: 1
  8027 ;; Hardware stack levels required when called: 5
  8028 ;; This function calls:
  8029 ;;		_LcClear
  8030 ;;		_LcCursorOff
  8031 ;;		_LcCursorOn
  8032 ;; This function is called by:
  8033 ;;		_selectOption
  8034 ;;		_manageKey
  8035 ;;		_motorMenu
  8036 ;;		_motorHora
  8037 ;;		_motorAM
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text41
  8042  0000'                    __ptext41:
  8043                           	callstack 0
  8044  0000'                    _resetMenu:
  8045                           	callstack 21
  8046                           
  8047                           ;TMenu.c: 28:     LcClear();
  8048                           
  8049                           ;incstack = 0
  8050  0000' EC00' F000'        	call	_LcClear	;wreg free
  8051                           
  8052                           ;TMenu.c: 29:     LcCursorOff();
  8053  0004' EC00' F000'        	call	_LcCursorOff	;wreg free
  8054                           
  8055                           ;TMenu.c: 30:     isPrinted = posLCD = arrow = posLCDAux = 0;
  8056  0008' 0E00               	movlw	0
  8057  000A' 6E00'              	movwf	_posLCDAux^0,c
  8058  000C' C025' F026'        	movff	_posLCDAux,_arrow
  8059  0010' C026' F027'        	movff	_arrow,_posLCD
  8060  0014' C027' F028'        	movff	_posLCD,_isPrinted
  8061                           
  8062                           ;TMenu.c: 31:     posMarkesine = sumand = usersPrinted = 0;
  8063  0018' 0E00               	movlw	0
  8064  001A' 6E00'              	movwf	_usersPrinted^0,c
  8065  001C' C01F' F020'        	movff	_usersPrinted,_sumand
  8066  0020' C020' F021'        	movff	_sumand,_posMarkesine
  8067                           
  8068                           ;TMenu.c: 32:     if (subMenu == 1 && playing == 0){
  8069  0024' 0400'              	decf	_subMenu^0,w,c
  8070  0026' A4D8               	btfss	status,2,c
  8071  0028' D012               	goto	l4309
  8072  002A' 5000'              	movf	_playing^0,w,c
  8073  002C' A4D8               	btfss	status,2,c
  8074  002E' D00F               	goto	l4309
  8075                           
  8076                           ;TMenu.c: 33:         if (mGame == 1){
  8077  0030' 0400'              	decf	_mGame^0,w,c
  8078  0032' A4D8               	btfss	status,2,c
  8079  0034' D003               	goto	l4303
  8080                           
  8081                           ;TMenu.c: 34:             posLCD = 3;
  8082  0036' 0E03               	movlw	3
  8083  0038' 6E00'              	movwf	_posLCD^0,c
  8084                           
  8085                           ;TMenu.c: 35:         } else if (mGame == 2){
  8086  003A' 0012               	return	
  8087  003C'                    l4303:
  8088  003C' 0E02               	movlw	2
  8089  003E' 1800'              	xorwf	_mGame^0,w,c
  8090  0040' A4D8               	btfss	status,2,c
  8091  0042' 0012               	return	
  8092                           
  8093                           ;TMenu.c: 36:             LcCursorOn();
  8094  0044' EC00' F000'        	call	_LcCursorOn	;wreg free
  8095  0048'                    l4307:
  8096                           
  8097                           ;TMenu.c: 37:             arrow = 1;
  8098  0048' 0E01               	movlw	1
  8099  004A' 6E00'              	movwf	_arrow^0,c
  8100                           
  8101                           ;TMenu.c: 39:     } else if (subMenu == 5){
  8102  004C' 0012               	return	
  8103  004E'                    l4309:
  8104  004E' 0E05               	movlw	5
  8105  0050' 1800'              	xorwf	_subMenu^0,w,c
  8106  0052' A4D8               	btfss	status,2,c
  8107  0054' D005               	goto	l4313
  8108                           
  8109                           ;TMenu.c: 40:         arrow = 1;
  8110  0056' 0E01               	movlw	1
  8111  0058' 6E00'              	movwf	_arrow^0,c
  8112                           
  8113                           ;TMenu.c: 41:         showHora = 1;
  8114  005A' 0E01               	movlw	1
  8115  005C' 6E00'              	movwf	_showHora^0,c
  8116                           
  8117                           ;TMenu.c: 42:     } else if (subMenu == 6 || subMenu == 2 || subMenu == 3){
  8118  005E' 0012               	return	
  8119  0060'                    l4313:
  8120  0060' 0E06               	movlw	6
  8121  0062' 1800'              	xorwf	_subMenu^0,w,c
  8122  0064' B4D8               	btfsc	status,2,c
  8123  0066' D7F0               	goto	l4307
  8124  0068' 0E02               	movlw	2
  8125  006A' 1800'              	xorwf	_subMenu^0,w,c
  8126  006C' B4D8               	btfsc	status,2,c
  8127  006E' D7EC               	goto	l4307
  8128  0070' 0E03               	movlw	3
  8129  0072' 1800'              	xorwf	_subMenu^0,w,c
  8130  0074' B4D8               	btfsc	status,2,c
  8131  0076' D7E8               	goto	l4307
  8132  0078' 0400'              	decf	_playing^0,w,c
  8133  007A' A4D8               	btfss	status,2,c
  8134  007C' D005               	goto	l4325
  8135                           
  8136                           ;TMenu.c: 45:         arrow = 1;
  8137  007E' 0E01               	movlw	1
  8138  0080' 6E00'              	movwf	_arrow^0,c
  8139                           
  8140                           ;TMenu.c: 46:         showAM = 1;
  8141  0082' 0E01               	movlw	1
  8142  0084' 6E00'              	movwf	_showAM^0,c
  8143                           
  8144                           ;TMenu.c: 47:     } else if (playing == 2){
  8145  0086' 0012               	return	
  8146  0088'                    l4325:
  8147  0088' 0E02               	movlw	2
  8148  008A' 1800'              	xorwf	_playing^0,w,c
  8149  008C' B4D8               	btfsc	status,2,c
  8150  008E' D7DC               	goto	l4307
  8151  0090' 5000'              	movf	_subMenu^0,w,c
  8152  0092' A4D8               	btfss	status,2,c
  8153  0094' 0012               	return	
  8154                           
  8155                           ;TMenu.c: 50:         first = 0;
  8156  0096' 0E00               	movlw	0
  8157  0098' 6E00'              	movwf	_first^0,c
  8158  009A' 0012               	return		;funcret
  8159  009C'                    __end_of_resetMenu:
  8160                           	callstack 0
  8161                           
  8162 ;; *************** function _LcCursorOn *****************
  8163 ;; Defined at:
  8164 ;;		line 104 in file "LcTLCD.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;		None
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;		None
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  1    wreg      void 
  8171 ;; Registers used:
  8172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1
  8178 ;;      Params:         0       0       0
  8179 ;;      Locals:         0       0       0
  8180 ;;      Temps:          0       0       0
  8181 ;;      Totals:         0       0       0
  8182 ;;Total ram usage:        0 bytes
  8183 ;; Hardware stack levels used: 1
  8184 ;; Hardware stack levels required when called: 4
  8185 ;; This function calls:
  8186 ;;		_CantaIR
  8187 ;;		_WaitForBusy
  8188 ;; This function is called by:
  8189 ;;		_resetMenu
  8190 ;; This function uses a non-reentrant model
  8191 ;;
  8192                           
  8193                           	psect	text42
  8194  0000'                    __ptext42:
  8195                           	callstack 0
  8196  0000'                    _LcCursorOn:
  8197                           	callstack 21
  8198                           
  8199                           ;LcTLCD.c: 107:  WaitForBusy();
  8200                           
  8201                           ;incstack = 0
  8202  0000' EC00' F000'        	call	_WaitForBusy	;wreg free
  8203                           
  8204                           ;LcTLCD.c: 108:  CantaIR(0x08 | 0x04 | 0x02);
  8205  0004' 0E0E               	movlw	14
  8206  0006' EC00' F000'        	call	_CantaIR
  8207  000A' 0012               	return		;funcret
  8208  000C'                    __end_of_LcCursorOn:
  8209                           	callstack 0
  8210                           
  8211 ;; *************** function _LcCursorOff *****************
  8212 ;; Defined at:
  8213 ;;		line 111 in file "LcTLCD.c"
  8214 ;; Parameters:    Size  Location     Type
  8215 ;;		None
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;		None
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1
  8227 ;;      Params:         0       0       0
  8228 ;;      Locals:         0       0       0
  8229 ;;      Temps:          0       0       0
  8230 ;;      Totals:         0       0       0
  8231 ;;Total ram usage:        0 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 4
  8234 ;; This function calls:
  8235 ;;		_CantaIR
  8236 ;;		_WaitForBusy
  8237 ;; This function is called by:
  8238 ;;		_resetMenu
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text43
  8243  0000'                    __ptext43:
  8244                           	callstack 0
  8245  0000'                    _LcCursorOff:
  8246                           	callstack 21
  8247                           
  8248                           ;LcTLCD.c: 114:  WaitForBusy();
  8249                           
  8250                           ;incstack = 0
  8251  0000' EC00' F000'        	call	_WaitForBusy	;wreg free
  8252                           
  8253                           ;LcTLCD.c: 115:  CantaIR(0x08 | 0x04);
  8254  0004' 0E0C               	movlw	12
  8255  0006' EC00' F000'        	call	_CantaIR
  8256  000A' 0012               	return		;funcret
  8257  000C'                    __end_of_LcCursorOff:
  8258                           	callstack 0
  8259                           
  8260 ;; *************** function _LcClear *****************
  8261 ;; Defined at:
  8262 ;;		line 96 in file "LcTLCD.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;		None
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      void 
  8269 ;; Registers used:
  8270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1
  8276 ;;      Params:         0       0       0
  8277 ;;      Locals:         0       0       0
  8278 ;;      Temps:          0       0       0
  8279 ;;      Totals:         0       0       0
  8280 ;;Total ram usage:        0 bytes
  8281 ;; Hardware stack levels used: 1
  8282 ;; Hardware stack levels required when called: 4
  8283 ;; This function calls:
  8284 ;;		_CantaIR
  8285 ;;		_Espera
  8286 ;;		_WaitForBusy
  8287 ;; This function is called by:
  8288 ;;		_resetMenu
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text44
  8293  0000'                    __ptext44:
  8294                           	callstack 0
  8295  0000'                    _LcClear:
  8296                           	callstack 21
  8297                           
  8298                           ;LcTLCD.c: 100:  WaitForBusy(); CantaIR(0x01);
  8299                           
  8300                           ;incstack = 0
  8301  0000' EC00' F000'        	call	_WaitForBusy	;wreg free
  8302  0004' 0E01               	movlw	1
  8303  0006' EC00' F000'        	call	_CantaIR
  8304                           
  8305                           ;LcTLCD.c: 101:  Espera(Timer, 3);
  8306  000A' C00A' F00C'        	movff	_Timer,Espera@Timer
  8307  000E' C00B' F00D'        	movff	_Timer+1,Espera@Timer+1
  8308  0012' 0E00               	movlw	0
  8309  0014' 6E00'              	movwf	(Espera@ms+1)^0,c
  8310  0016' 0E03               	movlw	3
  8311  0018' 6E00'              	movwf	Espera@ms^0,c
  8312  001A' EC00' F000'        	call	_Espera	;wreg free
  8313  001E' 0012               	return		;funcret
  8314  0020'                    __end_of_LcClear:
  8315                           	callstack 0
  8316                           
  8317 ;; *************** function _manageHora *****************
  8318 ;; Defined at:
  8319 ;;		line 32 in file "THora.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;  time1           1    5[COMRAM] PTR unsigned char 
  8322 ;;		 -> time(5), timeAM(5), 
  8323 ;;  time2           1    6[COMRAM] PTR unsigned char 
  8324 ;;		 -> time(5), timeAM(5), 
  8325 ;;  state           1    7[COMRAM] PTR unsigned char 
  8326 ;;		 -> stateAM(1), stateHora(1), 
  8327 ;;  nextState       1    8[COMRAM] unsigned char 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;		None
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  1    wreg      void 
  8332 ;; Registers used:
  8333 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMRAM   BANK0   BANK1
  8339 ;;      Params:         4       0       0
  8340 ;;      Locals:         0       0       0
  8341 ;;      Temps:          1       0       0
  8342 ;;      Totals:         5       0       0
  8343 ;;Total ram usage:        5 bytes
  8344 ;; Hardware stack levels used: 1
  8345 ;; Hardware stack levels required when called: 2
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_motorHora
  8350 ;;		_motorAM
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text45
  8355  0000'                    __ptext45:
  8356                           	callstack 0
  8357  0000'                    _manageHora:
  8358                           	callstack 27
  8359                           
  8360                           ;THora.c: 33:     if ((*time2) < '9'){
  8361                           
  8362                           ;incstack = 0
  8363  0000' 5000'              	movf	manageHora@time2^0,w,c
  8364  0002' 6ED9               	movwf	fsr2l,c
  8365  0004' 6ADA               	clrf	fsr2h,c
  8366  0006' 0E39               	movlw	57
  8367  0008' 60DF               	cpfslt	indf2,c
  8368  000A' D00A               	goto	l5181
  8369                           
  8370                           ;THora.c: 34:         (*time2)++;
  8371  000C' 5000'              	movf	manageHora@time2^0,w,c
  8372  000E' 6ED9               	movwf	fsr2l,c
  8373  0010' 6ADA               	clrf	fsr2h,c
  8374  0012' 2ADF               	incf	indf2,f,c
  8375  0014'                    l5179:
  8376                           
  8377                           ;THora.c: 35:         (*state) = 0;
  8378  0014' 5000'              	movf	manageHora@state^0,w,c
  8379  0016' 6ED9               	movwf	fsr2l,c
  8380  0018' 6ADA               	clrf	fsr2h,c
  8381  001A' 0E00               	movlw	0
  8382  001C' 6EDF               	movwf	indf2,c
  8383                           
  8384                           ;THora.c: 36:     } else if ((*time1) < '5'){
  8385  001E' 0012               	return	
  8386  0020'                    l5181:
  8387  0020' 5000'              	movf	manageHora@time1^0,w,c
  8388  0022' 6ED9               	movwf	fsr2l,c
  8389  0024' 6ADA               	clrf	fsr2h,c
  8390  0026' 0E35               	movlw	53
  8391  0028' 60DF               	cpfslt	indf2,c
  8392  002A' D00A               	goto	l5189
  8393                           
  8394                           ;THora.c: 37:         (*time1)++;
  8395  002C' 5000'              	movf	manageHora@time1^0,w,c
  8396  002E' 6ED9               	movwf	fsr2l,c
  8397  0030' 6ADA               	clrf	fsr2h,c
  8398  0032' 2ADF               	incf	indf2,f,c
  8399                           
  8400                           ;THora.c: 38:         (*time2) = '0';
  8401  0034' 5000'              	movf	manageHora@time2^0,w,c
  8402  0036' 6ED9               	movwf	fsr2l,c
  8403  0038' 6ADA               	clrf	fsr2h,c
  8404  003A' 0E30               	movlw	48
  8405  003C' 6EDF               	movwf	indf2,c
  8406  003E' D7EA               	goto	l5179
  8407  0040'                    l5189:
  8408                           
  8409                           ;THora.c: 41:         (*state) = nextState;
  8410  0040' 5000'              	movf	manageHora@state^0,w,c
  8411  0042' 6ED9               	movwf	fsr2l,c
  8412  0044' 6ADA               	clrf	fsr2h,c
  8413  0046' C008' FFDF         	movff	manageHora@nextState,indf2
  8414  004A' 0012               	return		;funcret
  8415  004C'                    __end_of_manageHora:
  8416                           	callstack 0
  8417                           
  8418 ;; *************** function _motorADC *****************
  8419 ;; Defined at:
  8420 ;;		line 30 in file "TADC.c"
  8421 ;; Parameters:    Size  Location     Type
  8422 ;;		None
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;		None
  8425 ;; Return value:  Size  Location     Type
  8426 ;;                  1    wreg      void 
  8427 ;; Registers used:
  8428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8429 ;; Tracked objects:
  8430 ;;		On entry : 0/0
  8431 ;;		On exit  : 0/0
  8432 ;;		Unchanged: 0/0
  8433 ;; Data sizes:     COMRAM   BANK0   BANK1
  8434 ;;      Params:         0       0       0
  8435 ;;      Locals:         0       0       0
  8436 ;;      Temps:          2       0       0
  8437 ;;      Totals:         2       0       0
  8438 ;;Total ram usage:        2 bytes
  8439 ;; Hardware stack levels used: 1
  8440 ;; Hardware stack levels required when called: 3
  8441 ;; This function calls:
  8442 ;;		_TiGetTics
  8443 ;;		_TiResetTics
  8444 ;;		_selectMessage
  8445 ;; This function is called by:
  8446 ;;		_main
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text46
  8451  0000'                    __ptext46:
  8452                           	callstack 0
  8453  0000'                    _motorADC:
  8454                           	callstack 27
  8455                           
  8456                           ;TADC.c: 31:  static char state = 0;;TADC.c: 33:     if(playing == 1){
  8457                           
  8458                           ;incstack = 0
  8459  0000' 0400'              	decf	_playing^0,w,c
  8460  0002' A4D8               	btfss	status,2,c
  8461  0004' 0012               	return	
  8462  0006' D045               	goto	l5703
  8463  0008'                    l5661:
  8464                           
  8465                           ;TADC.c: 36:                 if (TiGetTics(timerADC) >= 100) {
  8466  0008' 5000'              	movf	_timerADC^0,w,c
  8467  000A' EC00' F000'        	call	_TiGetTics
  8468  000E' 5000'              	movf	(?_TiGetTics+1)^0,w,c
  8469  0010' E104               	bnz	u6100
  8470  0012' 0E64               	movlw	100
  8471  0014' 5C00'              	subwf	?_TiGetTics^0,w,c
  8472  0016' A0D8               	btfss	status,0,c
  8473  0018' 0012               	return	
  8474  001A'                    u6100:
  8475                           
  8476                           ;TADC.c: 37:                     ADCON0bits.ADON = 1;
  8477  001A' 80C2               	bsf	194,0,c	;volatile
  8478                           
  8479                           ;TADC.c: 38:                     ADCON0bits.GODONE = 1;
  8480  001C' 82C2               	bsf	194,1,c	;volatile
  8481  001E'                    l5665:
  8482                           
  8483                           ;TADC.c: 39:                     state = 1;
  8484  001E' 0E01               	movlw	1
  8485  0020' 6E00'              	movwf	motorADC@state^0,c
  8486  0022' 0012               	return	
  8487  0024'                    l1560:
  8488                           
  8489                           ;TADC.c: 43:                 if (ADCON0bits.GODONE == 0) {
  8490  0024' B2C2               	btfsc	194,1,c	;volatile
  8491  0026' D7FB               	goto	l5665
  8492                           
  8493                           ;TADC.c: 44:                     ADCON0bits.ADON = 0;
  8494  0028' 90C2               	bcf	194,0,c	;volatile
  8495                           
  8496                           ;TADC.c: 45:                     if (channel == 0){
  8497  002A' 5000'              	movf	_channel^0,w,c
  8498  002C' A4D8               	btfss	status,2,c
  8499  002E' D00E               	goto	l5679
  8500                           
  8501                           ;TADC.c: 46:                         if (ADRESL < 3){
  8502  0030' 0E03               	movlw	3
  8503  0032' 60C3               	cpfslt	195,c	;volatile
  8504  0034' D004               	goto	l5675
  8505                           
  8506                           ;TADC.c: 47:                             selectMessage(5);
  8507  0036' 0E05               	movlw	5
  8508  0038' EC00' F000'        	call	_selectMessage
  8509                           
  8510                           ;TADC.c: 48:                         } else if(ADRESH > 1) {
  8511  003C' D014               	goto	l5687
  8512  003E'                    l5675:
  8513  003E' 0E01               	movlw	1
  8514  0040' 64C4               	cpfsgt	196,c	;volatile
  8515  0042' D011               	goto	l5687
  8516                           
  8517                           ;TADC.c: 49:                             selectMessage(6);
  8518  0044' 0E06               	movlw	6
  8519  0046' EC00' F000'        	call	_selectMessage
  8520  004A' D00D               	goto	l5687
  8521  004C'                    l5679:
  8522                           
  8523                           ;TADC.c: 52:                         if (ADRESL < 3){
  8524  004C' 0E03               	movlw	3
  8525  004E' 60C3               	cpfslt	195,c	;volatile
  8526  0050' D004               	goto	l5683
  8527                           
  8528                           ;TADC.c: 53:                             selectMessage(3);
  8529  0052' 0E03               	movlw	3
  8530  0054' EC00' F000'        	call	_selectMessage
  8531                           
  8532                           ;TADC.c: 54:                         } else if (ADRESH > 1){
  8533  0058' D006               	goto	l5687
  8534  005A'                    l5683:
  8535  005A' 0E01               	movlw	1
  8536  005C' 64C4               	cpfsgt	196,c	;volatile
  8537  005E' D003               	goto	l5687
  8538                           
  8539                           ;TADC.c: 55:                             selectMessage(4);
  8540  0060' 0E04               	movlw	4
  8541  0062' EC00' F000'        	call	_selectMessage
  8542  0066'                    l5687:
  8543                           
  8544                           ;TADC.c: 58:                     state = 2;
  8545  0066' 0E02               	movlw	2
  8546  0068' 6E00'              	movwf	motorADC@state^0,c
  8547                           
  8548                           ;TADC.c: 59:                 } else {
  8549  006A' 0012               	return	
  8550  006C'                    l5691:
  8551                           
  8552                           ;TADC.c: 64:                 if (channel == 0){
  8553  006C' 5000'              	movf	_channel^0,w,c
  8554  006E' A4D8               	btfss	status,2,c
  8555  0070' D006               	goto	l5695
  8556                           
  8557                           ;TADC.c: 65:                     ADCON0bits.CHS = 0x01;
  8558  0072' 50C2               	movf	194,w,c	;volatile
  8559  0074' 0BC3               	andlw	-61
  8560  0076' 0904               	iorlw	4
  8561  0078' 6EC2               	movwf	194,c	;volatile
  8562                           
  8563                           ;TADC.c: 66:                     channel = 1;
  8564  007A' 0E01               	movlw	1
  8565  007C' D003               	goto	L8
  8566  007E'                    l5695:
  8567                           
  8568                           ;TADC.c: 68:                     ADCON0bits.CHS = 0x00;
  8569  007E' 0EC3               	movlw	-61
  8570  0080' 16C2               	andwf	194,f,c	;volatile
  8571                           
  8572                           ;TADC.c: 69:                     channel = 0;
  8573  0082' 0E00               	movlw	0
  8574  0084'                    L8:
  8575  0084' 6E00'              	movwf	_channel^0,c
  8576                           
  8577                           ;TADC.c: 71:                 TiResetTics(timerADC);
  8578  0086' 5000'              	movf	_timerADC^0,w,c
  8579  0088' EC00' F000'        	call	_TiResetTics
  8580                           
  8581                           ;TADC.c: 72:                 state = 0;
  8582  008C' 0E00               	movlw	0
  8583  008E' 6E00'              	movwf	motorADC@state^0,c
  8584                           
  8585                           ;TADC.c: 73:                 break;
  8586  0090' 0012               	return	
  8587  0092'                    l5703:
  8588  0092' 5000'              	movf	motorADC@state^0,w,c
  8589  0094' 6E00'              	movwf	??_motorADC^0,c
  8590  0096' 6A00'              	clrf	(??_motorADC+1)^0,c
  8591                           
  8592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8593                           ; Switch size 1, requested type "simple"
  8594                           ; Number of cases is 1, Range of values is 0 to 0
  8595                           ; switch strategies available:
  8596                           ; Name         Instructions Cycles
  8597                           ; simple_byte            4     3 (average)
  8598                           ;	Chosen strategy is simple_byte
  8599  0098' 5000'              	movf	(??_motorADC+1)^0,w,c
  8600  009A' 0A00               	xorlw	0	; case 0
  8601  009C' A4D8               	btfss	status,2,c
  8602  009E' 0012               	return	
  8603                           
  8604                           ; Switch size 1, requested type "simple"
  8605                           ; Number of cases is 3, Range of values is 0 to 2
  8606                           ; switch strategies available:
  8607                           ; Name         Instructions Cycles
  8608                           ; simple_byte           10     6 (average)
  8609                           ;	Chosen strategy is simple_byte
  8610  00A0' 5000'              	movf	??_motorADC^0,w,c
  8611  00A2' 0A00               	xorlw	0	; case 0
  8612  00A4' B4D8               	btfsc	status,2,c
  8613  00A6' D7B0               	goto	l5661
  8614  00A8' 0A01               	xorlw	1	; case 1
  8615  00AA' B4D8               	btfsc	status,2,c
  8616  00AC' D7BB               	goto	l1560
  8617  00AE' 0A03               	xorlw	3	; case 2
  8618  00B0' A4D8               	btfss	status,2,c
  8619  00B2' 0012               	return	
  8620  00B4' D7DB               	goto	l5691
  8621  00B6'                    __end_of_motorADC:
  8622                           	callstack 0
  8623                           
  8624 ;; *************** function _selectMessage *****************
  8625 ;; Defined at:
  8626 ;;		line 20 in file "TSIO.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  messageAux      1    wreg     unsigned char 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  messageAux      1    5[COMRAM] unsigned char 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  1    wreg      void 
  8633 ;; Registers used:
  8634 ;;		wreg, status,2
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/0
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1
  8640 ;;      Params:         0       0       0
  8641 ;;      Locals:         1       0       0
  8642 ;;      Temps:          0       0       0
  8643 ;;      Totals:         1       0       0
  8644 ;;Total ram usage:        1 bytes
  8645 ;; Hardware stack levels used: 1
  8646 ;; Hardware stack levels required when called: 2
  8647 ;; This function calls:
  8648 ;;		Nothing
  8649 ;; This function is called by:
  8650 ;;		_manageKey
  8651 ;;		_motorTX
  8652 ;;		_motorAM
  8653 ;;		_motorADC
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text47
  8658  0000'                    __ptext47:
  8659                           	callstack 0
  8660  0000'                    _selectMessage:
  8661                           	callstack 25
  8662                           
  8663                           ;incstack = 0
  8664                           ;selectMessage@messageAux stored from wreg
  8665  0000' 6E00'              	movwf	selectMessage@messageAux^0,c
  8666                           
  8667                           ;TSIO.c: 21:     enviaDada = 1;
  8668  0002' 0E01               	movlw	1
  8669  0004' 6E00'              	movwf	_enviaDada^0,c
  8670                           
  8671                           ;TSIO.c: 22:     message = messageAux;
  8672  0006' C005' F01D'        	movff	selectMessage@messageAux,_message
  8673  000A' 0012               	return		;funcret
  8674  000C'                    __end_of_selectMessage:
  8675                           	callstack 0
  8676                           
  8677 ;; *************** function _initUsers *****************
  8678 ;; Defined at:
  8679 ;;		line 10 in file "TUsers.c"
  8680 ;; Parameters:    Size  Location     Type
  8681 ;;		None
  8682 ;; Auto vars:     Size  Location     Type
  8683 ;;  j               2   13[COMRAM] int 
  8684 ;;  i               2   15[COMRAM] int 
  8685 ;; Return value:  Size  Location     Type
  8686 ;;                  1    wreg      void 
  8687 ;; Registers used:
  8688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8689 ;; Tracked objects:
  8690 ;;		On entry : 3F/0
  8691 ;;		On exit  : 0/0
  8692 ;;		Unchanged: 0/0
  8693 ;; Data sizes:     COMRAM   BANK0   BANK1
  8694 ;;      Params:         0       0       0
  8695 ;;      Locals:         4       0       0
  8696 ;;      Temps:          2       0       0
  8697 ;;      Totals:         6       0       0
  8698 ;;Total ram usage:        6 bytes
  8699 ;; Hardware stack levels used: 1
  8700 ;; Hardware stack levels required when called: 3
  8701 ;; This function calls:
  8702 ;;		___wmul
  8703 ;; This function is called by:
  8704 ;;		_main
  8705 ;; This function uses a non-reentrant model
  8706 ;;
  8707                           
  8708                           	psect	text48
  8709  0000'                    __ptext48:
  8710                           	callstack 0
  8711  0000'                    _initUsers:
  8712                           	callstack 27
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;TUsers.c: 11:     numUsers = user = scoreUser = 0;
  8716                           
  8717                           ;incstack = 0
  8718  0000' 0E00               	movlw	0
  8719  0002' 6E00'              	movwf	_scoreUser^0,c
  8720  0004' C017' F046'        	movff	_scoreUser,_user
  8721  0008' C046' F047'        	movff	_user,_numUsers
  8722                           
  8723                           ;TUsers.c: 12:     array = 1;
  8724  000C' 0E01               	movlw	1
  8725  000E' 6E00'              	movwf	_array^0,c
  8726                           
  8727                           ;TUsers.c: 13:     for (int i = 0; i < 10; i++){
  8728  0010' 0E00               	movlw	0
  8729  0012' 6E00'              	movwf	(initUsers@i+1)^0,c
  8730  0014' 0E00               	movlw	0
  8731  0016' 6E00'              	movwf	initUsers@i^0,c
  8732  0018'                    l6419:
  8733                           
  8734                           ;TUsers.c: 14:         for (int j = 0; j < 10; j++){
  8735  0018' 0E00               	movlw	0
  8736  001A' 6E00'              	movwf	(initUsers@j+1)^0,c
  8737  001C' 0E00               	movlw	0
  8738  001E' 6E00'              	movwf	initUsers@j^0,c
  8739  0020'                    l6425:
  8740                           
  8741                           ;TUsers.c: 15:             users1[i].name[j] = '\0';
  8742  0020' C00F' F005'        	movff	initUsers@i,___wmul@multiplier
  8743  0024' C010' F006'        	movff	initUsers@i+1,___wmul@multiplier+1
  8744  0028' 0E00               	movlw	0
  8745  002A' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  8746  002C' 0E0B               	movlw	11
  8747  002E' 6E00'              	movwf	___wmul@multiplicand^0,c
  8748  0030' EC00' F000'        	call	___wmul	;wreg free
  8749  0034' 0E00'              	movlw	low _users1
  8750  0036' 6E00'              	movwf	??_initUsers^0,c
  8751  0038' 0E00'              	movlw	high _users1
  8752  003A' 6E00'              	movwf	(??_initUsers+1)^0,c
  8753  003C' 5000'              	movf	?___wmul^0,w,c
  8754  003E' 2600'              	addwf	??_initUsers^0,f,c
  8755  0040' 5000'              	movf	(?___wmul+1)^0,w,c
  8756  0042' 2200'              	addwfc	(??_initUsers+1)^0,f,c
  8757  0044' 5000'              	movf	initUsers@j^0,w,c
  8758  0046' 2400'              	addwf	??_initUsers^0,w,c
  8759  0048' 6ED9               	movwf	fsr2l,c
  8760  004A' 5000'              	movf	(initUsers@j+1)^0,w,c
  8761  004C' 2000'              	addwfc	(??_initUsers+1)^0,w,c
  8762  004E' 6EDA               	movwf	fsr2h,c
  8763  0050' 0E00               	movlw	0
  8764  0052' 6EDF               	movwf	indf2,c
  8765                           
  8766                           ;TUsers.c: 16:             users2[i].name[j] = '\0';
  8767  0054' C00F' F005'        	movff	initUsers@i,___wmul@multiplier
  8768  0058' C010' F006'        	movff	initUsers@i+1,___wmul@multiplier+1
  8769  005C' 0E00               	movlw	0
  8770  005E' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  8771  0060' 0E0B               	movlw	11
  8772  0062' 6E00'              	movwf	___wmul@multiplicand^0,c
  8773  0064' EC00' F000'        	call	___wmul	;wreg free
  8774  0068' 0E00'              	movlw	low _users2
  8775  006A' 6E00'              	movwf	??_initUsers^0,c
  8776  006C' 0E00'              	movlw	high _users2
  8777  006E' 6E00'              	movwf	(??_initUsers+1)^0,c
  8778  0070' 5000'              	movf	?___wmul^0,w,c
  8779  0072' 2600'              	addwf	??_initUsers^0,f,c
  8780  0074' 5000'              	movf	(?___wmul+1)^0,w,c
  8781  0076' 2200'              	addwfc	(??_initUsers+1)^0,f,c
  8782  0078' 5000'              	movf	initUsers@j^0,w,c
  8783  007A' 2400'              	addwf	??_initUsers^0,w,c
  8784  007C' 6ED9               	movwf	fsr2l,c
  8785  007E' 5000'              	movf	(initUsers@j+1)^0,w,c
  8786  0080' 2000'              	addwfc	(??_initUsers+1)^0,w,c
  8787  0082' 6EDA               	movwf	fsr2h,c
  8788  0084' 0E00               	movlw	0
  8789  0086' 6EDF               	movwf	indf2,c
  8790                           
  8791                           ;TUsers.c: 17:         }
  8792  0088' 4A00'              	infsnz	initUsers@j^0,f,c
  8793  008A' 2A00'              	incf	(initUsers@j+1)^0,f,c
  8794  008C' BE00'              	btfsc	(initUsers@j+1)^0,7,c
  8795  008E' D7C8               	goto	l6425
  8796  0090' 5000'              	movf	(initUsers@j+1)^0,w,c
  8797  0092' E104               	bnz	u7160
  8798  0094' 0E0A               	movlw	10
  8799  0096' 5C00'              	subwf	initUsers@j^0,w,c
  8800  0098' A0D8               	btfss	status,0,c
  8801  009A' D7C2               	goto	l6425
  8802  009C'                    u7160:
  8803                           
  8804                           ;TUsers.c: 18:         users1[i].score = 0;
  8805  009C' C00F' F005'        	movff	initUsers@i,___wmul@multiplier
  8806  00A0' C010' F006'        	movff	initUsers@i+1,___wmul@multiplier+1
  8807  00A4' 0E00               	movlw	0
  8808  00A6' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  8809  00A8' 0E0B               	movlw	11
  8810  00AA' 6E00'              	movwf	___wmul@multiplicand^0,c
  8811  00AC' EC00' F000'        	call	___wmul	;wreg free
  8812  00B0' 0E00'              	movlw	low (_users1+10)
  8813  00B2' 2400'              	addwf	?___wmul^0,w,c
  8814  00B4' 6ED9               	movwf	fsr2l,c
  8815  00B6' 0E00'              	movlw	high (_users1+10)
  8816  00B8' 2000'              	addwfc	(?___wmul+1)^0,w,c
  8817  00BA' 6EDA               	movwf	fsr2h,c
  8818  00BC' 0E00               	movlw	0
  8819  00BE' 6EDF               	movwf	indf2,c
  8820                           
  8821                           ;TUsers.c: 19:         users2[i].score = 0;
  8822  00C0' C00F' F005'        	movff	initUsers@i,___wmul@multiplier
  8823  00C4' C010' F006'        	movff	initUsers@i+1,___wmul@multiplier+1
  8824  00C8' 0E00               	movlw	0
  8825  00CA' 6E00'              	movwf	(___wmul@multiplicand+1)^0,c
  8826  00CC' 0E0B               	movlw	11
  8827  00CE' 6E00'              	movwf	___wmul@multiplicand^0,c
  8828  00D0' EC00' F000'        	call	___wmul	;wreg free
  8829  00D4' 0E00'              	movlw	low (_users2+10)
  8830  00D6' 2400'              	addwf	?___wmul^0,w,c
  8831  00D8' 6ED9               	movwf	fsr2l,c
  8832  00DA' 0E00'              	movlw	high (_users2+10)
  8833  00DC' 2000'              	addwfc	(?___wmul+1)^0,w,c
  8834  00DE' 6EDA               	movwf	fsr2h,c
  8835  00E0' 0E00               	movlw	0
  8836  00E2' 6EDF               	movwf	indf2,c
  8837                           
  8838                           ;TUsers.c: 20:     }
  8839  00E4' 4A00'              	infsnz	initUsers@i^0,f,c
  8840  00E6' 2A00'              	incf	(initUsers@i+1)^0,f,c
  8841  00E8' BE00'              	btfsc	(initUsers@i+1)^0,7,c
  8842  00EA' D796               	goto	l6419
  8843  00EC' 5000'              	movf	(initUsers@i+1)^0,w,c
  8844  00EE' E105               	bnz	u7170
  8845  00F0' 0E0A               	movlw	10
  8846  00F2' 5C00'              	subwf	initUsers@i^0,w,c
  8847  00F4' B0D8               	btfsc	status,0,c
  8848  00F6' 0012               	return	
  8849  00F8' D78F               	goto	l6419
  8850  00FA'                    u7170:
  8851  00FA' 0012               	return		;funcret
  8852  00FC'                    __end_of_initUsers:
  8853                           	callstack 0
  8854                           
  8855 ;; *************** function ___wmul *****************
  8856 ;; Defined at:
  8857 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;  multiplier      2    5[COMRAM] unsigned int 
  8860 ;;  multiplicand    2    7[COMRAM] unsigned int 
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;  product         2    9[COMRAM] unsigned int 
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  2    5[COMRAM] unsigned int 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0, prodl, prodh
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1
  8872 ;;      Params:         4       0       0
  8873 ;;      Locals:         2       0       0
  8874 ;;      Temps:          0       0       0
  8875 ;;      Totals:         6       0       0
  8876 ;;Total ram usage:        6 bytes
  8877 ;; Hardware stack levels used: 1
  8878 ;; Hardware stack levels required when called: 2
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_orderUsers
  8883 ;;		_initUsers
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text49
  8888  0000'                    __ptext49:
  8889                           	callstack 0
  8890  0000'                    ___wmul:
  8891                           	callstack 24
  8892                           
  8893                           ;incstack = 0
  8894  0000' 5000'              	movf	___wmul@multiplier^0,w,c
  8895  0002' 0200'              	mulwf	___wmul@multiplicand^0,c
  8896  0004' CFF3 F009'         	movff	prodl,___wmul@product
  8897  0008' CFF4 F00A'         	movff	prodh,___wmul@product+1
  8898  000C' 5000'              	movf	___wmul@multiplier^0,w,c
  8899  000E' 0200'              	mulwf	(___wmul@multiplicand+1)^0,c
  8900  0010' 50F3               	movf	243,w,c
  8901  0012' 2600'              	addwf	(___wmul@product+1)^0,f,c
  8902  0014' 5000'              	movf	(___wmul@multiplier+1)^0,w,c
  8903  0016' 0200'              	mulwf	___wmul@multiplicand^0,c
  8904  0018' 50F3               	movf	243,w,c
  8905  001A' 2600'              	addwf	(___wmul@product+1)^0,f,c
  8906  001C' C009' F005'        	movff	___wmul@product,?___wmul
  8907  0020' C00A' F006'        	movff	___wmul@product+1,?___wmul+1
  8908  0024' 0012               	return		;funcret
  8909  0026'                    __end_of___wmul:
  8910                           	callstack 0
  8911                           
  8912 ;; *************** function _initTeclat *****************
  8913 ;; Defined at:
  8914 ;;		line 15 in file "TTeclat.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;		None
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;		None
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1
  8928 ;;      Params:         0       0       0
  8929 ;;      Locals:         0       0       0
  8930 ;;      Temps:          0       0       0
  8931 ;;      Totals:         0       0       0
  8932 ;;Total ram usage:        0 bytes
  8933 ;; Hardware stack levels used: 1
  8934 ;; Hardware stack levels required when called: 3
  8935 ;; This function calls:
  8936 ;;		_TiGetTimer
  8937 ;; This function is called by:
  8938 ;;		_main
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text50
  8943  0000'                    __ptext50:
  8944                           	callstack 0
  8945  0000'                    _initTeclat:
  8946                           	callstack 27
  8947                           
  8948                           ;TTeclat.c: 16:     timer = TiGetTimer();
  8949                           
  8950                           ;incstack = 0
  8951  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  8952  0004' 6E00'              	movwf	_timer^0,c
  8953                           
  8954                           ;TTeclat.c: 17:     TRISD = 0x78;
  8955  0006' 0E78               	movlw	120
  8956  0008' 6E95               	movwf	149,c	;volatile
  8957                           
  8958                           ;TTeclat.c: 18:     state = HHT = 0;
  8959  000A' 0E00               	movlw	0
  8960  000C' 6E00'              	movwf	_HHT^0,c
  8961  000E' C037' F038'        	movff	_HHT,_state
  8962                           
  8963                           ;TTeclat.c: 19:     key = '-';
  8964  0012' 0E2D               	movlw	45
  8965  0014' 6E00'              	movwf	_key^0,c
  8966  0016' 0012               	return		;funcret
  8967  0018'                    __end_of_initTeclat:
  8968                           	callstack 0
  8969                           
  8970 ;; *************** function _initSIO *****************
  8971 ;; Defined at:
  8972 ;;		line 10 in file "TSIO.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2, status,0
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1
  8986 ;;      Params:         0       0       0
  8987 ;;      Locals:         0       0       0
  8988 ;;      Temps:          0       0       0
  8989 ;;      Totals:         0       0       0
  8990 ;;Total ram usage:        0 bytes
  8991 ;; Hardware stack levels used: 1
  8992 ;; Hardware stack levels required when called: 2
  8993 ;; This function calls:
  8994 ;;		Nothing
  8995 ;; This function is called by:
  8996 ;;		_main
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text51
  9001  0000'                    __ptext51:
  9002                           	callstack 0
  9003  0000'                    _initSIO:
  9004                           	callstack 28
  9005                           
  9006                           ;TSIO.c: 11:     TRISC |= 0xD0;
  9007                           
  9008                           ;incstack = 0
  9009  0000' 0ED0               	movlw	208
  9010  0002' 1294               	iorwf	148,f,c	;volatile
  9011                           
  9012                           ;TSIO.c: 12:   TXSTA = 0x24;
  9013  0004' 0E24               	movlw	36
  9014  0006' 6EAC               	movwf	172,c	;volatile
  9015                           
  9016                           ;TSIO.c: 13:   RCSTA = 0x90;
  9017  0008' 0E90               	movlw	144
  9018  000A' 6EAB               	movwf	171,c	;volatile
  9019                           
  9020                           ;TSIO.c: 14:     BAUDCON = 0x02;
  9021  000C' 0E02               	movlw	2
  9022  000E' 6EB8               	movwf	184,c	;volatile
  9023                           
  9024                           ;TSIO.c: 15:   SPBRG = 25;
  9025  0010' 0E19               	movlw	25
  9026  0012' 6EAF               	movwf	175,c	;volatile
  9027                           
  9028                           ;TSIO.c: 16:     playing = AM = enviaDada = message = posName = score = 0;
  9029  0014' 0E00               	movlw	0
  9030  0016' 6E00'              	movwf	_score^0,c
  9031  0018' C01B' F01C'        	movff	_score,_posName
  9032  001C' C01C' F01D'        	movff	_posName,_message
  9033  0020' C01D' F01E'        	movff	_message,_enviaDada
  9034  0024' C01E' F043'        	movff	_enviaDada,_AM
  9035  0028' C043' F044'        	movff	_AM,_playing
  9036                           
  9037                           ;TSIO.c: 17:     points[0] = points[1] = points[2] = hScore[0] = hScore[1] = hScore[2] =
      +                           '0';
  9038  002C' 0E30               	movlw	48
  9039  002E' 6E00'              	movwf	(_hScore+2)^0,c
  9040  0030' C002' F001'        	movff	_hScore+2,_hScore+1
  9041  0034' C001' F000'        	movff	_hScore+1,_hScore
  9042  0038' C000' F005'        	movff	_hScore,_points+2
  9043  003C' C005' F004'        	movff	_points+2,_points+1
  9044  0040' C004' F003'        	movff	_points+1,_points
  9045  0044' 0012               	return		;funcret
  9046  0046'                    __end_of_initSIO:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function _initMenu *****************
  9050 ;; Defined at:
  9051 ;;		line 13 in file "TMenu.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;		None
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 3F/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1
  9065 ;;      Params:         0       0       0
  9066 ;;      Locals:         0       0       0
  9067 ;;      Temps:          0       0       0
  9068 ;;      Totals:         0       0       0
  9069 ;;Total ram usage:        0 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 3
  9072 ;; This function calls:
  9073 ;;		_TiGetTimer
  9074 ;;		_TiResetTics
  9075 ;; This function is called by:
  9076 ;;		_main
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text52
  9081  0000'                    __ptext52:
  9082                           	callstack 0
  9083  0000'                    _initMenu:
  9084                           	callstack 27
  9085                           
  9086                           ;TMenu.c: 14:     timer = TiGetTimer();
  9087                           
  9088                           ;incstack = 0
  9089  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  9090  0004' 6E00'              	movwf	_timer@TMenu$F1145^0,c
  9091                           
  9092                           ;TMenu.c: 15:     TiResetTics(timer);
  9093  0006' 5000'              	movf	_timer@TMenu$F1145^0,w,c
  9094  0008' EC00' F000'        	call	_TiResetTics
  9095                           
  9096                           ;TMenu.c: 16:     isPrinted = posLCD = arrow = posLCDAux = posScore = 0;
  9097  000C' 0E00               	movlw	0
  9098  000E' 6E00'              	movwf	_posScore^0,c
  9099  0010' C024' F025'        	movff	_posScore,_posLCDAux
  9100  0014' C025' F026'        	movff	_posLCDAux,_arrow
  9101  0018' C026' F027'        	movff	_arrow,_posLCD
  9102  001C' C027' F028'        	movff	_posLCD,_isPrinted
  9103                           
  9104                           ;TMenu.c: 17:     subMenu = mGame = mModUSelect = mModUEdit = times = 0;
  9105  0020' 0E00               	movlw	0
  9106  0022' 6E00'              	movwf	_times^0,c
  9107  0024' C02E' F03E'        	movff	_times,_mModUEdit
  9108  0028' C03E' F03F'        	movff	_mModUEdit,_mModUSelect
  9109  002C' C03F' F040'        	movff	_mModUSelect,_mGame
  9110  0030' C040' F041'        	movff	_mGame,_subMenu
  9111                           
  9112                           ;TMenu.c: 18:     pos = 1;
  9113  0034' 0E01               	movlw	1
  9114  0036' 6E00'              	movwf	_pos^0,c
  9115                           
  9116                           ;TMenu.c: 19:     time[0] = time[1] = time[3] = time[4]= '0';
  9117  0038' 0E30               	movlw	48
  9118  003A' 0100               	movlb	0	; () banked
  9119  003C' 6F00'              	movwf	(_time+4)& (0+255),b
  9120  003E' C069' F068'        	movff	_time+4,_time+3
  9121  0042' C068' F066'        	movff	_time+3,_time+1
  9122  0046' C066' F065'        	movff	_time+1,_time
  9123                           
  9124                           ; BSR set to: 0
  9125                           ;TMenu.c: 20:     time[2] = timeAM[2] = ':';
  9126  004A' 0E3A               	movlw	58
  9127  004C' 6F00'              	movwf	(_timeAM+2)& (0+255),b
  9128  004E' C062' F067'        	movff	_timeAM+2,_time+2
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;TMenu.c: 21:     timeAM[0] = timeAM[1] = timeAM[3] = timeAM[4]= '0';
  9132  0052' 0E30               	movlw	48
  9133  0054' 6F00'              	movwf	(_timeAM+4)& (0+255),b
  9134  0056' C064' F063'        	movff	_timeAM+4,_timeAM+3
  9135  005A' C063' F061'        	movff	_timeAM+3,_timeAM+1
  9136  005E' C061' F060'        	movff	_timeAM+1,_timeAM
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;TMenu.c: 22:     showHora = showAM = 1;
  9140  0062' 0E01               	movlw	1
  9141  0064' 6E00'              	movwf	_showAM^0,c
  9142  0066' C03C' F03D'        	movff	_showAM,_showHora
  9143                           
  9144                           ; BSR set to: 0
  9145                           ;TMenu.c: 23:     first = second = 0;
  9146  006A' 0E00               	movlw	0
  9147  006C' 6E00'              	movwf	_second^0,c
  9148  006E' C022' F023'        	movff	_second,_first
  9149                           
  9150                           ; BSR set to: 0
  9151                           ;TMenu.c: 24:     posMarkesine = sumand = usersPrinted = 0;
  9152  0072' 0E00               	movlw	0
  9153  0074' 6E00'              	movwf	_usersPrinted^0,c
  9154  0076' C01F' F020'        	movff	_usersPrinted,_sumand
  9155  007A' C020' F021'        	movff	_sumand,_posMarkesine
  9156                           
  9157                           ; BSR set to: 0
  9158  007E' 0012               	return		;funcret
  9159  0080'                    __end_of_initMenu:
  9160                           	callstack 0
  9161                           
  9162 ;; *************** function _initHora *****************
  9163 ;; Defined at:
  9164 ;;		line 13 in file "THora.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;		None
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMRAM   BANK0   BANK1
  9178 ;;      Params:         0       0       0
  9179 ;;      Locals:         0       0       0
  9180 ;;      Temps:          0       0       0
  9181 ;;      Totals:         0       0       0
  9182 ;;Total ram usage:        0 bytes
  9183 ;; Hardware stack levels used: 1
  9184 ;; Hardware stack levels required when called: 3
  9185 ;; This function calls:
  9186 ;;		_TiGetTimer
  9187 ;;		_TiResetTics
  9188 ;; This function is called by:
  9189 ;;		_main
  9190 ;; This function uses a non-reentrant model
  9191 ;;
  9192                           
  9193                           	psect	text53
  9194  0000'                    __ptext53:
  9195                           	callstack 0
  9196  0000'                    _initHora:
  9197                           	callstack 27
  9198                           
  9199                           ;THora.c: 14:     timer = TiGetTimer();
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;incstack = 0
  9203  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  9204  0004' 6E00'              	movwf	_timer@THora$F1425^0,c
  9205                           
  9206                           ;THora.c: 15:     TiResetTics(timer);
  9207  0006' 5000'              	movf	_timer@THora$F1425^0,w,c
  9208  0008' EC00' F000'        	call	_TiResetTics
  9209                           
  9210                           ;THora.c: 16:     timerAM = TiGetTimer();
  9211  000C' EC00' F000'        	call	_TiGetTimer	;wreg free
  9212  0010' 6E00'              	movwf	_timerAM^0,c
  9213                           
  9214                           ;THora.c: 17:     stateHora = seconds = 0;
  9215  0012' 0E00               	movlw	0
  9216  0014' 6E00'              	movwf	_seconds^0,c
  9217  0016' C013' F049'        	movff	_seconds,_stateHora
  9218  001A' 0012               	return		;funcret
  9219  001C'                    __end_of_initHora:
  9220                           	callstack 0
  9221                           
  9222 ;; *************** function _initCentral *****************
  9223 ;; Defined at:
  9224 ;;		line 8 in file "TCentral.c"
  9225 ;; Parameters:    Size  Location     Type
  9226 ;;		None
  9227 ;; Auto vars:     Size  Location     Type
  9228 ;;		None
  9229 ;; Return value:  Size  Location     Type
  9230 ;;                  1    wreg      void 
  9231 ;; Registers used:
  9232 ;;		wreg, status,2
  9233 ;; Tracked objects:
  9234 ;;		On entry : 0/0
  9235 ;;		On exit  : 0/0
  9236 ;;		Unchanged: 0/0
  9237 ;; Data sizes:     COMRAM   BANK0   BANK1
  9238 ;;      Params:         0       0       0
  9239 ;;      Locals:         0       0       0
  9240 ;;      Temps:          0       0       0
  9241 ;;      Totals:         0       0       0
  9242 ;;Total ram usage:        0 bytes
  9243 ;; Hardware stack levels used: 1
  9244 ;; Hardware stack levels required when called: 2
  9245 ;; This function calls:
  9246 ;;		Nothing
  9247 ;; This function is called by:
  9248 ;;		_main
  9249 ;; This function uses a non-reentrant model
  9250 ;;
  9251                           
  9252                           	psect	text54
  9253  0000'                    __ptext54:
  9254                           	callstack 0
  9255  0000'                    _initCentral:
  9256                           	callstack 28
  9257                           
  9258                           ;TCentral.c: 9:     modeSMS = 0;
  9259                           
  9260                           ;incstack = 0
  9261  0000' 0E00               	movlw	0
  9262  0002' 6E00'              	movwf	_modeSMS^0,c
  9263  0004' 0012               	return		;funcret
  9264  0006'                    __end_of_initCentral:
  9265                           	callstack 0
  9266                           
  9267 ;; *************** function _initAltaveu *****************
  9268 ;; Defined at:
  9269 ;;		line 14 in file "TAltaveu.c"
  9270 ;; Parameters:    Size  Location     Type
  9271 ;;		None
  9272 ;; Auto vars:     Size  Location     Type
  9273 ;;		None
  9274 ;; Return value:  Size  Location     Type
  9275 ;;                  1    wreg      void 
  9276 ;; Registers used:
  9277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9278 ;; Tracked objects:
  9279 ;;		On entry : 0/0
  9280 ;;		On exit  : 0/0
  9281 ;;		Unchanged: 0/0
  9282 ;; Data sizes:     COMRAM   BANK0   BANK1
  9283 ;;      Params:         0       0       0
  9284 ;;      Locals:         0       0       0
  9285 ;;      Temps:          0       0       0
  9286 ;;      Totals:         0       0       0
  9287 ;;Total ram usage:        0 bytes
  9288 ;; Hardware stack levels used: 1
  9289 ;; Hardware stack levels required when called: 3
  9290 ;; This function calls:
  9291 ;;		_TiGetTimer
  9292 ;;		_TiResetTics
  9293 ;; This function is called by:
  9294 ;;		_main
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	text55
  9299  0000'                    __ptext55:
  9300                           	callstack 0
  9301  0000'                    _initAltaveu:
  9302                           	callstack 27
  9303                           
  9304                           ;TAltaveu.c: 15:   timerPWM = TiGetTimer();
  9305                           
  9306                           ;incstack = 0
  9307  0000' EC00' F000'        	call	_TiGetTimer	;wreg free
  9308  0004' 6E00'              	movwf	_timerPWM^0,c
  9309                           
  9310                           ;TAltaveu.c: 16:   timerMusica = TiGetTimer();
  9311  0006' EC00' F000'        	call	_TiGetTimer	;wreg free
  9312  000A' 6E00'              	movwf	_timerMusica^0,c
  9313                           
  9314                           ;TAltaveu.c: 17:   TiResetTics(timerPWM);
  9315  000C' 5000'              	movf	_timerPWM^0,w,c
  9316  000E' EC00' F000'        	call	_TiResetTics
  9317                           
  9318                           ;TAltaveu.c: 18:   TiResetTics(timerMusica);
  9319  0012' 5000'              	movf	_timerMusica^0,w,c
  9320  0014' EC00' F000'        	call	_TiResetTics
  9321                           
  9322                           ;TAltaveu.c: 19:   TRISAbits.TRISA2 = 0;
  9323  0018' 9492               	bcf	146,2,c	;volatile
  9324                           
  9325                           ;TAltaveu.c: 20:   LATAbits.LATA2 = 0;
  9326  001A' 9489               	bcf	137,2,c	;volatile
  9327                           
  9328                           ;TAltaveu.c: 21:   nota = 1;
  9329  001C' 0E01               	movlw	1
  9330  001E' 6E00'              	movwf	_nota^0,c
  9331  0020' 0012               	return		;funcret
  9332  0022'                    __end_of_initAltaveu:
  9333                           	callstack 0
  9334                           
  9335 ;; *************** function _initADC *****************
  9336 ;; Defined at:
  9337 ;;		line 13 in file "TADC.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;		None
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;		None
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  1    wreg      void 
  9344 ;; Registers used:
  9345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMRAM   BANK0   BANK1
  9351 ;;      Params:         0       0       0
  9352 ;;      Locals:         0       0       0
  9353 ;;      Temps:          0       0       0
  9354 ;;      Totals:         0       0       0
  9355 ;;Total ram usage:        0 bytes
  9356 ;; Hardware stack levels used: 1
  9357 ;; Hardware stack levels required when called: 3
  9358 ;; This function calls:
  9359 ;;		_TiGetTimer
  9360 ;; This function is called by:
  9361 ;;		_main
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           	psect	text56
  9366  0000'                    __ptext56:
  9367                           	callstack 0
  9368  0000'                    _initADC:
  9369                           	callstack 27
  9370                           
  9371                           ;TADC.c: 14:     channel = 0;
  9372                           
  9373                           ;incstack = 0
  9374  0000' 0E00               	movlw	0
  9375  0002' 6E00'              	movwf	_channel^0,c
  9376                           
  9377                           ;TADC.c: 15:     timerADC = TiGetTimer();
  9378  0004' EC00' F000'        	call	_TiGetTimer	;wreg free
  9379  0008' 6E00'              	movwf	_timerADC^0,c
  9380                           
  9381                           ;TADC.c: 16:     TRISAbits.RA0 = 1;
  9382  000A' 8092               	bsf	146,0,c	;volatile
  9383                           
  9384                           ;TADC.c: 17:     TRISAbits.RA1 = 1;
  9385  000C' 8292               	bsf	146,1,c	;volatile
  9386                           
  9387                           ;TADC.c: 21:     ADCON1 = 0x0D;
  9388  000E' 0E0D               	movlw	13
  9389  0010' 6EC1               	movwf	193,c	;volatile
  9390                           
  9391                           ;TADC.c: 23:     ADCON2 = 0x89;
  9392  0012' 0E89               	movlw	137
  9393  0014' 6EC0               	movwf	192,c	;volatile
  9394  0016' 0012               	return		;funcret
  9395  0018'                    __end_of_initADC:
  9396                           	callstack 0
  9397                           
  9398 ;; *************** function _TiInit *****************
  9399 ;; Defined at:
  9400 ;;		line 68 in file "TITTIMER.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;		None
  9403 ;; Auto vars:     Size  Location     Type
  9404 ;;  counter         1    5[COMRAM] unsigned char 
  9405 ;; Return value:  Size  Location     Type
  9406 ;;                  1    wreg      void 
  9407 ;; Registers used:
  9408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9409 ;; Tracked objects:
  9410 ;;		On entry : 0/0
  9411 ;;		On exit  : 0/0
  9412 ;;		Unchanged: 0/0
  9413 ;; Data sizes:     COMRAM   BANK0   BANK1
  9414 ;;      Params:         0       0       0
  9415 ;;      Locals:         1       0       0
  9416 ;;      Temps:          0       0       0
  9417 ;;      Totals:         1       0       0
  9418 ;;Total ram usage:        1 bytes
  9419 ;; Hardware stack levels used: 1
  9420 ;; Hardware stack levels required when called: 2
  9421 ;; This function calls:
  9422 ;;		Nothing
  9423 ;; This function is called by:
  9424 ;;		_main
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text57
  9429  0000'                    __ptext57:
  9430                           	callstack 0
  9431  0000'                    _TiInit:
  9432                           	callstack 28
  9433                           
  9434                           ;TITTIMER.c: 69:  unsigned char counter;;TITTIMER.c: 70:  for (counter=0;counter<32;coun
      +                          ter++) {
  9435                           
  9436                           ;incstack = 0
  9437  0000' 0E00               	movlw	0
  9438  0002' 6E00'              	movwf	TiInit@counter^0,c
  9439  0004'                    l5221:
  9440                           
  9441                           ;TITTIMER.c: 71:   s_Timers[counter].b_busy=0;
  9442  0004' 5000'              	movf	TiInit@counter^0,w,c
  9443  0006' 0D03               	mullw	3
  9444  0008' 50F3               	movf	243,w,c
  9445  000A' 0F00'              	addlw	low (_s_Timers+2)
  9446  000C' 6ED9               	movwf	fsr2l,c
  9447  000E' 6ADA               	clrf	fsr2h,c
  9448  0010' 0E00               	movlw	0
  9449  0012' 6EDF               	movwf	indf2,c
  9450                           
  9451                           ;TITTIMER.c: 72:  }
  9452  0014' 2A00'              	incf	TiInit@counter^0,f,c
  9453  0016' 0E1F               	movlw	31
  9454  0018' 6400'              	cpfsgt	TiInit@counter^0,c
  9455  001A' D7F4               	goto	l5221
  9456                           
  9457                           ;TITTIMER.c: 73:  h_Tics=0;
  9458  001C' 0E00               	movlw	0
  9459  001E' 6E00'              	movwf	(_h_Tics+1)^0,c
  9460  0020' 0E00               	movlw	0
  9461  0022' 6E00'              	movwf	_h_Tics^0,c
  9462                           
  9463                           ;TITTIMER.c: 74:     OSCCONbits.IRCF2 = 1;
  9464  0024' 8CD3               	bsf	211,6,c	;volatile
  9465                           
  9466                           ;TITTIMER.c: 75:     OSCCONbits.IRCF1 = 1;
  9467  0026' 8AD3               	bsf	211,5,c	;volatile
  9468                           
  9469                           ;TITTIMER.c: 76:     OSCCONbits.IRCF0 = 0;
  9470  0028' 98D3               	bcf	211,4,c	;volatile
  9471                           
  9472                           ;TITTIMER.c: 78:  T0CONbits.T08BIT=1;
  9473  002A' 8CD5               	bsf	213,6,c	;volatile
  9474                           
  9475                           ;TITTIMER.c: 79:  T0CONbits.T0CS = 0;
  9476  002C' 9AD5               	bcf	213,5,c	;volatile
  9477                           
  9478                           ;TITTIMER.c: 80:  T0CONbits.PSA = 0;
  9479  002E' 96D5               	bcf	213,3,c	;volatile
  9480                           
  9481                           ;TITTIMER.c: 81:  T0CONbits.T0PS = 1;
  9482  0030' 50D5               	movf	213,w,c	;volatile
  9483  0032' 0BF8               	andlw	-8
  9484  0034' 0901               	iorlw	1
  9485  0036' 6ED5               	movwf	213,c	;volatile
  9486                           
  9487                           ;TITTIMER.c: 83:  TMR0L=6;
  9488  0038' 0E06               	movlw	6
  9489  003A' 6ED6               	movwf	214,c	;volatile
  9490                           
  9491                           ;TITTIMER.c: 84:  T0CONbits.TMR0ON = 1;
  9492  003C' 8ED5               	bsf	213,7,c	;volatile
  9493                           
  9494                           ;TITTIMER.c: 86:  INTCONbits.TMR0IF = 0;
  9495  003E' 94F2               	bcf	242,2,c	;volatile
  9496                           
  9497                           ;TITTIMER.c: 87:  INTCONbits.TMR0IE = 1;
  9498  0040' 8AF2               	bsf	242,5,c	;volatile
  9499  0042' 0012               	return		;funcret
  9500  0044'                    __end_of_TiInit:
  9501                           	callstack 0
  9502                           
  9503 ;; *************** function _LcInit *****************
  9504 ;; Defined at:
  9505 ;;		line 52 in file "LcTLCD.c"
  9506 ;; Parameters:    Size  Location     Type
  9507 ;;  files           1    wreg     unsigned char 
  9508 ;;  columnes        1   16[COMRAM] unsigned char 
  9509 ;; Auto vars:     Size  Location     Type
  9510 ;;  files           1   18[COMRAM] unsigned char 
  9511 ;;  i               2   19[COMRAM] int 
  9512 ;; Return value:  Size  Location     Type
  9513 ;;                  1    wreg      void 
  9514 ;; Registers used:
  9515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9516 ;; Tracked objects:
  9517 ;;		On entry : 0/0
  9518 ;;		On exit  : 0/0
  9519 ;;		Unchanged: 0/0
  9520 ;; Data sizes:     COMRAM   BANK0   BANK1
  9521 ;;      Params:         1       0       0
  9522 ;;      Locals:         3       0       0
  9523 ;;      Temps:          1       0       0
  9524 ;;      Totals:         5       0       0
  9525 ;;Total ram usage:        5 bytes
  9526 ;; Hardware stack levels used: 1
  9527 ;; Hardware stack levels required when called: 4
  9528 ;; This function calls:
  9529 ;;		_CantaIR
  9530 ;;		_EscriuPrimeraOrdre
  9531 ;;		_Espera
  9532 ;;		_TiGetTimer
  9533 ;;		_WaitForBusy
  9534 ;; This function is called by:
  9535 ;;		_main
  9536 ;; This function uses a non-reentrant model
  9537 ;;
  9538                           
  9539                           	psect	text58
  9540  0000'                    __ptext58:
  9541                           	callstack 0
  9542  0000'                    _LcInit:
  9543                           	callstack 26
  9544                           
  9545                           ;incstack = 0
  9546                           ;LcInit@files stored from wreg
  9547  0000' 6E00'              	movwf	LcInit@files^0,c
  9548                           
  9549                           ;LcTLCD.c: 60:  int i;;LcTLCD.c: 61:  Timer = TiGetTimer();
  9550  0002' EC00' F000'        	call	_TiGetTimer	;wreg free
  9551  0006' 6E00'              	movwf	??_LcInit^0,c
  9552  0008' 5000'              	movf	??_LcInit^0,w,c
  9553  000A' 6E00'              	movwf	_Timer^0,c
  9554  000C' 6A00'              	clrf	(_Timer+1)^0,c
  9555                           
  9556                           ;LcTLCD.c: 62:  Files = files; Columnes = columnes;
  9557  000E' C012' F033'        	movff	LcInit@files,_Files
  9558  0012' C010' F032'        	movff	LcInit@columnes,_Columnes
  9559                           
  9560                           ;LcTLCD.c: 63:  FilaAct = ColumnaAct = 0;
  9561  0016' 0E00               	movlw	0
  9562  0018' 6E00'              	movwf	_ColumnaAct^0,c
  9563  001A' C030' F031'        	movff	_ColumnaAct,_FilaAct
  9564                           
  9565                           ;LcTLCD.c: 64:  (TRISBbits.RB3 = TRISBbits.RB4 = TRISBbits.RB5 = 0);
  9566  001E' 9A93               	bcf	147,5,c	;volatile
  9567  0020' 9893               	bcf	147,4,c	;volatile
  9568  0022' 9693               	bcf	147,3,c	;volatile
  9569                           
  9570                           ;LcTLCD.c: 65:  for (i = 0; i < 2; i++) {
  9571  0024' 0E00               	movlw	0
  9572  0026' 6E00'              	movwf	(LcInit@i+1)^0,c
  9573  0028' 0E00               	movlw	0
  9574  002A' 6E00'              	movwf	LcInit@i^0,c
  9575  002C'                    l5263:
  9576                           
  9577                           ;LcTLCD.c: 66:   Espera(Timer, 100);
  9578  002C' C00A' F00C'        	movff	_Timer,Espera@Timer
  9579  0030' C00B' F00D'        	movff	_Timer+1,Espera@Timer+1
  9580  0034' 0E00               	movlw	0
  9581  0036' 6E00'              	movwf	(Espera@ms+1)^0,c
  9582  0038' 0E64               	movlw	100
  9583  003A' 6E00'              	movwf	Espera@ms^0,c
  9584  003C' EC00' F000'        	call	_Espera	;wreg free
  9585                           
  9586                           ;LcTLCD.c: 70:   EscriuPrimeraOrdre(0x02 | 0x01);
  9587  0040' 0E03               	movlw	3
  9588  0042' EC00' F000'        	call	_EscriuPrimeraOrdre
  9589                           
  9590                           ;LcTLCD.c: 71:   Espera(Timer, 5);
  9591  0046' C00A' F00C'        	movff	_Timer,Espera@Timer
  9592  004A' C00B' F00D'        	movff	_Timer+1,Espera@Timer+1
  9593  004E' 0E00               	movlw	0
  9594  0050' 6E00'              	movwf	(Espera@ms+1)^0,c
  9595  0052' 0E05               	movlw	5
  9596  0054' 6E00'              	movwf	Espera@ms^0,c
  9597  0056' EC00' F000'        	call	_Espera	;wreg free
  9598                           
  9599                           ;LcTLCD.c: 72:   EscriuPrimeraOrdre(0x02 | 0x01);
  9600  005A' 0E03               	movlw	3
  9601  005C' EC00' F000'        	call	_EscriuPrimeraOrdre
  9602                           
  9603                           ;LcTLCD.c: 73:   Espera(Timer, 1);
  9604  0060' C00A' F00C'        	movff	_Timer,Espera@Timer
  9605  0064' C00B' F00D'        	movff	_Timer+1,Espera@Timer+1
  9606  0068' 0E00               	movlw	0
  9607  006A' 6E00'              	movwf	(Espera@ms+1)^0,c
  9608  006C' 0E01               	movlw	1
  9609  006E' 6E00'              	movwf	Espera@ms^0,c
  9610  0070' EC00' F000'        	call	_Espera	;wreg free
  9611                           
  9612                           ;LcTLCD.c: 74:   EscriuPrimeraOrdre(0x02 | 0x01);
  9613  0074' 0E03               	movlw	3
  9614  0076' EC00' F000'        	call	_EscriuPrimeraOrdre
  9615                           
  9616                           ;LcTLCD.c: 75:   Espera(Timer, 1);
  9617  007A' C00A' F00C'        	movff	_Timer,Espera@Timer
  9618  007E' C00B' F00D'        	movff	_Timer+1,Espera@Timer+1
  9619  0082' 0E00               	movlw	0
  9620  0084' 6E00'              	movwf	(Espera@ms+1)^0,c
  9621  0086' 0E01               	movlw	1
  9622  0088' 6E00'              	movwf	Espera@ms^0,c
  9623  008A' EC00' F000'        	call	_Espera	;wreg free
  9624                           
  9625                           ;LcTLCD.c: 78:   EscriuPrimeraOrdre(0x02);
  9626  008E' 0E02               	movlw	2
  9627  0090' EC00' F000'        	call	_EscriuPrimeraOrdre
  9628                           
  9629                           ;LcTLCD.c: 79:   Espera(Timer, 1);
  9630  0094' C00A' F00C'        	movff	_Timer,Espera@Timer
  9631  0098' C00B' F00D'        	movff	_Timer+1,Espera@Timer+1
  9632  009C' 0E00               	movlw	0
  9633  009E' 6E00'              	movwf	(Espera@ms+1)^0,c
  9634  00A0' 0E01               	movlw	1
  9635  00A2' 6E00'              	movwf	Espera@ms^0,c
  9636  00A4' EC00' F000'        	call	_Espera	;wreg free
  9637                           
  9638                           ;LcTLCD.c: 80:   CantaIR(0x20 | 0x08);
  9639  00A8' 0E28               	movlw	40
  9640  00AA' EC00' F000'        	call	_CantaIR
  9641                           
  9642                           ;LcTLCD.c: 83:   WaitForBusy(); CantaIR(0x08);
  9643  00AE' EC00' F000'        	call	_WaitForBusy	;wreg free
  9644  00B2' 0E08               	movlw	8
  9645  00B4' EC00' F000'        	call	_CantaIR
  9646                           
  9647                           ;LcTLCD.c: 84:   WaitForBusy(); CantaIR(0x01);
  9648  00B8' EC00' F000'        	call	_WaitForBusy	;wreg free
  9649  00BC' 0E01               	movlw	1
  9650  00BE' EC00' F000'        	call	_CantaIR
  9651                           
  9652                           ;LcTLCD.c: 85:   Espera(Timer,3);
  9653  00C2' C00A' F00C'        	movff	_Timer,Espera@Timer
  9654  00C6' C00B' F00D'        	movff	_Timer+1,Espera@Timer+1
  9655  00CA' 0E00               	movlw	0
  9656  00CC' 6E00'              	movwf	(Espera@ms+1)^0,c
  9657  00CE' 0E03               	movlw	3
  9658  00D0' 6E00'              	movwf	Espera@ms^0,c
  9659  00D2' EC00' F000'        	call	_Espera	;wreg free
  9660                           
  9661                           ;LcTLCD.c: 86:   WaitForBusy(); CantaIR(0x04 | 0x02);
  9662  00D6' EC00' F000'        	call	_WaitForBusy	;wreg free
  9663  00DA' 0E06               	movlw	6
  9664  00DC' EC00' F000'        	call	_CantaIR
  9665                           
  9666                           ;LcTLCD.c: 87:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  9667  00E0' EC00' F000'        	call	_WaitForBusy	;wreg free
  9668  00E4' 0E0F               	movlw	15
  9669  00E6' EC00' F000'        	call	_CantaIR
  9670                           
  9671                           ;LcTLCD.c: 88:  }
  9672  00EA' 4A00'              	infsnz	LcInit@i^0,f,c
  9673  00EC' 2A00'              	incf	(LcInit@i+1)^0,f,c
  9674  00EE' BE00'              	btfsc	(LcInit@i+1)^0,7,c
  9675  00F0' D79D               	goto	l5263
  9676  00F2' 5000'              	movf	(LcInit@i+1)^0,w,c
  9677  00F4' E105               	bnz	u5570
  9678  00F6' 0E02               	movlw	2
  9679  00F8' 5C00'              	subwf	LcInit@i^0,w,c
  9680  00FA' B0D8               	btfsc	status,0,c
  9681  00FC' 0012               	return	
  9682  00FE' D796               	goto	l5263
  9683  0100'                    u5570:
  9684  0100' 0012               	return		;funcret
  9685  0102'                    __end_of_LcInit:
  9686                           	callstack 0
  9687                           
  9688 ;; *************** function _WaitForBusy *****************
  9689 ;; Defined at:
  9690 ;;		line 236 in file "LcTLCD.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;		None
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;  Busy            1   12[COMRAM] unsigned char 
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  1    wreg      void 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 0/1
  9701 ;;		On exit  : 0/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMRAM   BANK0   BANK1
  9704 ;;      Params:         0       0       0
  9705 ;;      Locals:         1       0       0
  9706 ;;      Temps:          0       0       0
  9707 ;;      Totals:         1       0       0
  9708 ;;Total ram usage:        1 bytes
  9709 ;; Hardware stack levels used: 1
  9710 ;; Hardware stack levels required when called: 3
  9711 ;; This function calls:
  9712 ;;		_TiGetTics
  9713 ;;		_TiResetTics
  9714 ;; This function is called by:
  9715 ;;		_LcInit
  9716 ;;		_LcClear
  9717 ;;		_LcCursorOn
  9718 ;;		_LcCursorOff
  9719 ;;		_LcGotoXY
  9720 ;;		_LcPutChar
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           	psect	text59
  9725  0000'                    __ptext59:
  9726                           	callstack 0
  9727  0000'                    _WaitForBusy:
  9728                           	callstack 21
  9729                           
  9730                           ;LcTLCD.c: 237:  (TRISCbits.RC0 = TRISCbits.RC1 = TRISCbits.RC2 = TRISCbits.RC3 = 1);
  9731                           
  9732                           ;incstack = 0
  9733  0000' 8694               	bsf	148,3,c	;volatile
  9734  0002' 8494               	bsf	148,2,c	;volatile
  9735  0004' 8294               	bsf	148,1,c	;volatile
  9736  0006' 8094               	bsf	148,0,c	;volatile
  9737                           
  9738                           ;LcTLCD.c: 238:  (LATBbits.LATB3 = 0);
  9739  0008' 968A               	bcf	138,3,c	;volatile
  9740                           
  9741                           ;LcTLCD.c: 239:  (LATBbits.LATB4 = 1);
  9742  000A' 888A               	bsf	138,4,c	;volatile
  9743                           
  9744                           ;LcTLCD.c: 240:  TiResetTics(Timer);
  9745  000C' 5000'              	movf	_Timer^0,w,c
  9746  000E' EC00' F000'        	call	_TiResetTics
  9747  0012'                    l4153:
  9748                           
  9749                           ;LcTLCD.c: 242:   (LATBbits.LATB5 = 1);(LATBbits.LATB5 = 1);
  9750  0012' 8A8A               	bsf	138,5,c	;volatile
  9751  0014' 8A8A               	bsf	138,5,c	;volatile
  9752                           
  9753                           ;LcTLCD.c: 243:   Busy = (PORTCbits.RC1);
  9754  0016' 0E00               	movlw	0
  9755  0018' B282               	btfsc	130,1,c	;volatile
  9756  001A' 0E01               	movlw	1
  9757  001C' 6E00'              	movwf	WaitForBusy@Busy^0,c
  9758                           
  9759                           ;LcTLCD.c: 244:   (LATBbits.LATB5 = 0);
  9760  001E' 9A8A               	bcf	138,5,c	;volatile
  9761                           
  9762                           ;LcTLCD.c: 245:   (LATBbits.LATB5 = 0);
  9763  0020' 9A8A               	bcf	138,5,c	;volatile
  9764                           
  9765                           ;LcTLCD.c: 246:   (LATBbits.LATB5 = 1);(LATBbits.LATB5 = 1);
  9766  0022' 8A8A               	bsf	138,5,c	;volatile
  9767  0024' 8A8A               	bsf	138,5,c	;volatile
  9768                           
  9769                           ;LcTLCD.c: 248:   (LATBbits.LATB5 = 0);
  9770  0026' 9A8A               	bcf	138,5,c	;volatile
  9771                           
  9772                           ;LcTLCD.c: 249:   (LATBbits.LATB5 = 0);
  9773  0028' 9A8A               	bcf	138,5,c	;volatile
  9774                           
  9775                           ;LcTLCD.c: 250:   if (TiGetTics(Timer)) break;
  9776  002A' 5000'              	movf	_Timer^0,w,c
  9777  002C' EC00' F000'        	call	_TiGetTics
  9778  0030' 5000'              	movf	?_TiGetTics^0,w,c
  9779  0032' 1000'              	iorwf	(?_TiGetTics+1)^0,w,c
  9780  0034' A4D8               	btfss	status,2,c
  9781  0036' 0012               	return	
  9782                           
  9783                           ;LcTLCD.c: 251:  } while(Busy);
  9784  0038' 5000'              	movf	WaitForBusy@Busy^0,w,c
  9785  003A' B4D8               	btfsc	status,2,c
  9786  003C' 0012               	return	
  9787  003E' D7E9               	goto	l4153
  9788  0040'                    __end_of_WaitForBusy:
  9789                           	callstack 0
  9790                           
  9791 ;; *************** function _TiGetTimer *****************
  9792 ;; Defined at:
  9793 ;;		line 90 in file "TITTIMER.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;		None
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;  counter         1    6[COMRAM] unsigned char 
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      unsigned char 
  9800 ;; Registers used:
  9801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1
  9807 ;;      Params:         0       0       0
  9808 ;;      Locals:         1       0       0
  9809 ;;      Temps:          1       0       0
  9810 ;;      Totals:         2       0       0
  9811 ;;Total ram usage:        2 bytes
  9812 ;; Hardware stack levels used: 1
  9813 ;; Hardware stack levels required when called: 2
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_initTeclat
  9818 ;;		_LcInit
  9819 ;;		_initMenu
  9820 ;;		_initHora
  9821 ;;		_initADC
  9822 ;;		_initAltaveu
  9823 ;; This function uses a non-reentrant model
  9824 ;;
  9825                           
  9826                           	psect	text60
  9827  0000'                    __ptext60:
  9828                           	callstack 0
  9829  0000'                    _TiGetTimer:
  9830                           	callstack 27
  9831                           
  9832                           ;TITTIMER.c: 91:  unsigned char counter=0;
  9833                           
  9834                           ;incstack = 0
  9835  0000' 0E00               	movlw	0
  9836  0002' 6E00'              	movwf	TiGetTimer@counter^0,c
  9837                           
  9838                           ;TITTIMER.c: 92:  while (s_Timers[counter].b_busy==1) {
  9839  0004' D007               	goto	l4983
  9840  0006'                    l4975:
  9841                           
  9842                           ;TITTIMER.c: 93:   counter++;
  9843  0006' 2A00'              	incf	TiGetTimer@counter^0,f,c
  9844                           
  9845                           ;TITTIMER.c: 94:   if (counter == 32) return -1;
  9846  0008' 0E20               	movlw	32
  9847  000A' 1800'              	xorwf	TiGetTimer@counter^0,w,c
  9848  000C' A4D8               	btfss	status,2,c
  9849  000E' D002               	goto	l4983
  9850  0010' 0EFF               	movlw	255
  9851  0012' 0012               	return	
  9852  0014'                    l4983:
  9853                           
  9854                           ;TITTIMER.c: 92:  while (s_Timers[counter].b_busy==1) {
  9855  0014' 5000'              	movf	TiGetTimer@counter^0,w,c
  9856  0016' 0D03               	mullw	3
  9857  0018' 50F3               	movf	243,w,c
  9858  001A' 0F00'              	addlw	low (_s_Timers+2)
  9859  001C' 6ED9               	movwf	fsr2l,c
  9860  001E' 6ADA               	clrf	fsr2h,c
  9861  0020' 04DE               	decf	postinc2,w,c
  9862  0022' B4D8               	btfsc	status,2,c
  9863  0024' D7F0               	goto	l4975
  9864                           
  9865                           ;TITTIMER.c: 96:  s_Timers[counter].b_busy=1;
  9866  0026' 5000'              	movf	TiGetTimer@counter^0,w,c
  9867  0028' 0D03               	mullw	3
  9868  002A' 50F3               	movf	243,w,c
  9869  002C' 0F00'              	addlw	low (_s_Timers+2)
  9870  002E' 6ED9               	movwf	fsr2l,c
  9871  0030' 6ADA               	clrf	fsr2h,c
  9872  0032' 0E01               	movlw	1
  9873  0034' 6EDF               	movwf	indf2,c
  9874                           
  9875                           ;TITTIMER.c: 97:  return (counter);
  9876  0036' 5000'              	movf	TiGetTimer@counter^0,w,c
  9877  0038' 0012               	return		;funcret
  9878  003A'                    __end_of_TiGetTimer:
  9879                           	callstack 0
  9880                           
  9881 ;; *************** function _Espera *****************
  9882 ;; Defined at:
  9883 ;;		line 185 in file "LcTLCD.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  Timer           2   12[COMRAM] int 
  9886 ;;  ms              2   14[COMRAM] int 
  9887 ;; Auto vars:     Size  Location     Type
  9888 ;;		None
  9889 ;; Return value:  Size  Location     Type
  9890 ;;                  1    wreg      void 
  9891 ;; Registers used:
  9892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9893 ;; Tracked objects:
  9894 ;;		On entry : 0/0
  9895 ;;		On exit  : 0/0
  9896 ;;		Unchanged: 0/0
  9897 ;; Data sizes:     COMRAM   BANK0   BANK1
  9898 ;;      Params:         4       0       0
  9899 ;;      Locals:         0       0       0
  9900 ;;      Temps:          0       0       0
  9901 ;;      Totals:         4       0       0
  9902 ;;Total ram usage:        4 bytes
  9903 ;; Hardware stack levels used: 1
  9904 ;; Hardware stack levels required when called: 3
  9905 ;; This function calls:
  9906 ;;		_TiGetTics
  9907 ;;		_TiResetTics
  9908 ;; This function is called by:
  9909 ;;		_LcInit
  9910 ;;		_LcClear
  9911 ;; This function uses a non-reentrant model
  9912 ;;
  9913                           
  9914                           	psect	text61
  9915  0000'                    __ptext61:
  9916                           	callstack 0
  9917  0000'                    _Espera:
  9918                           	callstack 21
  9919                           
  9920                           ;LcTLCD.c: 186:  TiResetTics(Timer);
  9921                           
  9922                           ;incstack = 0
  9923  0000' 5000'              	movf	Espera@Timer^0,w,c
  9924  0002' EC00' F000'        	call	_TiResetTics
  9925  0006'                    l4179:
  9926  0006' 5000'              	movf	Espera@Timer^0,w,c
  9927  0008' EC00' F000'        	call	_TiGetTics
  9928  000C' 5000'              	movf	Espera@ms^0,w,c
  9929  000E' 5C00'              	subwf	?_TiGetTics^0,w,c
  9930  0010' 5000'              	movf	(Espera@ms+1)^0,w,c
  9931  0012' 5800'              	subwfb	(?_TiGetTics+1)^0,w,c
  9932  0014' B0D8               	btfsc	status,0,c
  9933  0016' 0012               	return	
  9934  0018' D7F6               	goto	l4179
  9935  001A'                    __end_of_Espera:
  9936                           	callstack 0
  9937                           
  9938 ;; *************** function _TiResetTics *****************
  9939 ;; Defined at:
  9940 ;;		line 100 in file "TITTIMER.c"
  9941 ;; Parameters:    Size  Location     Type
  9942 ;;  Handle          1    wreg     unsigned char 
  9943 ;; Auto vars:     Size  Location     Type
  9944 ;;  Handle          1    5[COMRAM] unsigned char 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  1    wreg      void 
  9947 ;; Registers used:
  9948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMRAM   BANK0   BANK1
  9954 ;;      Params:         0       0       0
  9955 ;;      Locals:         1       0       0
  9956 ;;      Temps:          0       0       0
  9957 ;;      Totals:         1       0       0
  9958 ;;Total ram usage:        1 bytes
  9959 ;; Hardware stack levels used: 1
  9960 ;; Hardware stack levels required when called: 2
  9961 ;; This function calls:
  9962 ;;		Nothing
  9963 ;; This function is called by:
  9964 ;;		_comprovafila
  9965 ;;		_motorTeclat
  9966 ;;		_Espera
  9967 ;;		_WaitForBusy
  9968 ;;		_manageKeySMS
  9969 ;;		_initMenu
  9970 ;;		_toMarkesination
  9971 ;;		_initHora
  9972 ;;		_initAM
  9973 ;;		_resetHora
  9974 ;;		_motorHora
  9975 ;;		_motorAM
  9976 ;;		_resetADC
  9977 ;;		_motorADC
  9978 ;;		_initAltaveu
  9979 ;;		_motorPWM
  9980 ;;		_motorMusica
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           	psect	text62
  9985  0000'                    __ptext62:
  9986                           	callstack 0
  9987  0000'                    _TiResetTics:
  9988                           	callstack 21
  9989                           
  9990                           ;incstack = 0
  9991                           ;TiResetTics@Handle stored from wreg
  9992  0000' 6E00'              	movwf	TiResetTics@Handle^0,c
  9993                           
  9994                           ;TITTIMER.c: 102:  s_Timers[Handle].h_TicsInicials=h_Tics;
  9995  0002' 5000'              	movf	TiResetTics@Handle^0,w,c
  9996  0004' 0D03               	mullw	3
  9997  0006' 50F3               	movf	243,w,c
  9998  0008' 0F00'              	addlw	low _s_Timers
  9999  000A' 6ED9               	movwf	fsr2l,c
 10000  000C' 6ADA               	clrf	fsr2h,c
 10001  000E' C008' FFDE         	movff	_h_Tics,postinc2
 10002  0012' C009' FFDD         	movff	_h_Tics+1,postdec2
 10003  0016' 0012               	return		;funcret
 10004  0018'                    __end_of_TiResetTics:
 10005                           	callstack 0
 10006                           
 10007 ;; *************** function _TiGetTics *****************
 10008 ;; Defined at:
 10009 ;;		line 107 in file "TITTIMER.c"
 10010 ;; Parameters:    Size  Location     Type
 10011 ;;  Handle          1    wreg     unsigned char 
 10012 ;; Auto vars:     Size  Location     Type
 10013 ;;  Handle          1    9[COMRAM] unsigned char 
 10014 ;;  actual          2   10[COMRAM] volatile unsigned int 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  2    5[COMRAM] unsigned int 
 10017 ;; Registers used:
 10018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMRAM   BANK0   BANK1
 10024 ;;      Params:         2       0       0
 10025 ;;      Locals:         3       0       0
 10026 ;;      Temps:          2       0       0
 10027 ;;      Totals:         7       0       0
 10028 ;;Total ram usage:        7 bytes
 10029 ;; Hardware stack levels used: 1
 10030 ;; Hardware stack levels required when called: 2
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_motorTeclat
 10035 ;;		_Espera
 10036 ;;		_WaitForBusy
 10037 ;;		_searchLetter
 10038 ;;		_toMarkesination
 10039 ;;		_motorHora
 10040 ;;		_motorAM
 10041 ;;		_motorADC
 10042 ;;		_motorPWM
 10043 ;;		_motorMusica
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           	psect	text63
 10048  0000'                    __ptext63:
 10049                           	callstack 0
 10050  0000'                    _TiGetTics:
 10051                           	callstack 21
 10052                           
 10053                           ;incstack = 0
 10054                           ;TiGetTics@Handle stored from wreg
 10055  0000' 6E00'              	movwf	TiGetTics@Handle^0,c
 10056                           
 10057                           ;TITTIMER.c: 108: volatile unsigned int actual;;TITTIMER.c: 109:  actual=h_Tics;
 10058  0002' C008' F00A'        	movff	_h_Tics,TiGetTics@actual	;volatile
 10059  0006' C009' F00B'        	movff	_h_Tics+1,TiGetTics@actual+1	;volatile
 10060                           
 10061                           ;TITTIMER.c: 110:  return (actual-(s_Timers[Handle].h_TicsInicials));
 10062  000A' 5000'              	movf	TiGetTics@Handle^0,w,c
 10063  000C' 0D03               	mullw	3
 10064  000E' 50F3               	movf	243,w,c
 10065  0010' 0F00'              	addlw	low _s_Timers
 10066  0012' 6ED9               	movwf	fsr2l,c
 10067  0014' 6ADA               	clrf	fsr2h,c
 10068  0016' CFDE F007'         	movff	postinc2,??_TiGetTics
 10069  001A' CFDD F008'         	movff	postdec2,??_TiGetTics+1
 10070  001E' 5000'              	movf	??_TiGetTics^0,w,c
 10071  0020' 5C00'              	subwf	TiGetTics@actual^0,w,c	;volatile
 10072  0022' 6E00'              	movwf	?_TiGetTics^0,c
 10073  0024' 5000'              	movf	(??_TiGetTics+1)^0,w,c
 10074  0026' 5800'              	subwfb	(TiGetTics@actual+1)^0,w,c	;volatile
 10075  0028' 6E00'              	movwf	(?_TiGetTics+1)^0,c
 10076  002A' 0012               	return		;funcret
 10077  002C'                    __end_of_TiGetTics:
 10078                           	callstack 0
 10079                           
 10080 ;; *************** function _EscriuPrimeraOrdre *****************
 10081 ;; Defined at:
 10082 ;;		line 254 in file "LcTLCD.c"
 10083 ;; Parameters:    Size  Location     Type
 10084 ;;  ordre           1    wreg     unsigned char 
 10085 ;; Auto vars:     Size  Location     Type
 10086 ;;  ordre           1    6[COMRAM] unsigned char 
 10087 ;; Return value:  Size  Location     Type
 10088 ;;                  1    wreg      void 
 10089 ;; Registers used:
 10090 ;;		wreg, status,2, status,0
 10091 ;; Tracked objects:
 10092 ;;		On entry : 0/0
 10093 ;;		On exit  : 0/0
 10094 ;;		Unchanged: 0/0
 10095 ;; Data sizes:     COMRAM   BANK0   BANK1
 10096 ;;      Params:         0       0       0
 10097 ;;      Locals:         1       0       0
 10098 ;;      Temps:          1       0       0
 10099 ;;      Totals:         2       0       0
 10100 ;;Total ram usage:        2 bytes
 10101 ;; Hardware stack levels used: 1
 10102 ;; Hardware stack levels required when called: 2
 10103 ;; This function calls:
 10104 ;;		Nothing
 10105 ;; This function is called by:
 10106 ;;		_LcInit
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           	psect	text64
 10111  0000'                    __ptext64:
 10112                           	callstack 0
 10113  0000'                    _EscriuPrimeraOrdre:
 10114                           	callstack 27
 10115                           
 10116                           ;incstack = 0
 10117                           ;EscriuPrimeraOrdre@ordre stored from wreg
 10118  0000' 6E00'              	movwf	EscriuPrimeraOrdre@ordre^0,c
 10119                           
 10120                           ;LcTLCD.c: 256:  (TRISCbits.RC0 = TRISCbits.RC1 = TRISCbits.RC2 = TRISCbits.RC3 = 0); (L
      +                          ATBbits.LATB3 = 0); (LATBbits.LATB4 = 0);
 10121  0002' 9694               	bcf	148,3,c	;volatile
 10122  0004' 9494               	bcf	148,2,c	;volatile
 10123  0006' 9294               	bcf	148,1,c	;volatile
 10124  0008' 9094               	bcf	148,0,c	;volatile
 10125  000A' 968A               	bcf	138,3,c	;volatile
 10126  000C' 988A               	bcf	138,4,c	;volatile
 10127                           
 10128                           ;LcTLCD.c: 257:  (LATBbits.LATB5 = 1); (LATBbits.LATB5 = 1);
 10129  000E' 8A8A               	bsf	138,5,c	;volatile
 10130  0010' 8A8A               	bsf	138,5,c	;volatile
 10131                           
 10132                           ;LcTLCD.c: 258:   (LATCbits.LATC1 = (ordre & 0x08 ? 1 : 0));
 10133  0012' A600'              	btfss	EscriuPrimeraOrdre@ordre^0,3,c
 10134  0014' D003               	goto	u2220
 10135  0016' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10136  0018' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
 10137  001A' D001               	goto	u2238
 10138  001C'                    u2220:
 10139  001C' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10140  001E'                    u2238:
 10141  001E' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
 10142  0020' 508B               	movf	139,w,c	;volatile
 10143  0022' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10144  0024' 0BFD               	andlw	-3
 10145  0026' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10146  0028' 6E8B               	movwf	139,c	;volatile
 10147                           
 10148                           ;LcTLCD.c: 259:   (LATCbits.LATC0 = (ordre & 0x04 ? 1 : 0));
 10149  002A' A400'              	btfss	EscriuPrimeraOrdre@ordre^0,2,c
 10150  002C' D003               	goto	u2240
 10151  002E' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10152  0030' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
 10153  0032' D001               	goto	u2258
 10154  0034'                    u2240:
 10155  0034' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10156  0036'                    u2258:
 10157  0036' 508B               	movf	139,w,c	;volatile
 10158  0038' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10159  003A' 0BFE               	andlw	-2
 10160  003C' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10161  003E' 6E8B               	movwf	139,c	;volatile
 10162                           
 10163                           ;LcTLCD.c: 260:   (LATCbits.LATC2 = (ordre & 0x02 ? 1 : 0));
 10164  0040' A200'              	btfss	EscriuPrimeraOrdre@ordre^0,1,c
 10165  0042' D003               	goto	u2260
 10166  0044' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10167  0046' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
 10168  0048' D001               	goto	u2278
 10169  004A'                    u2260:
 10170  004A' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10171  004C'                    u2278:
 10172  004C' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
 10173  004E' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
 10174  0050' 508B               	movf	139,w,c	;volatile
 10175  0052' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10176  0054' 0BFB               	andlw	-5
 10177  0056' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10178  0058' 6E8B               	movwf	139,c	;volatile
 10179                           
 10180                           ;LcTLCD.c: 261:   (LATCbits.LATC3 = (ordre & 0x01 ? 1 : 0));
 10181  005A' A000'              	btfss	EscriuPrimeraOrdre@ordre^0,0,c
 10182  005C' D003               	goto	u2280
 10183  005E' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10184  0060' 2A00'              	incf	??_EscriuPrimeraOrdre^0,f,c
 10185  0062' D001               	goto	u2298
 10186  0064'                    u2280:
 10187  0064' 6A00'              	clrf	??_EscriuPrimeraOrdre^0,c
 10188  0066'                    u2298:
 10189  0066' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
 10190  0068' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
 10191  006A' 4600'              	rlncf	??_EscriuPrimeraOrdre^0,f,c
 10192  006C' 508B               	movf	139,w,c	;volatile
 10193  006E' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10194  0070' 0BF7               	andlw	-9
 10195  0072' 1800'              	xorwf	??_EscriuPrimeraOrdre^0,w,c
 10196  0074' 6E8B               	movwf	139,c	;volatile
 10197                           
 10198                           ;LcTLCD.c: 262:  (LATBbits.LATB5 = 0);
 10199  0076' 9A8A               	bcf	138,5,c	;volatile
 10200  0078' 0012               	return		;funcret
 10201  007A'                    __end_of_EscriuPrimeraOrdre:
 10202                           	callstack 0
 10203                           
 10204 ;; *************** function _CantaIR *****************
 10205 ;; Defined at:
 10206 ;;		line 204 in file "LcTLCD.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  IR              1    wreg     unsigned char 
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;  IR              1    7[COMRAM] unsigned char 
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  1    wreg      void 
 10213 ;; Registers used:
 10214 ;;		wreg, status,2, status,0, cstack
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/1
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMRAM   BANK0   BANK1
 10220 ;;      Params:         0       0       0
 10221 ;;      Locals:         1       0       0
 10222 ;;      Temps:          0       0       0
 10223 ;;      Totals:         1       0       0
 10224 ;;Total ram usage:        1 bytes
 10225 ;; Hardware stack levels used: 1
 10226 ;; Hardware stack levels required when called: 3
 10227 ;; This function calls:
 10228 ;;		_CantaPartAlta
 10229 ;;		_CantaPartBaixa
 10230 ;; This function is called by:
 10231 ;;		_LcInit
 10232 ;;		_LcClear
 10233 ;;		_LcCursorOn
 10234 ;;		_LcCursorOff
 10235 ;;		_LcGotoXY
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239                           	psect	text65
 10240  0000'                    __ptext65:
 10241                           	callstack 0
 10242  0000'                    _CantaIR:
 10243                           	callstack 21
 10244                           
 10245                           ;incstack = 0
 10246                           ;CantaIR@IR stored from wreg
 10247  0000' 6E00'              	movwf	CantaIR@IR^0,c
 10248                           
 10249                           ;LcTLCD.c: 205:  (TRISCbits.RC0 = TRISCbits.RC1 = TRISCbits.RC2 = TRISCbits.RC3 = 0);
 10250  0002' 9694               	bcf	148,3,c	;volatile
 10251  0004' 9494               	bcf	148,2,c	;volatile
 10252  0006' 9294               	bcf	148,1,c	;volatile
 10253  0008' 9094               	bcf	148,0,c	;volatile
 10254                           
 10255                           ;LcTLCD.c: 206:  (LATBbits.LATB3 = 0);
 10256  000A' 968A               	bcf	138,3,c	;volatile
 10257                           
 10258                           ;LcTLCD.c: 207:  (LATBbits.LATB4 = 0);
 10259  000C' 988A               	bcf	138,4,c	;volatile
 10260                           
 10261                           ;LcTLCD.c: 208:  (LATBbits.LATB5 = 1);
 10262  000E' 8A8A               	bsf	138,5,c	;volatile
 10263                           
 10264                           ;LcTLCD.c: 209:  CantaPartAlta(IR);
 10265  0010' 5000'              	movf	CantaIR@IR^0,w,c
 10266  0012' EC00' F000'        	call	_CantaPartAlta
 10267                           
 10268                           ;LcTLCD.c: 210:  (LATBbits.LATB5 = 1);
 10269  0016' 8A8A               	bsf	138,5,c	;volatile
 10270                           
 10271                           ;LcTLCD.c: 211:  (LATBbits.LATB5 = 0);
 10272  0018' 9A8A               	bcf	138,5,c	;volatile
 10273                           
 10274                           ;LcTLCD.c: 212:  (LATBbits.LATB5 = 0);
 10275  001A' 9A8A               	bcf	138,5,c	;volatile
 10276                           
 10277                           ;LcTLCD.c: 213:  (LATBbits.LATB5 = 1);
 10278  001C' 8A8A               	bsf	138,5,c	;volatile
 10279                           
 10280                           ;LcTLCD.c: 214:  CantaPartBaixa(IR);
 10281  001E' 5000'              	movf	CantaIR@IR^0,w,c
 10282  0020' EC00' F000'        	call	_CantaPartBaixa
 10283                           
 10284                           ;LcTLCD.c: 215:  (LATBbits.LATB5 = 1);
 10285  0024' 8A8A               	bsf	138,5,c	;volatile
 10286                           
 10287                           ;LcTLCD.c: 216:  (LATBbits.LATB5 = 0);
 10288  0026' 9A8A               	bcf	138,5,c	;volatile
 10289                           
 10290                           ;LcTLCD.c: 217:  (TRISCbits.RC0 = TRISCbits.RC1 = TRISCbits.RC2 = TRISCbits.RC3 = 1);
 10291  0028' 8694               	bsf	148,3,c	;volatile
 10292  002A' 8494               	bsf	148,2,c	;volatile
 10293  002C' 8294               	bsf	148,1,c	;volatile
 10294  002E' 8094               	bsf	148,0,c	;volatile
 10295  0030' 0012               	return		;funcret
 10296  0032'                    __end_of_CantaIR:
 10297                           	callstack 0
 10298                           
 10299 ;; *************** function _CantaPartBaixa *****************
 10300 ;; Defined at:
 10301 ;;		line 197 in file "LcTLCD.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  c               1    wreg     unsigned char 
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;  c               1    6[COMRAM] unsigned char 
 10306 ;; Return value:  Size  Location     Type
 10307 ;;                  1    wreg      void 
 10308 ;; Registers used:
 10309 ;;		wreg, status,2, status,0
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/1
 10312 ;;		On exit  : 0/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMRAM   BANK0   BANK1
 10315 ;;      Params:         0       0       0
 10316 ;;      Locals:         1       0       0
 10317 ;;      Temps:          1       0       0
 10318 ;;      Totals:         2       0       0
 10319 ;;Total ram usage:        2 bytes
 10320 ;; Hardware stack levels used: 1
 10321 ;; Hardware stack levels required when called: 2
 10322 ;; This function calls:
 10323 ;;		Nothing
 10324 ;; This function is called by:
 10325 ;;		_CantaIR
 10326 ;;		_CantaData
 10327 ;; This function uses a non-reentrant model
 10328 ;;
 10329                           
 10330                           	psect	text66
 10331  0000'                    __ptext66:
 10332                           	callstack 0
 10333  0000'                    _CantaPartBaixa:
 10334                           	callstack 21
 10335                           
 10336                           ;incstack = 0
 10337                           ;CantaPartBaixa@c stored from wreg
 10338  0000' 6E00'              	movwf	CantaPartBaixa@c^0,c
 10339                           
 10340                           ;LcTLCD.c: 198:   (LATCbits.LATC1 = (c & 0x08 ? 1 : 0));
 10341  0002' A600'              	btfss	CantaPartBaixa@c^0,3,c
 10342  0004' D003               	goto	u3360
 10343  0006' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10344  0008' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10345  000A' D001               	goto	u3378
 10346  000C'                    u3360:
 10347  000C' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10348  000E'                    u3378:
 10349  000E' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10350  0010' 508B               	movf	139,w,c	;volatile
 10351  0012' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10352  0014' 0BFD               	andlw	-3
 10353  0016' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10354  0018' 6E8B               	movwf	139,c	;volatile
 10355                           
 10356                           ;LcTLCD.c: 199:   (LATCbits.LATC0 = (c & 0x04 ? 1 : 0));
 10357  001A' A400'              	btfss	CantaPartBaixa@c^0,2,c
 10358  001C' D003               	goto	u3380
 10359  001E' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10360  0020' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10361  0022' D001               	goto	u3398
 10362  0024'                    u3380:
 10363  0024' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10364  0026'                    u3398:
 10365  0026' 508B               	movf	139,w,c	;volatile
 10366  0028' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10367  002A' 0BFE               	andlw	-2
 10368  002C' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10369  002E' 6E8B               	movwf	139,c	;volatile
 10370                           
 10371                           ;LcTLCD.c: 200:   (LATCbits.LATC2 = (c & 0x02 ? 1 : 0));
 10372  0030' A200'              	btfss	CantaPartBaixa@c^0,1,c
 10373  0032' D003               	goto	u3400
 10374  0034' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10375  0036' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10376  0038' D001               	goto	u3418
 10377  003A'                    u3400:
 10378  003A' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10379  003C'                    u3418:
 10380  003C' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10381  003E' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10382  0040' 508B               	movf	139,w,c	;volatile
 10383  0042' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10384  0044' 0BFB               	andlw	-5
 10385  0046' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10386  0048' 6E8B               	movwf	139,c	;volatile
 10387                           
 10388                           ;LcTLCD.c: 201:   (LATCbits.LATC3 = (c & 0x01 ? 1 : 0));
 10389  004A' A000'              	btfss	CantaPartBaixa@c^0,0,c
 10390  004C' D003               	goto	u3420
 10391  004E' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10392  0050' 2A00'              	incf	??_CantaPartBaixa^0,f,c
 10393  0052' D001               	goto	u3438
 10394  0054'                    u3420:
 10395  0054' 6A00'              	clrf	??_CantaPartBaixa^0,c
 10396  0056'                    u3438:
 10397  0056' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10398  0058' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10399  005A' 4600'              	rlncf	??_CantaPartBaixa^0,f,c
 10400  005C' 508B               	movf	139,w,c	;volatile
 10401  005E' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10402  0060' 0BF7               	andlw	-9
 10403  0062' 1800'              	xorwf	??_CantaPartBaixa^0,w,c
 10404  0064' 6E8B               	movwf	139,c	;volatile
 10405  0066' 0012               	return		;funcret
 10406  0068'                    __end_of_CantaPartBaixa:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _CantaPartAlta *****************
 10410 ;; Defined at:
 10411 ;;		line 190 in file "LcTLCD.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;  c               1    wreg     unsigned char 
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  c               1    6[COMRAM] unsigned char 
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      void 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2, status,0
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/1
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK0   BANK1
 10425 ;;      Params:         0       0       0
 10426 ;;      Locals:         1       0       0
 10427 ;;      Temps:          1       0       0
 10428 ;;      Totals:         2       0       0
 10429 ;;Total ram usage:        2 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; Hardware stack levels required when called: 2
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_CantaIR
 10436 ;;		_CantaData
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           	psect	text67
 10441  0000'                    __ptext67:
 10442                           	callstack 0
 10443  0000'                    _CantaPartAlta:
 10444                           	callstack 21
 10445                           
 10446                           ;incstack = 0
 10447                           ;CantaPartAlta@c stored from wreg
 10448  0000' 6E00'              	movwf	CantaPartAlta@c^0,c
 10449                           
 10450                           ;LcTLCD.c: 191:   (LATCbits.LATC1 = (c & 0x80 ? 1 : 0));
 10451  0002' AE00'              	btfss	CantaPartAlta@c^0,7,c
 10452  0004' D003               	goto	u3280
 10453  0006' 6A00'              	clrf	??_CantaPartAlta^0,c
 10454  0008' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10455  000A' D001               	goto	u3298
 10456  000C'                    u3280:
 10457  000C' 6A00'              	clrf	??_CantaPartAlta^0,c
 10458  000E'                    u3298:
 10459  000E' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10460  0010' 508B               	movf	139,w,c	;volatile
 10461  0012' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10462  0014' 0BFD               	andlw	-3
 10463  0016' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10464  0018' 6E8B               	movwf	139,c	;volatile
 10465                           
 10466                           ;LcTLCD.c: 192:   (LATCbits.LATC0 = (c & 0x40 ? 1 : 0));
 10467  001A' AC00'              	btfss	CantaPartAlta@c^0,6,c
 10468  001C' D003               	goto	u3300
 10469  001E' 6A00'              	clrf	??_CantaPartAlta^0,c
 10470  0020' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10471  0022' D001               	goto	u3318
 10472  0024'                    u3300:
 10473  0024' 6A00'              	clrf	??_CantaPartAlta^0,c
 10474  0026'                    u3318:
 10475  0026' 508B               	movf	139,w,c	;volatile
 10476  0028' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10477  002A' 0BFE               	andlw	-2
 10478  002C' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10479  002E' 6E8B               	movwf	139,c	;volatile
 10480                           
 10481                           ;LcTLCD.c: 193:   (LATCbits.LATC2 = (c & 0x20 ? 1 : 0));
 10482  0030' AA00'              	btfss	CantaPartAlta@c^0,5,c
 10483  0032' D003               	goto	u3320
 10484  0034' 6A00'              	clrf	??_CantaPartAlta^0,c
 10485  0036' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10486  0038' D001               	goto	u3338
 10487  003A'                    u3320:
 10488  003A' 6A00'              	clrf	??_CantaPartAlta^0,c
 10489  003C'                    u3338:
 10490  003C' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10491  003E' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10492  0040' 508B               	movf	139,w,c	;volatile
 10493  0042' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10494  0044' 0BFB               	andlw	-5
 10495  0046' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10496  0048' 6E8B               	movwf	139,c	;volatile
 10497                           
 10498                           ;LcTLCD.c: 194:   (LATCbits.LATC3 = (c & 0x10 ? 1 : 0));
 10499  004A' A800'              	btfss	CantaPartAlta@c^0,4,c
 10500  004C' D003               	goto	u3340
 10501  004E' 6A00'              	clrf	??_CantaPartAlta^0,c
 10502  0050' 2A00'              	incf	??_CantaPartAlta^0,f,c
 10503  0052' D001               	goto	u3358
 10504  0054'                    u3340:
 10505  0054' 6A00'              	clrf	??_CantaPartAlta^0,c
 10506  0056'                    u3358:
 10507  0056' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10508  0058' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10509  005A' 4600'              	rlncf	??_CantaPartAlta^0,f,c
 10510  005C' 508B               	movf	139,w,c	;volatile
 10511  005E' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10512  0060' 0BF7               	andlw	-9
 10513  0062' 1800'              	xorwf	??_CantaPartAlta^0,w,c
 10514  0064' 6E8B               	movwf	139,c	;volatile
 10515  0066' 0012               	return		;funcret
 10516  0068'                    __end_of_CantaPartAlta:
 10517                           	callstack 0
 10518                           
 10519 ;; *************** function _RSI_High *****************
 10520 ;; Defined at:
 10521 ;;		line 29 in file "main.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;		None
 10524 ;; Auto vars:     Size  Location     Type
 10525 ;;		None
 10526 ;; Return value:  Size  Location     Type
 10527 ;;                  1    wreg      void 
 10528 ;; Registers used:
 10529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10530 ;; Tracked objects:
 10531 ;;		On entry : 0/0
 10532 ;;		On exit  : 0/0
 10533 ;;		Unchanged: 0/0
 10534 ;; Data sizes:     COMRAM   BANK0   BANK1
 10535 ;;      Params:         0       0       0
 10536 ;;      Locals:         0       0       0
 10537 ;;      Temps:          4       0       0
 10538 ;;      Totals:         4       0       0
 10539 ;;Total ram usage:        4 bytes
 10540 ;; Hardware stack levels used: 1
 10541 ;; Hardware stack levels required when called: 1
 10542 ;; This function calls:
 10543 ;;		_RSI_Timer0
 10544 ;; This function is called by:
 10545 ;;		Interrupt level 2
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           	psect	intcode
 10550  0000'                    __pintcode:
 10551                           	callstack 0
 10552  0000'                    _RSI_High:
 10553                           	callstack 20
 10554                           
 10555                           ;incstack = 0
 10556  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 10557  0002' CFD9 F001'         	movff	fsr2l,??_RSI_High
 10558  0006' CFDA F002'         	movff	fsr2h,??_RSI_High+1
 10559  000A' CFF3 F003'         	movff	prodl,??_RSI_High+2
 10560  000E' CFF4 F004'         	movff	prodh,??_RSI_High+3
 10561                           
 10562                           ;main.c: 30:       motorMusica();
 10563  0012' B4F2               	btfsc	242,2,c	;volatile
 10564                           
 10565                           ;main.c: 31:       motorPWM();
 10566  0014' EC00' F000'        	call	_RSI_Timer0	;wreg free
 10567  0018' C004' FFF4         	movff	??_RSI_High+3,prodh
 10568  001C' C003' FFF3         	movff	??_RSI_High+2,prodl
 10569  0020' C002' FFDA         	movff	??_RSI_High+1,fsr2h
 10570  0024' C001' FFD9         	movff	??_RSI_High,fsr2l
 10571  0028' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 10572  002A' 0011               	retfie		f
 10573  002C'                    __end_of_RSI_High:
 10574                           	callstack 0
 10575                           
 10576 ;; *************** function _RSI_Timer0 *****************
 10577 ;; Defined at:
 10578 ;;		line 44 in file "TITTIMER.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1
 10592 ;;      Params:         0       0       0
 10593 ;;      Locals:         0       0       0
 10594 ;;      Temps:          1       0       0
 10595 ;;      Totals:         1       0       0
 10596 ;;Total ram usage:        1 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; This function calls:
 10599 ;;		Nothing
 10600 ;; This function is called by:
 10601 ;;		_RSI_High
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           	psect	text69
 10606  0000'                    __ptext69:
 10607                           	callstack 0
 10608  0000'                    _RSI_Timer0:
 10609                           	callstack 20
 10610                           
 10611                           ;TITTIMER.c: 47:      INTCONbits.TMR0IF = 0;
 10612                           
 10613                           ;incstack = 0
 10614  0000' 94F2               	bcf	242,2,c	;volatile
 10615                           
 10616                           ;TITTIMER.c: 48:  TMR0L=6;
 10617  0002' 0E06               	movlw	6
 10618  0004' 6ED6               	movwf	214,c	;volatile
 10619                           
 10620                           ;TITTIMER.c: 49:  h_Tics++;
 10621  0006' 4A00'              	infsnz	_h_Tics^0,f,c
 10622  0008' 2A00'              	incf	(_h_Tics+1)^0,f,c
 10623                           
 10624                           ;TITTIMER.c: 51:  if (h_Tics>=30000) {
 10625  000A' 0E30               	movlw	48
 10626  000C' 5C00'              	subwf	_h_Tics^0,w,c
 10627  000E' 0E75               	movlw	117
 10628  0010' 5800'              	subwfb	(_h_Tics+1)^0,w,c
 10629  0012' A0D8               	btfss	status,0,c
 10630  0014' 0012               	return	
 10631                           
 10632                           ;TITTIMER.c: 53:   for (counter=0;counter<32;counter++)
 10633  0016' 0E00               	movlw	0
 10634  0018' 6E00'              	movwf	(_counter+1)^0,c
 10635  001A' 0E00               	movlw	0
 10636  001C' 6E00'              	movwf	_counter^0,c
 10637  001E'                    i2l5201:
 10638  001E' BE00'              	btfsc	(_counter+1)^0,7,c
 10639  0020' D006               	goto	i2l5205
 10640  0022' 5000'              	movf	(_counter+1)^0,w,c
 10641  0024' E11A               	bnz	i2l5213
 10642  0026' 0E20               	movlw	32
 10643  0028' 5C00'              	subwf	_counter^0,w,c
 10644  002A' B0D8               	btfsc	status,0,c
 10645  002C' D016               	goto	i2l5213
 10646  002E'                    i2l5205:
 10647                           
 10648                           ;TITTIMER.c: 54:    if (s_Timers[counter].b_busy==1)
 10649  002E' 5000'              	movf	_counter^0,w,c
 10650  0030' 0D03               	mullw	3
 10651  0032' 50F3               	movf	243,w,c
 10652  0034' 0F00'              	addlw	low (_s_Timers+2)
 10653  0036' 6ED9               	movwf	fsr2l,c
 10654  0038' 6ADA               	clrf	fsr2h,c
 10655  003A' 04DE               	decf	postinc2,w,c
 10656  003C' A4D8               	btfss	status,2,c
 10657  003E' D00A               	goto	i2l5209
 10658                           
 10659                           ;TITTIMER.c: 55:     s_Timers[counter].h_TicsInicials -= h_Tics;
 10660  0040' 5000'              	movf	_counter^0,w,c
 10661  0042' 0D03               	mullw	3
 10662  0044' 50F3               	movf	243,w,c
 10663  0046' 0F00'              	addlw	low _s_Timers
 10664  0048' 6ED9               	movwf	fsr2l,c
 10665  004A' 6ADA               	clrf	fsr2h,c
 10666  004C' 5000'              	movf	_h_Tics^0,w,c
 10667  004E' 5EDE               	subwf	postinc2,f,c
 10668  0050' 5000'              	movf	(_h_Tics+1)^0,w,c
 10669  0052' 5ADD               	subwfb	postdec2,f,c
 10670  0054'                    i2l5209:
 10671  0054' 4A00'              	infsnz	_counter^0,f,c
 10672  0056' 2A00'              	incf	(_counter+1)^0,f,c
 10673  0058' D7E2               	goto	i2l5201
 10674  005A'                    i2l5213:
 10675                           
 10676                           ;TITTIMER.c: 56:   h_Tics=0;
 10677  005A' 0E00               	movlw	0
 10678  005C' 6E00'              	movwf	(_h_Tics+1)^0,c
 10679  005E' 0E00               	movlw	0
 10680  0060' 6E00'              	movwf	_h_Tics^0,c
 10681  0062' 0012               	return		;funcret
 10682  0064'                    __end_of_RSI_Timer0:
 10683                           	callstack 0
 10684                           
 10685                           	psect	rparam
 10686  0000                     
 10687                           	psect	temp
 10688  0000'                    btemp:
 10689                           	callstack 0
 10690  0000'                    	ds	1
 10691  0000                     int$flags	set	btemp
 10692  0000                     wtemp8	set	btemp+1
 10693  0000                     ttemp5	set	btemp+1
 10694  0000                     ttemp6	set	btemp+4
 10695  0000                     ttemp7	set	btemp+8
 10696                           
 10697                           	psect	idloc
 10698                           
 10699                           ;Config register IDLOC0 @ 0x200000
 10700                           ;	unspecified, using default values
 10701  200000                     	org	2097152
 10702  200000  FF                 	db	255
 10703                           
 10704                           ;Config register IDLOC1 @ 0x200001
 10705                           ;	unspecified, using default values
 10706  200001                     	org	2097153
 10707  200001  FF                 	db	255
 10708                           
 10709                           ;Config register IDLOC2 @ 0x200002
 10710                           ;	unspecified, using default values
 10711  200002                     	org	2097154
 10712  200002  FF                 	db	255
 10713                           
 10714                           ;Config register IDLOC3 @ 0x200003
 10715                           ;	unspecified, using default values
 10716  200003                     	org	2097155
 10717  200003  FF                 	db	255
 10718                           
 10719                           ;Config register IDLOC4 @ 0x200004
 10720                           ;	unspecified, using default values
 10721  200004                     	org	2097156
 10722  200004  FF                 	db	255
 10723                           
 10724                           ;Config register IDLOC5 @ 0x200005
 10725                           ;	unspecified, using default values
 10726  200005                     	org	2097157
 10727  200005  FF                 	db	255
 10728                           
 10729                           ;Config register IDLOC6 @ 0x200006
 10730                           ;	unspecified, using default values
 10731  200006                     	org	2097158
 10732  200006  FF                 	db	255
 10733                           
 10734                           ;Config register IDLOC7 @ 0x200007
 10735                           ;	unspecified, using default values
 10736  200007                     	org	2097159
 10737  200007  FF                 	db	255
 10738                           
 10739                           	psect	config
 10740                           
 10741                           ; Padding undefined space
 10742  300000                     	org	3145728
 10743  300000  FF                 	db	255
 10744                           
 10745                           ;Config register CONFIG1H @ 0x300001
 10746                           ;	Oscillator
 10747                           ;	OSC = INTIO2, Internal oscillator block, port function on RA6 and RA7
 10748                           ;	Fail-Safe Clock Monitor Enable bit
 10749                           ;	FCMEN = 0x0, unprogrammed default
 10750                           ;	Internal/External Oscillator Switchover bit
 10751                           ;	IESO = 0x0, unprogrammed default
 10752  300001                     	org	3145729
 10753  300001  08                 	db	8
 10754                           
 10755                           ;Config register CONFIG2L @ 0x300002
 10756                           ;	Power-up Timer Enable bit
 10757                           ;	PWRT = OFF, PWRT disabled
 10758                           ;	Brown-out Reset Enable bits
 10759                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10760                           ;	Brown-out Reset Voltage bits
 10761                           ;	BORV = 0x3, unprogrammed default
 10762  300002                     	org	3145730
 10763  300002  19                 	db	25
 10764                           
 10765                           ;Config register CONFIG2H @ 0x300003
 10766                           ;	Watchdog Timer Enable bit
 10767                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10768                           ;	Watchdog Timer Postscale Select bits
 10769                           ;	WDTPS = 0xF, unprogrammed default
 10770  300003                     	org	3145731
 10771  300003  1E                 	db	30
 10772                           
 10773                           ; Padding undefined space
 10774  300004                     	org	3145732
 10775  300004  FF                 	db	255
 10776                           
 10777                           ;Config register CONFIG3H @ 0x300005
 10778                           ;	CCP2 MUX bit
 10779                           ;	CCP2MX = 0x1, unprogrammed default
 10780                           ;	PORTB A/D Enable bit
 10781                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
 10782                           ;	Low-Power Timer1 Oscillator Enable bit
 10783                           ;	LPT1OSC = 0x0, unprogrammed default
 10784                           ;	MCLR Pin Enable bit
 10785                           ;	MCLRE = 0x1, unprogrammed default
 10786  300005                     	org	3145733
 10787  300005  81                 	db	129
 10788                           
 10789                           ;Config register CONFIG4L @ 0x300006
 10790                           ;	Stack Full/Underflow Reset Enable bit
 10791                           ;	STVREN = 0x1, unprogrammed default
 10792                           ;	Single-Supply ICSP Enable bit
 10793                           ;	LVP = OFF, Single-Supply ICSP disabled
 10794                           ;	Boot Block Size Select bits
 10795                           ;	BBSIZ = 0x0, unprogrammed default
 10796                           ;	Extended Instruction Set Enable bit
 10797                           ;	XINST = 0x0, unprogrammed default
 10798                           ;	Background Debugger Enable bit
 10799                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10800  300006                     	org	3145734
 10801  300006  81                 	db	129
 10802                           
 10803                           ; Padding undefined space
 10804  300007                     	org	3145735
 10805  300007  FF                 	db	255
 10806                           
 10807                           ;Config register CONFIG5L @ 0x300008
 10808                           ;	unspecified, using default values
 10809                           ;	Code Protection bit
 10810                           ;	CP0 = 0x1, unprogrammed default
 10811                           ;	Code Protection bit
 10812                           ;	CP1 = 0x1, unprogrammed default
 10813  300008                     	org	3145736
 10814  300008  03                 	db	3
 10815                           
 10816                           ;Config register CONFIG5H @ 0x300009
 10817                           ;	unspecified, using default values
 10818                           ;	Boot Block Code Protection bitProtect Boot
 10819                           ;	CPB = 0x1, unprogrammed default
 10820                           ;	Data EEPROM Code Protection bit
 10821                           ;	CPD = 0x1, unprogrammed default
 10822  300009                     	org	3145737
 10823  300009  C0                 	db	192
 10824                           
 10825                           ;Config register CONFIG6L @ 0x30000A
 10826                           ;	unspecified, using default values
 10827                           ;	Write Protection bit
 10828                           ;	WRT0 = 0x1, unprogrammed default
 10829                           ;	Write Protection bit
 10830                           ;	WRT1 = 0x1, unprogrammed default
 10831  30000A                     	org	3145738
 10832  30000A  03                 	db	3
 10833                           
 10834                           ;Config register CONFIG6H @ 0x30000B
 10835                           ;	unspecified, using default values
 10836                           ;	Configuration Register Write Protection bit
 10837                           ;	WRTC = 0x1, unprogrammed default
 10838                           ;	Boot Block Write Protection bit
 10839                           ;	WRTB = 0x1, unprogrammed default
 10840                           ;	Data EEPROM Write Protection bit
 10841                           ;	WRTD = 0x1, unprogrammed default
 10842  30000B                     	org	3145739
 10843  30000B  E0                 	db	224
 10844                           
 10845                           ;Config register CONFIG7L @ 0x30000C
 10846                           ;	unspecified, using default values
 10847                           ;	Table Read Protection bit
 10848                           ;	EBTR0 = 0x1, unprogrammed default
 10849                           ;	Table Read Protection bit
 10850                           ;	EBTR1 = 0x1, unprogrammed default
 10851  30000C                     	org	3145740
 10852  30000C  03                 	db	3
 10853                           
 10854                           ;Config register CONFIG7H @ 0x30000D
 10855                           ;	unspecified, using default values
 10856                           ;	Boot Block Table Read Protection bit
 10857                           ;	EBTRB = 0x1, unprogrammed default
 10858  30000D                     	org	3145741
 10859  30000D  40                 	db	64
 10860                           tosu	equ	0xFFF
 10861                           tosh	equ	0xFFE
 10862                           tosl	equ	0xFFD
 10863                           stkptr	equ	0xFFC
 10864                           pclatu	equ	0xFFB
 10865                           pclath	equ	0xFFA
 10866                           pcl	equ	0xFF9
 10867                           tblptru	equ	0xFF8
 10868                           tblptrh	equ	0xFF7
 10869                           tblptrl	equ	0xFF6
 10870                           tablat	equ	0xFF5
 10871                           prodh	equ	0xFF4
 10872                           prodl	equ	0xFF3
 10873                           indf0	equ	0xFEF
 10874                           postinc0	equ	0xFEE
 10875                           postdec0	equ	0xFED
 10876                           preinc0	equ	0xFEC
 10877                           plusw0	equ	0xFEB
 10878                           fsr0h	equ	0xFEA
 10879                           fsr0l	equ	0xFE9
 10880                           wreg	equ	0xFE8
 10881                           indf1	equ	0xFE7
 10882                           postinc1	equ	0xFE6
 10883                           postdec1	equ	0xFE5
 10884                           preinc1	equ	0xFE4
 10885                           plusw1	equ	0xFE3
 10886                           fsr1h	equ	0xFE2
 10887                           fsr1l	equ	0xFE1
 10888                           bsr	equ	0xFE0
 10889                           indf2	equ	0xFDF
 10890                           postinc2	equ	0xFDE
 10891                           postdec2	equ	0xFDD
 10892                           preinc2	equ	0xFDC
 10893                           plusw2	equ	0xFDB
 10894                           fsr2h	equ	0xFDA
 10895                           fsr2l	equ	0xFD9
 10896                           status	equ	0xFD8

Data Sizes:
    Strings     1
    Constant    381
    Data        20
    BSS         400
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     46     120
    BANK0           128      0     126
    BANK1           256      4     224

Pointer List with Targets:

    manageHora@time1	PTR unsigned char  size(1) Largest target is 5
		 -> time(BANK0[5]), timeAM(BANK0[5]), 

    manageHora@state	PTR unsigned char  size(1) Largest target is 1
		 -> stateAM(COMRAM[1]), stateHora(COMRAM[1]), 

    manageHora@time2	PTR unsigned char  size(1) Largest target is 5
		 -> time(BANK0[5]), timeAM(BANK0[5]), 

    orderUsers@users	PTR struct . size(2) Largest target is 110
		 -> users2(BANK1[110]), users1(BANK1[110]), 

    changeUser@users	PTR struct . size(2) Largest target is 110
		 -> users2(BANK1[110]), users1(BANK1[110]), 

    showLCD@message2	PTR unsigned char  size(2) Largest target is 110
		 -> INFO_GAME(CODE[20]), TIME(CODE[20]), STR_6(CODE[1]), STR_4(CODE[1]), 
		 -> DELETE_USER(CODE[20]), STR_2(CODE[1]), STR_1(CODE[1]), NEW_USER(CODE[20]), 
		 -> OPTION6(CODE[20]), OPTION4(CODE[20]), OPTION2(CODE[20]), HIGH_SCORE(BANK0[20]), 
		 -> time(BANK0[5]), users2(BANK1[110]), 

    showLCD@message1	PTR unsigned char  size(2) Largest target is 110
		 -> SCORE(CODE[20]), ENTER_NEWTIME(CODE[20]), SHOW_TIME(CODE[20]), STR_5(CODE[1]), 
		 -> STR_3(CODE[1]), EDIT_NAME(CODE[20]), ENTER_NEW_NAME(CODE[20]), ENTER_NAME(CODE[20]), 
		 -> SELECT_USER(CODE[20]), OPTION5(CODE[20]), OPTION3(CODE[20]), OPTION1(CODE[20]), 
		 -> users2(BANK1[110]), users1(BANK1[110]), 

    showArrow@message	PTR unsigned char  size(2) Largest target is 110
		 -> SCORE(CODE[20]), INFO_GAME(CODE[20]), TIME(CODE[20]), ENTER_NEWTIME(CODE[20]), 
		 -> SHOW_TIME(CODE[20]), STR_6(CODE[1]), STR_5(CODE[1]), STR_4(CODE[1]), 
		 -> STR_3(CODE[1]), DELETE_USER(CODE[20]), EDIT_NAME(CODE[20]), STR_2(CODE[1]), 
		 -> ENTER_NEW_NAME(CODE[20]), STR_1(CODE[1]), ENTER_NAME(CODE[20]), NEW_USER(CODE[20]), 
		 -> SELECT_USER(CODE[20]), OPTION6(CODE[20]), OPTION5(CODE[20]), OPTION4(CODE[20]), 
		 -> OPTION3(CODE[20]), OPTION2(CODE[20]), OPTION1(CODE[20]), HIGH_SCORE(BANK0[20]), 
		 -> time(BANK0[5]), users2(BANK1[110]), users1(BANK1[110]), 

    toMarkesination@message2	PTR unsigned char  size(2) Largest target is 110
		 -> INFO_GAME(CODE[20]), TIME(CODE[20]), STR_6(CODE[1]), STR_4(CODE[1]), 
		 -> DELETE_USER(CODE[20]), STR_2(CODE[1]), STR_1(CODE[1]), NEW_USER(CODE[20]), 
		 -> OPTION6(CODE[20]), OPTION4(CODE[20]), OPTION2(CODE[20]), HIGH_SCORE(BANK0[20]), 
		 -> time(BANK0[5]), users2(BANK1[110]), 

    toMarkesination@message1	PTR unsigned char  size(2) Largest target is 110
		 -> SCORE(CODE[20]), ENTER_NEWTIME(CODE[20]), SHOW_TIME(CODE[20]), STR_5(CODE[1]), 
		 -> STR_3(CODE[1]), EDIT_NAME(CODE[20]), ENTER_NEW_NAME(CODE[20]), ENTER_NAME(CODE[20]), 
		 -> SELECT_USER(CODE[20]), OPTION5(CODE[20]), OPTION3(CODE[20]), OPTION1(CODE[20]), 
		 -> users2(BANK1[110]), users1(BANK1[110]), 

    printOptions@message2	PTR unsigned char  size(2) Largest target is 110
		 -> INFO_GAME(CODE[20]), TIME(CODE[20]), STR_6(CODE[1]), STR_4(CODE[1]), 
		 -> DELETE_USER(CODE[20]), STR_2(CODE[1]), STR_1(CODE[1]), NEW_USER(CODE[20]), 
		 -> OPTION6(CODE[20]), OPTION4(CODE[20]), OPTION2(CODE[20]), HIGH_SCORE(BANK0[20]), 
		 -> time(BANK0[5]), users2(BANK1[110]), 

    printOptions@message1	PTR unsigned char  size(2) Largest target is 110
		 -> SCORE(CODE[20]), ENTER_NEWTIME(CODE[20]), SHOW_TIME(CODE[20]), STR_5(CODE[1]), 
		 -> STR_3(CODE[1]), EDIT_NAME(CODE[20]), ENTER_NEW_NAME(CODE[20]), ENTER_NAME(CODE[20]), 
		 -> SELECT_USER(CODE[20]), OPTION5(CODE[20]), OPTION3(CODE[20]), OPTION1(CODE[20]), 
		 -> users2(BANK1[110]), users1(BANK1[110]), 

    showMessage@message	PTR unsigned char  size(2) Largest target is 110
		 -> SCORE(CODE[20]), INFO_GAME(CODE[20]), TIME(CODE[20]), ENTER_NEWTIME(CODE[20]), 
		 -> SHOW_TIME(CODE[20]), STR_6(CODE[1]), STR_5(CODE[1]), STR_4(CODE[1]), 
		 -> STR_3(CODE[1]), DELETE_USER(CODE[20]), EDIT_NAME(CODE[20]), STR_2(CODE[1]), 
		 -> ENTER_NEW_NAME(CODE[20]), STR_1(CODE[1]), ENTER_NAME(CODE[20]), NEW_USER(CODE[20]), 
		 -> SELECT_USER(CODE[20]), OPTION6(CODE[20]), OPTION5(CODE[20]), OPTION4(CODE[20]), 
		 -> OPTION3(CODE[20]), OPTION2(CODE[20]), OPTION1(CODE[20]), HIGH_SCORE(BANK0[20]), 
		 -> time(BANK0[5]), users2(BANK1[110]), users1(BANK1[110]), 


Critical Paths under _main in COMRAM

    _motorTeclat->_manageKeySMS
    _manageKeySMS->_manageKey
    _manageKey->_actionsSubMenus
    _resetHora->_TiResetTics
    _resetADC->_TiResetTics
    _orderUsers->___wmul
    _initAM->_TiResetTics
    _deleteUser->_changeUser
    _actionsSubMenus->_printLetter
    _searchLetter->_TiGetTics
    _comprovafila->_TiResetTics
    _motorTX->_selectMessage
    _motorTX->_sendMessage
    _motorRX->_convertScore
    _motorPWM->_TiGetTics
    _motorMusica->_TiGetTics
    _motorMenu->_showLCD
    _showLCD->_toMarkesination
    _toMarkesination->_printOptions
    _printOptions->_showMessage
    _showMessage->_LcPutChar
    _printLetter->_LcPutChar
    _convertScore->___lbdiv
    _showArrow->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcCursorOn->_WaitForBusy
    _LcCursorOff->_WaitForBusy
    _LcClear->_Espera
    _motorADC->_TiGetTics
    _initUsers->___wmul
    _initTeclat->_TiGetTimer
    _initMenu->_TiGetTimer
    _initHora->_TiGetTimer
    _initAltaveu->_TiGetTimer
    _initADC->_TiGetTimer
    _LcInit->_Espera
    _WaitForBusy->_TiGetTics
    _Espera->_TiGetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa

Critical Paths under _RSI_High in COMRAM

    _RSI_High->_RSI_Timer0

Critical Paths under _main in BANK0

    None.

Critical Paths under _RSI_High in BANK0

    None.

Critical Paths under _main in BANK1

    _motorMenu->_showLCD

Critical Paths under _RSI_High in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   74257
                             _LcInit
                             _TiInit
                            _initADC
                        _initAltaveu
                        _initCentral
                           _initHora
                           _initMenu
                            _initSIO
                         _initTeclat
                          _initUsers
                           _motorADC
                            _motorAM
                          _motorHora
                          _motorMenu
                        _motorMusica
                           _motorPWM
                            _motorRX
                            _motorTX
                        _motorTeclat
 ---------------------------------------------------------------------------------
 (1) _motorTeclat                                          2     2      0   17244
                                             33 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                           _checkKey
                       _manageKeySMS
                           _whichKey
 ---------------------------------------------------------------------------------
 (2) _whichKey                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _manageKeySMS                                         1     1      0   15905
                                             32 COMRAM     1     1      0
                       _TiCloseTimer
                        _TiResetTics
                       _manageCursor
                          _manageKey
 ---------------------------------------------------------------------------------
 (3) _manageKey                                            6     5      1   15019
                                             26 COMRAM     6     5      1
                    _actionsSubMenus
                         _deleteUser
                             _initAM
                         _orderUsers
                              _reset
                           _resetADC
                          _resetHora
                          _resetMenu
                      _selectMessage
                       _selectOption
                         _selectUser
 ---------------------------------------------------------------------------------
 (4) _selectUser                                           5     5      0     110
                                              5 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) _selectOption                                         3     1      2    3149
                                             16 COMRAM     3     1      2
                          _resetMenu
 ---------------------------------------------------------------------------------
 (4) _resetHora                                            0     0      0      22
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _resetADC                                             0     0      0      22
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _orderUsers                                          14    10      4    2268
                                             11 COMRAM    14    10      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _initAM                                               0     0      0      22
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (4) _deleteUser                                           6     6      0    1054
                                             16 COMRAM     6     6      0
                         _changeUser
 ---------------------------------------------------------------------------------
 (5) _changeUser                                          11     8      3    1054
                                              5 COMRAM    11     8      3
 ---------------------------------------------------------------------------------
 (4) _actionsSubMenus                                      2     1      1    4920
                                             24 COMRAM     2     1      1
                        _printLetter
                          _writeName
 ---------------------------------------------------------------------------------
 (5) _writeName                                            4     3      1     164
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _manageCursor                                         1     1      0      67
                                             12 COMRAM     1     1      0
                       _searchLetter
 ---------------------------------------------------------------------------------
 (4) _searchLetter                                         0     0      0      45
                          _TiGetTics
 ---------------------------------------------------------------------------------
 (3) _TiCloseTimer                                         1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _checkKey                                             8     0      8    1272
                                              6 COMRAM     8     0      8
                       _comprovafila
 ---------------------------------------------------------------------------------
 (3) _comprovafila                                         0     0      0      22
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _motorTX                                              2     2      0      44
                                              6 COMRAM     2     2      0
                      _selectMessage
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _sendMessage                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _motorRX                                              1     1      0     468
                                             10 COMRAM     1     1      0
                       _convertScore
                       _updatePoints
 ---------------------------------------------------------------------------------
 (2) _updatePoints                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorPWM                                             2     2      0      67
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _motorMusica                                          0     0      0      67
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _motorMenu                                            0     0      0   46018
                        _printLetter
                          _resetMenu
                            _showLCD
 ---------------------------------------------------------------------------------
 (2) _showLCD                                              6     2      4   39409
                                             44 COMRAM     2     2      0
                                              0 BANK1      4     0      4
                           _LcGotoXY
                          _LcPutChar
                       _printOptions
                          _showArrow
                    _toMarkesination
 ---------------------------------------------------------------------------------
 (3) _toMarkesination                                     12     6      6   16591
                                             32 COMRAM    12     6      6
                           _LcGotoXY
                          _LcPutChar
                          _TiGetTics
                        _TiResetTics
                       _convertScore
                       _printOptions
 ---------------------------------------------------------------------------------
 (4) _printOptions                                         4     0      4   11062
                                             28 COMRAM     4     0      4
                           _LcGotoXY
                          _LcPutChar
                        _printLetter
                        _showMessage
 ---------------------------------------------------------------------------------
 (5) _showMessage                                          6     4      2    2348
                                             22 COMRAM     6     4      2
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (5) _printLetter                                          2     1      1    4482
                                             22 COMRAM     2     1      1
                           _LcGotoXY
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (2) _convertScore                                         1     1      0     468
                                              9 COMRAM     1     1      0
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     314
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _showArrow                                            6     2      4    4862
                                             22 COMRAM     6     2      4
                           _LcGotoXY
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (6) _LcPutChar                                            1     1      0    2108
                                             21 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (7) _LcGotoXY                                             8     7      1    1776
                                             13 COMRAM     8     7      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (7) _CantaData                                            1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (1) _motorHora                                            2     2      0    3304
                                             16 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                         _manageHora
                          _resetMenu
 ---------------------------------------------------------------------------------
 (1) _motorAM                                              2     2      0    3326
                                             16 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                         _manageHora
                          _resetMenu
                      _selectMessage
 ---------------------------------------------------------------------------------
 (5) _resetMenu                                            0     0      0    2127
                            _LcClear
                        _LcCursorOff
                         _LcCursorOn
 ---------------------------------------------------------------------------------
 (6) _LcCursorOn                                           0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (6) _LcCursorOff                                          0     0      0     310
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (6) _LcClear                                              0     0      0    1507
                            _CantaIR
                             _Espera
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (2) _manageHora                                           5     1      4    1110
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _motorADC                                             2     2      0      89
                                             12 COMRAM     2     2      0
                          _TiGetTics
                        _TiResetTics
                      _selectMessage
 ---------------------------------------------------------------------------------
 (4) _selectMessage                                        1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initUsers                                            6     6      0    1223
                                             11 COMRAM     6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     901
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _initTeclat                                           0     0      0      90
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _initSIO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initMenu                                             0     0      0     112
                         _TiGetTimer
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _initHora                                             0     0      0     112
                         _TiGetTimer
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _initCentral                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAltaveu                                          0     0      0     112
                         _TiGetTimer
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0      90
                         _TiGetTimer
 ---------------------------------------------------------------------------------
 (1) _TiInit                                               1     1      0      68
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               5     4      1    1823
                                             16 COMRAM     5     4      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                         _TiGetTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (7) _WaitForBusy                                          1     1      0      90
                                             12 COMRAM     1     1      0
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (2) _TiGetTimer                                           2     2      0      90
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _Espera                                               4     0      4    1197
                                             12 COMRAM     4     0      4
                          _TiGetTics
                        _TiResetTics
 ---------------------------------------------------------------------------------
 (8) _TiResetTics                                          1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TiGetTics                                            7     5      2      45
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _CantaIR                                              1     1      0     220
                                              7 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (8) _CantaPartBaixa                                       2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (8) _CantaPartAlta                                        2     2      0      88
                                              5 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _RSI_High                                            4     4      0       0
                                              1 COMRAM     4     4      0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (11) _RSI_Timer0                                          1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LcInit
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _EscriuPrimeraOrdre
     _Espera
       _TiGetTics
       _TiResetTics
     _TiGetTimer
     _WaitForBusy
       _TiGetTics
       _TiResetTics
   _TiInit
   _initADC
     _TiGetTimer
   _initAltaveu
     _TiGetTimer
     _TiResetTics
   _initCentral
   _initHora
     _TiGetTimer
     _TiResetTics
   _initMenu
     _TiGetTimer
     _TiResetTics
   _initSIO
   _initTeclat
     _TiGetTimer
   _initUsers
     ___wmul
   _motorADC
     _TiGetTics
     _TiResetTics
     _selectMessage
   _motorAM
     _TiGetTics
     _TiResetTics
     _manageHora
     _resetMenu
       _LcClear
         _CantaIR
         _Espera
         _WaitForBusy
       _LcCursorOff
         _CantaIR
         _WaitForBusy
       _LcCursorOn
         _CantaIR
         _WaitForBusy
     _selectMessage
   _motorHora
     _TiGetTics
     _TiResetTics
     _manageHora
     _resetMenu
   _motorMenu
     _printLetter
       _LcGotoXY
         _CantaIR
         _WaitForBusy
       _LcPutChar
         _CantaData
           _CantaPartAlta
           _CantaPartBaixa
         _LcGotoXY
         _WaitForBusy
     _resetMenu
     _showLCD
       _LcGotoXY
       _LcPutChar
       _printOptions
         _LcGotoXY
         _LcPutChar
         _printLetter
         _showMessage
           _LcPutChar
       _showArrow
         _LcGotoXY
         _LcPutChar
       _toMarkesination
         _LcGotoXY
         _LcPutChar
         _TiGetTics
         _TiResetTics
         _convertScore
           ___lbdiv
         _printOptions
   _motorMusica
     _TiGetTics
     _TiResetTics
   _motorPWM
     _TiGetTics
     _TiResetTics
   _motorRX
     _convertScore
     _updatePoints
   _motorTX
     _selectMessage
     _sendMessage
   _motorTeclat
     _TiGetTics
     _TiResetTics
     _checkKey
       _comprovafila
         _TiResetTics
     _manageKeySMS
       _TiCloseTimer
       _TiResetTics
       _manageCursor
         _searchLetter
           _TiGetTics
       _manageKey
         _actionsSubMenus
           _printLetter
           _writeName
         _deleteUser
           _changeUser
         _initAM
           _TiResetTics
         _orderUsers
           ___wmul
         _reset
         _resetADC
           _TiResetTics
         _resetHora
           _TiResetTics
         _resetMenu
         _selectMessage
         _selectOption
           _resetMenu
         _selectUser
     _whichKey

 _RSI_High (ROOT)
   _RSI_Timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      4      E0       6       87.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0      7E       4       98.4%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2E      78       1       95.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1D6       7        0.0%
DATA                 0      0     1D6       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 13 10:37:19 2022

          TiResetTics@Handle 000005                            _c 000034                            _f 000035  
                 _RSI_Timer0 000000                           _AM 000043                           _UP 000029  
                         _TX 007C16          ___wmul@multiplicand 000007                          l501 00001E  
                        l616 000068                          l609 000028                          l499 000014  
                        l860 00017E                          _HHT 000037                          _key 000036  
                        _pos 000042             ??_CantaPartBaixa 000005                          prod 000FF3  
                        wreg 000FE8              selectOption@max 000010              selectOption@min 000012  
                       l1020 000026                         l1111 000172                         l1112 0001C4  
                       l1104 000112                         l1113 00019C                         l1109 000148  
                       l1241 000016                         l1074 000134                         l1069 000142  
                       l1270 000002                         l1273 00001C                         l3201 000012  
                       l3213 00003A                         l3231 00007A                         l3207 000026  
                       l1560 000024                         l5001 000042                         l3225 000064  
                       l3243 0000A4                         l3219 00004E                         l4205 000070  
                       l3261 0000E4                         l3237 00008E                         l4303 00003C  
                       l4207 000094                         l3255 0000CE                         l4153 000012  
                       l4313 000060                         l3249 0000BA                         l4307 000048  
                       l4411 000012                         l5221 000004                         l4325 000088  
                       l4309 00004E                         l6013 000008                         l4183 000004  
                       l4423 00002E                         l4415 000018                         l6111 0000B2  
                       l6103 000096                         l4281 000062                         l4361 0000C4  
                       l5161 00000E                         l4345 00002E                         l4179 000006  
                       l4195 000038                         l4187 000012                         l4267 00002C  
                       l4427 000036                         l4339 00001C                         l4363 0000CC  
                       l4611 000086                         l6027 000070                         l6019 000010  
                       l6051 00021E                         l4443 000028                         l6131 000106  
                       l6107 0000A4                         l5181 000020                         l4269 000038  
                       l4613 00008A                         l5173 00002A                         l4461 00003A  
                       l6061 000048                         l6045 000206                         l4445 00002A  
                       l4437 000016                         l6205 000222                         l6117 0000CE  
                       l6301 0000B8                         l5263 00002C                         l4199 000048  
                       l4287 000072                         l4279 000056                         l4367 000130  
                       l5167 00001C                         l4439 00001A                         l6231 00025E  
                       l6215 00023E                         l6223 00024E                         l6143 000136  
                       l5505 000002                         l4609 00007A                         l4617 000098  
                       l6073 000020                         l6313 000108                         l5179 000014  
                       l5603 000008                         l5531 00006C                         l5523 000052  
                       l4627 0000C2                         l6411 0001E2                         l6243 000290  
                       l6147 000144                         l6067 000004                         l6307 0000E0  
                       l5189 000040                         l5517 000032                         l5509 00001A  
                       l4653 000038                         l4637 0000EA                         l4629 0000C6  
                       l4565 000020                         l4573 000024                         l4493 00003A  
                       l6245 000294                         l6173 0001B8                         l6157 000186  
                       l6325 000158                         l5703 000092                         l5615 000048  
                       l5607 000020                         l5535 000074                         l5519 000038  
                       l5543 000086                         l4647 00001E                         l6503 0000D0  
                       l4479 000088                         l6247 00029A                         l6087 000058  
                       l6255 0002A8                         l6319 000130                         l6271 000014  
                       l6425 000020                         l6505 0000E8                         l6521 000150  
                       l4489 00002E                         l6169 0001A8                         l6257 0002DE  
                       l6441 000028                         l6419 000018                         l5619 00006C  
                       l5539 00007C                         l4659 000052                         l4595 000040  
                       l4915 0000E8                         l6371 0000E2                         l6363 00009A  
                       l5731 000030                         l5723 000008                         l5651 00008E  
                       l5635 00001A                         l5571 000072                         l5563 00003A  
                       l6195 000202                         l6099 000088                         l6283 000040  
                       l6347 0001B4                         l6451 000092                         l6443 00004E  
                       l5661 000008                         l4597 00004C                         l6525 000170  
                       l5717 000026                         l5741 000058                         l5653 0000A2  
                       l5645 000052                         l5573 00007A                         l5557 000022  
                       l6189 0001F4                         l6197 000208                         l6277 00002A  
                       l6445 000074                         l6461 0000AC                         l4935 000206  
                       l4919 00013C                         l4951 00024C                         l6367 0000BE  
                       l6535 0001B4                         l6519 000128                         l5647 000060  
                       l5575 000082                         l5583 00009A                         l4871 000028  
                       l6295 000090                         l6439 000002                         l5665 00001E  
                       l4929 0001CE                         l6545 000200                         l6529 000190  
                       l5577 00008A                         l5585 0000CE                         l5569 000068  
                       l6289 000068                         l6457 0000A2                         l5691 00006C  
                       l5683 00005A                         l5675 00003E                         l4955 00027C  
                       l6555 000238                         l6547 000220                         l6539 0001D4  
                       l6483 00005A                         l5579 000092                         l4957 00027E  
                       l4949 000248                         l6477 000032                         l6485 000072  
                       l5589 0000D4                         l4975 000006                         l4983 000014  
                       l5695 00007E                         l5687 000066                         l5679 00004C  
                       l4959 000282                         l6567 000286                         l6495 0000A4  
                       l4879 000010                         l4969 000036                         l4899 00003A  
                       l4997 000038                         l6589 000032                         l5993 0000C0  
                       l5977 00000E                         l5987 0000B8                         STR_1 00017E  
                       STR_2 000000                         STR_3 000000                         STR_4 000000  
                       STR_5 000000                         STR_6 000000                         u2220 00001C  
                       u2240 000034                         u3300 000024                         u2260 00004A  
                       _LEFT 000027                         u2238 00001E                         u3320 00003A  
                       u3400 00003A                         u2280 000064                         u4120 000022  
                       _DOWN 000028                         u2258 000036                         u3340 000054  
                       u3420 000054                         u5020 00000C                         u4140 000032  
                       u3318 000026                         u2278 00004C                         u5030 000014  
                       u4150 000038                         u3280 00000C                         u3360 00000C  
                       u5040 00006C                         u5105 000022                         u3338 00003C  
                       u3418 00003C                         u2298 000066                         u4170 000064  
                       u5106 000024                         u5115 00002C                         u3380 000024  
                       u6100 00001A                         u5116 00002E                         u3358 000056  
                       u3438 000056                         u4190 000072                         u5047 000062  
                       u3800 0000BE                         u3298 00000E                         u3378 00000E  
                       u3810 0000F8                         u7010 000084                         u3740 00000C  
                       u3398 000026                         u3830 00012A                         u3750 000014  
                       u3807 0000B4                         u5095 000018                         u5096 00001A  
                       u6400 000048                         u3817 0000EE                         u3770 000056  
                       u6250 00008A                         u6260 00013C                         u6420 000064  
                       u3837 000120                         u3790 000082                         u4910 0000E2  
                       u7230 00001A                         u6510 0000DC                         u7160 00009C  
                       u3880 00001C                         u4920 000106                         u4840 00004C  
                       u6280 000150                         u6440 000072                         u6360 00002E  
                       u3777 00004C                         u5570 000100                         u7170 0000FA  
                       u4930 000180                         u7250 000042                         u6290 00021A  
                       u6530 0000E8                         u7340 0000F4                         u6380 00003A  
                       u7180 000086                         u4917 0000D8                         u4870 000062  
                       u7350 0000FC                         u7270 000080                         u6550 0000F6  
                       u4960 0001C2                         u4880 0000A0                         u4937 000176  
                       u4970 0001EC                         u6570 000112                         u5940 000068  
                       u6590 000120                         u4967 0001B8                         u4887 000096  
                       u6930 000198                         u6940 00002C                         u6790 000286  
                       u6960 000060                         u6947 000022                         u6990 000076  
                       u6967 000056                         _TIME 000052              __end_of_OPTION1 00017E  
            __end_of_OPTION2 00016A              __end_of_OPTION3 000156              __end_of_OPTION4 000142  
            __end_of_OPTION5 00012E              __end_of_OPTION6 00011A                         _key2 00001F  
                       _key3 00001B                         _key4 000017                         _key5 000013  
                       _key6 00000F                         _key7 000006                         _key8 00000B  
                       _key9 000001                         _main 000000                         _name 000018  
                       _nota 00000D                         _time 000065                         fsr0h 000FEA  
                       fsr1h 000FE2                         indf0 000FEF                         fsr2h 000FDA  
                       fsr0l 000FE9                         indf1 000FE7                         indf2 000FDF  
                       fsr1l 000FE1                         fsr2l 000FD9                   _LcCursorOn 000000  
                       btemp 000000                         _user 000046                ?_manageKeySMS 000000  
                       prodh 000FF4                ?_manageCursor 000000                         prodl 000FF3  
            __end_of_LcClear 000020                         start 000000*             __end_of_CantaIR 000032  
               ?_initCentral 000000                 ?_initAltaveu 000000                ?_comprovafila 000000  
          TiGetTimer@counter 000006                 ___param_bank 000000                ?_TiCloseTimer 000000  
              ?_convertScore 000000             orderUsers@offset 00000D                  Espera@Timer 00000C  
                      ?_main 000000              __end_of___lbdiv 00003A                        _ARROW 000023  
                      _RCREG 000FAE                        _RIGHT 000026                        _RCSTA 000FAB  
                      _SCORE 00003E                        _TMR0L 000FD6                        _SPBRG 000FAF  
                      _PORTD 000F83             __end_of_NEW_USER 0000F2                        _TRISC 000F94  
                      _TRISD 000F95                        _TXREG 000FAD                        _TXSTA 000FAC  
                      _Files 000033             showArrow@message 000016                        _Timer 00000A  
                      _mGame 000040              __end_of_initADC 000018              __end_of_initSIO 000046  
                      _array 000045                        _arrow 000026                        _first 000023  
                 _ColumnaAct 000030                        _score 00001B                        _reset 000000  
                      _timer 000039                        _times 00002E                  _LcCursorOff 000000  
                      _state 000038             __end_of_RSI_High 00002C              __end_of_showLCD 0001E8  
            __end_of_motorAM 000090                        tablat 000FF5              __end_of_motorRX 0000AE  
            __end_of_motorTX 0000F2               printLetter@key 000017                ??_TiResetTics 000005  
                      ttemp5 000001                        ttemp6 000004                        ttemp7 000008  
             ??_manageKeySMS 000020                        status 000FD8                        wtemp8 000001  
             ??_manageCursor 00000C                 _usersPrinted 00001F              ___lbdiv@divisor 000005  
           __end_of_LcGotoXY 0000AA              ___lbdiv@counter 000007            __end_of_EDIT_NAME 0000DE  
             ??_comprovafila 000006                 __end_of_LEFT 000028                 __end_of_DOWN 000029  
             LcInit@columnes 000010                 __end_of_TIME 000066                   _TiGetTimer 000000  
    EscriuPrimeraOrdre@ordre 000006               ??_TiCloseTimer 000005               ??_convertScore 000009  
            __initialization 000000              _toMarkesination 000000                 __end_of_key2 000023  
               __end_of_key3 00001F                 __end_of_key4 00001B                 __end_of_key5 000017  
               __end_of_key6 000013                 __end_of_key7 00000B                 __end_of_key8 00000F  
         __size_of_CantaData 000000                 __end_of_key9 000006                 __end_of_main 000058  
                ?_RSI_Timer0 000000        __end_of_selectMessage 00000C                       ??_main 00002E  
         __size_of_LcPutChar 000000                 ?_sendMessage 000000                __activetblptr 000002  
          __end_of_INFO_GAME 00003E      actionsSubMenus@numChars 000018                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _ADRESH 000FC4                       _ADRESL 000FC3  
                     ?_reset 000000                    ??_LcClear 000010                    ??_CantaIR 000007  
                     i2l5201 00001E                       i2l5213 00005A                       i2l5205 00002E  
                     i2l5209 000054               LcGotoXY@Fisica 000012                ??_WaitForBusy 00000C  
               manageKey@key 00001D           __size_of_TiGetTics 000000             __end_of_checkKey 000048  
                ?_LcCursorOn 000000                       _LcInit 000000                       _Espera 000000  
                     _TiInit 000000                 _LcGotoXY$837 000010          __end_of_TiResetTics 000018  
           _timer@TSms$F1071 00002F            __end_of_SHOW_TIME 00008E                       _hScore 000000  
                     _h_Tics 000008                       ___wmul 000000                    ??___lbdiv 000006  
            changeUser@users 000005             __end_of_initHora 00001C                 ?_motorTeclat 000000  
           __end_of_initMenu 000080                       _initAM 000000                 ?_motorMusica 000000  
                     _posLCD 000027                       clear_0 000026                       clear_1 000032  
                     clear_2 00003E                       _longer 00002A                       _second 000022  
                     _timeAM 000060                       _showAM 00003C                       isa$std 000001  
                     _points 000003                       _users1 00006E                       _users2 000000  
                     _sumand 000020  __size_of_EscriuPrimeraOrdre 000000                    ??_initADC 000007  
           __end_of_resetADC 000008                 ?_showMessage 000016                    ??_initSIO 000005  
           __end_of_motorADC 0000B6       __size_of_CantaPartAlta 000000             __end_of_motorPWM 000076  
               __mediumconst 000000*            __end_of_whichKey 0000EA                    ??_showLCD 00002C  
                     tblptrh 000FF7                       tblptrl 000FF6                    ??_motorAM 000010  
                     tblptru 000FF8                    ??_motorRX 00000A                    ??_motorTX 000006  
          __end_of_CantaData 000032                 ?_printLetter 000016             ___lbdiv@dividend 000006  
            _actionsSubMenus 000000          __size_of_RSI_Timer0 000000                   __accesstop 000000* 
    __end_of__initialization 000044      __end_of_toMarkesination 00028A            __end_of_LcPutChar 00007E  
              ___rparam_used 000001                __end_of_ARROW 000026                __end_of_RIGHT 000027  
              __end_of_SCORE 000052        changeUser@numUsersAux 000007                  ?_TiGetTimer 000000  
             __pcstackCOMRAM 000000          __end_of_WaitForBusy 000040                 __pidataBANK0 000000  
       __size_of_initCentral 000000         __size_of_initAltaveu 000000                __end_of_reset 00001E  
           ___lbdiv@quotient 000008                   __end_of_UP 00002A                    ?_RSI_High 000000  
          __end_of_TiGetTics 00002C                ?_searchLetter 000000         __end_of_manageKeySMS 0001C0  
       __end_of_manageCursor 000018          __size_of_LcCursorOn 000000                    ?_LcGotoXY 00000D  
       __end_of_comprovafila 00002E           __end_of_ENTER_NAME 0000B6         __end_of_TiCloseTimer 000014  
       __end_of_convertScore 000058           selectOption@option 000011                      ??_reset 000005  
         __size_of_manageKey 000000            writeName@numChars 000005                   __pbssBANK0 000000  
                 __pbssBANK1 000000                   _changeUser 000000                  _TiResetTics 000000  
         __size_of_initUsers 000000                      ?_LcInit 000010                _CantaPartAlta 000000  
                    ?_Espera 00000C                      ?_TiInit 000000                   _deleteUser 000000  
       toMarkesination@limit 000024                      ?___wmul 000005                ?_selectOption 000010  
                    ?_initAM 000000                      _BAUDCON 000FB8           __size_of_resetHora 000000  
         __size_of_resetMenu 000000               ??_searchLetter 00000C                   ??_RSI_High 000001  
         __size_of_motorHora 000000           __size_of_motorMenu 000000       toMarkesination@refresh 000025  
         __size_of_showArrow 000000                      LcInit@i 000013                    ?_checkKey 000006  
    __end_of_actionsSubMenus 00008E              LcGotoXY@Columna 000014                   ??_LcGotoXY 00000E  
       __size_of_sendMessage 000000            _timer@THora$F1425 000015                      _OPTION1 00016A  
                    _OPTION2 000156                      _OPTION3 000142                      _OPTION4 00012E  
                    _OPTION5 00011A                      _OPTION6 000106          __size_of_TiGetTimer 000000  
               ?_LcCursorOff 000000                      _LcClear 000000                      _CantaIR 000000  
          _timer@TMenu$F1145 000029                   _manageHora 000000                      _FilaAct 000031  
                  ?_initHora 000000                    ?_initMenu 000000                  _WaitForBusy 000000  
             ?_CantaPartAlta 000000             ?_toMarkesination 000020           __size_of_writeName 000000  
           changeUser@i_1363 00000E              __size_of_LcInit 000000               checkKey@column 00000D  
                  ?_resetADC 000000                      __Hparam 000000                   checkKey@D0 000006  
                 checkKey@D1 000008                   checkKey@D2 00000A              __size_of_Espera 000000  
                    __Lparam 000000                    ?_motorADC 000000              __size_of_TiInit 000000  
                  ?_motorPWM 000000                    ?_whichKey 000000               ??_selectOption 000012  
                 _initTeclat 000000                 ??_RSI_Timer0 000000                    _EDIT_NAME 0000CA  
                    ___lbdiv 000000                  orderUsers@i 000015                  orderUsers@j 000017  
                orderUsers@k 000013              __size_of___wmul 000000            __end_of_manageKey 0002EA  
            __size_of_initAM 000000                      _channel 000011                      __pcinit 000000  
                    __ramtop 000000*                     __ptext0 000000                      __ptext1 000000  
                    __ptext2 000000                      __ptext3 000000                      __ptext4 000000  
                    __ptext5 000000                      __ptext6 000000                      __ptext7 000000  
                    __ptext8 000000                      __ptext9 000000         __size_of_motorTeclat 000000  
                  _T0CONbits 000FD5                      _initADC 000000         __size_of_motorMusica 000000  
                  CantaIR@IR 000007        __end_of_ENTER_NEWTIME 00007A                      _initSIO 000000  
                    _counter 000006            __end_of_initUsers 0000FC                      _modeSMS 00003B  
                 ??_checkKey 00000E                      _message 00001D                      _seconds 000013  
      deleteUser@numUsersAux 000016                      _playing 000044                      _posName 00001C  
                    _showLCD 000000                      _motorAM 000000         __size_of_showMessage 000000  
                    _motorRX 000000                      _motorTX 000000                      _timerAM 000014  
                    _subMenu 000041                      _stateAM 000048                    _INFO_GAME 00002A  
            WaitForBusy@Busy 00000C                  motorRX@info 00001A         end_of_initialization 000044  
                ?_changeUser 000005         __size_of_printLetter 000000           __end_of_RSI_Timer0 000064  
                 ??_initHora 000007            __end_of_resetHora 00000C                   ??_initMenu 000007  
          __end_of_resetMenu 00009C           TiCloseTimer@Handle 000005      __size_of_CantaPartBaixa 000000  
              __Lmediumconst 000000*             TiGetTics@Handle 000009                   _selectUser 000000  
               ??_LcCursorOn 00000D            __end_of_motorHora 0000B0            __end_of_motorMenu 00028C  
          __end_of_showArrow 000072                   _orderUsers 000000                   ??_resetADC 000006  
                ?_deleteUser 000000                   ??_motorADC 00000C                   ??_motorPWM 00000C  
            manageKeySMS@key 000020              TiGetTics@actual 00000A                   ??_whichKey 000005  
                    postdec1 000FE5                      postdec2 000FDD                      postinc0 000FEE  
                    postinc1 000FE6                      postinc2 000FDE          __end_of_DELETE_USER 0000CA  
      __size_of_manageKeySMS 000000        __size_of_manageCursor 000000                 writeName@key 000008  
                  _SHOW_TIME 00007A        __size_of_comprovafila 000000                    _PORTCbits 000F82  
                  _PORTDbits 000F83                ?_printOptions 00001C        __size_of_TiCloseTimer 000000  
      __size_of_convertScore 000000              manageHora@time1 000005              manageHora@time2 000006  
            manageHora@state 000007            __end_of_writeName 000054             ?_actionsSubMenus 000018  
         __end_of_LcCursorOn 00000C                    _TRISAbits 000F92                    _TRISBbits 000F93  
                  _TRISCbits 000F94              sendMessage@info 000005              manageCursor@key 00000C  
     __size_of_selectMessage 000000                  ?_manageHora 000005              ??_CantaPartAlta 000005  
              selectUser@pos 000009                    _CantaData 000000         __end_of_searchLetter 00002C  
                  _TXSTAbits 000FAC                 _manageKeySMS 000000                 _manageCursor 000000  
              ?_updatePoints 000000                 ??_TiGetTimer 000005               __end_of_LcInit 000102  
               _comprovafila 000000                    _LcPutChar 000000           actionsSubMenus@key 000019  
             __end_of_Espera 00001A              orderUsers@extra 00000E               __end_of_TiInit 000044  
               _TiCloseTimer 000000                  ?_initTeclat 000000                 _convertScore 000000  
            orderUsers@users 00000B   __end_of_EscriuPrimeraOrdre 00007A                 LcGotoXY@Fila 00000D  
            showArrow@column 000018                   manageKey@i 00001E               __end_of___wmul 000026  
             ??_printOptions 000020               __end_of_initAM 000022          __size_of_changeUser 000000  
              TiInit@counter 000005              showLCD@message1 000000              showLCD@message2 000002  
          __size_of_RSI_High 000000          start_initialization 000000                    _TiGetTics 000000  
        __size_of_deleteUser 000000            __size_of_LcGotoXY 000000           __end_of_TiGetTimer 00003A  
       __end_of_selectOption 000030                  _mModUSelect 00003F       actionsSubMenus@posTime 00003A  
               ?_TiResetTics 000000         __size_of_LcCursorOff 000000                   ?_CantaData 000000  
                ?_selectUser 000000                     ??_LcInit 000011                  _DELETE_USER 0000B6  
             ??_updatePoints 000005                  ?_orderUsers 00000B                ??_initCentral 000005  
              ??_initAltaveu 000007                     ??_Espera 000010                     ??_TiInit 000005  
                 ?_LcPutChar 000000                   initUsers@i 00000F                   initUsers@j 00000D  
                   ??___wmul 000009                  __pdataBANK0 000000                     ??_initAM 000006  
           checkKey@stateAux 00000C                _selectMessage 000000          __size_of_manageHora 000000  
                __pbssCOMRAM 000000                motorADC@state 000010                __pcstackBANK1 000000  
                 ?_TiGetTics 000005            __size_of_checkKey 000000          __size_of_initTeclat 000000  
                  _mModUEdit 00003E                     ?_LcClear 000000                     ?_CantaIR 000000  
             _CantaPartBaixa 000000                 ?_WaitForBusy 000000            __size_of_initHora 000000  
          __size_of_initMenu 000000      selectMessage@messageAux 000005          printLetter@numChars 000016  
                  __pintcode 000000                __pmediumconst 000000            __size_of_resetADC 000000  
                   ?___lbdiv 000005            __size_of_motorADC 000000               ?_selectMessage 000000  
          __size_of_motorPWM 000000              CantaPartBaixa@c 000006          __end_of_initCentral 000006  
          __size_of_whichKey 000000          __end_of_initAltaveu 000022                ??_sendMessage 000005  
                   ?_initADC 000000          __size_of_selectUser 000000                    _manageKey 000000  
                   ?_initSIO 000000                    _enviaDada 00001E                    _keyColumn 00002B  
                  _isPrinted 000028          __size_of_orderUsers 000000                     ?_showLCD 000000  
                   ?_motorAM 000000                     ?_motorRX 000000                     ?_motorTX 000000  
                  _initUsers 000000        __size_of_searchLetter 000000         printOptions@message1 00001C  
       printOptions@message2 00001E      toMarkesination@message1 000020      toMarkesination@message2 000022  
     __end_of_CantaPartBaixa 000068               __size_of_reset 000000                    _posLCDAux 000025  
               ??_changeUser 000008          __end_of_SELECT_USER 000106                  ??_CantaData 000007  
             ___wmul@product 000009         __end_of_printOptions 0000F0                     _LATAbits 000F89  
                   _LATBbits 000F8A                     _LATCbits 000F8B                     _LATDbits 000F8C  
               ??_deleteUser 000010                    _resetHora 000000                    _resetMenu 000000  
                  _scoreUser 000017                     _PIR1bits 000F9E                     _NEW_USER 0000DE  
                ??_LcPutChar 000015                    _motorHora 000000                    _motorMenu 000000  
                  _showArrow 000000                motorPWM@estat 00000C     __size_of_toMarkesination 000000  
              ??_motorTeclat 000021                ??_motorMusica 00000C                     _RSI_High 000000  
                  _stateHora 000049                   _ADCON0bits 000FC2            ___wmul@multiplier 000005  
               _searchLetter 000000                ??_showMessage 000018           __end_of_changeUser 000196  
                 ?_manageKey 00001A        __size_of_selectOption 000000                     Espera@ms 00000E  
                   _LcGotoXY 000000         __end_of_updatePoints 000030                  ??_TiGetTics 000007  
                LcInit@files 000012          __end_of_sendMessage 00000C                ??_printLetter 000017  
                  _writeName 000000                   ?_initUsers 000000           __end_of_deleteUser 00007E  
                  copy_data0 000014              ?_CantaPartBaixa 000000                     _Columnes 000032  
               ??_manageHora 000009            convertScore@score 000009             __size_of_LcClear 000000  
           __size_of_CantaIR 000000               _ENTER_NEW_NAME 00008E         __size_of_TiResetTics 000000  
                   __Hrparam 000000*                  ?_resetHora 000000                   ?_resetMenu 000000  
                _initCentral 000000                  _initAltaveu 000000                     __Lrparam 000000* 
            ??_selectMessage 000005                   ?_motorHora 000000                   ?_motorMenu 000000  
               ??_initTeclat 000007                   ?_showArrow 000016                 _selectOption 000000  
           __size_of___lbdiv 000000           __end_of_manageHora 00004C                  changeUser@i 00000C  
                   _checkKey 000000             __size_of_initADC 000000          __end_of_motorTeclat 0000DC  
           __size_of_initSIO 000000          __end_of_motorMusica 00002A                  _SELECT_USER 0000F2  
                   __ptext10 000000                     __ptext11 000000           _EscriuPrimeraOrdre 000000  
                   __ptext20 000000                     __ptext12 000000                     __ptext21 000000  
                   __ptext13 000000                     __ptext30 000000                     __ptext22 000000  
                   __ptext14 000000                     __ptext31 000000                     __ptext23 000000  
                   __ptext15 000000                     __ptext40 000000                     __ptext32 000000  
                   __ptext24 000000                     __ptext16 000000                     __ptext41 000000  
                   __ptext33 000000                     __ptext25 000000                     __ptext17 000000  
                   __ptext50 000000                     __ptext42 000000                     __ptext34 000000  
                   __ptext26 000000                     __ptext18 000000                     __ptext51 000000  
                   __ptext43 000000                     __ptext35 000000                     __ptext27 000000  
                   __ptext19 000000                     __ptext60 000000                     __ptext52 000000  
                   __ptext44 000000                     __ptext36 000000                     __ptext28 000000  
                   __ptext61 000000                     __ptext53 000000                     __ptext45 000000  
                   __ptext37 000000                     __ptext29 000000                     __ptext62 000000  
                   __ptext54 000000                     __ptext46 000000                     __ptext38 000000  
                   __ptext63 000000                     __ptext55 000000                     __ptext47 000000  
                   __ptext39 000000                     __ptext64 000000                     __ptext56 000000  
                   __ptext48 000000                     __ptext65 000000                     __ptext57 000000  
                   __ptext49 000000                     __ptext66 000000                     __ptext58 000000  
                   __ptext67 000000                     __ptext59 000000             __size_of_showLCD 000000  
                   __ptext69 000000             __size_of_motorAM 000000                   ?_writeName 000005  
           __size_of_motorRX 000000             __size_of_motorTX 000000          __end_of_showMessage 000138  
               _posMarkesine 000021               CantaPartAlta@c 000006          manageHora@nextState 000008  
                 _HIGH_SCORE 000000                     _s_Timers 000000           __end_of_initTeclat 000018  
   __size_of_actionsSubMenus 000000                     _initHora 000000                     _initMenu 000000  
     __end_of_ENTER_NEW_NAME 0000A2                 ??_selectUser 000005          ?_EscriuPrimeraOrdre 000000  
              __size_of_main 000000        __end_of_CantaPartAlta 000068          __end_of_printLetter 00002E  
              CantaData@Data 000007                 ??_orderUsers 00000F                   _ENTER_NAME 0000A2  
                   _numChars 00002C         __size_of_WaitForBusy 000000                     _resetADC 000000  
                   _motorADC 000000                     _posScore 000024                     _motorPWM 000000  
                   _timerADC 000012                     _numUsers 000047                     _timerPWM 00000F  
                   _showHora 00003D                     isa$xinst 000000                     _whichKey 000000  
                   int$flags 000000         ??_EscriuPrimeraOrdre 000005                 motorTX@state 000019  
                _sendMessage 000000                  ??_manageKey 00001B            ??_toMarkesination 000026  
         __end_of_selectUser 000044                   _INTCONbits 000FF2                _ENTER_NEWTIME 000066  
         __end_of_orderUsers 000242                  ??_initUsers 00000B        __size_of_printOptions 000000  
              ??_LcCursorOff 00000D            manageKey@numChars 00001A                     intlevel2 000000* 
         showMessage@message 000016                   LcPutChar@c 000015                  ??_resetHora 000006  
                ??_resetMenu 000010                   _OSCCONbits 000FD3                  ??_motorHora 000010  
                ??_motorMenu 00002E                  ??_showArrow 00001A                 showArrow@row 000019  
                _motorTeclat 000000                  _motorMusica 000000        __size_of_updatePoints 000000  
               _printOptions 000000                  _showMessage 000000                  _timerMusica 00000E  
                ??_writeName 000006                  _printLetter 000000                  _previousKey 00002D  
        __end_of_LcCursorOff 00000C                 _updatePoints 000000            ??_actionsSubMenus 000019  
